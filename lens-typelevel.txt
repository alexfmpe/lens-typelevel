-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Type-level lenses using singletons
--   
--   Type-level lenses using singletons and its defunctionalization system,
--   implemented using the same van Laarhoven encoding as the <i>lens</i>
--   package. See README for more information.
@package lens-typelevel
@version 0.1.1.0

module Data.Type.Lens.Internal

-- | A partially applied lens
data Context a b t
MkContext :: (b ~> t) -> a -> Context a b t

-- | A partially applied traversal
data Bazaar a b t
Done :: t -> Bazaar a b t
More :: a -> Bazaar a b (b ~> t) -> Bazaar a b t
type family UnBazaar (a_aEDy :: (~>) a_aEoX (f_aEoW b_aEoY)) (a_aEDz :: Bazaar a_aEoX b_aEoY t_aEoZ) :: f_aEoW t_aEoZ
sUnBazaar :: forall f_aEoW a_aEoX b_aEoY t_aEoZ (t_aEEm :: (~>) a_aEoX (f_aEoW b_aEoY)) (t_aEEn :: Bazaar a_aEoX b_aEoY t_aEoZ). SApplicative f_aEoW => Sing t_aEEm -> Sing t_aEEn -> Sing (Apply (Apply UnBazaarSym0 t_aEEm) t_aEEn :: f_aEoW t_aEoZ)

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
type MkContextSym0 = TyCon2  'MkContext
type MkContextSym1 f = TyCon1 ( 'MkContext f)
type MkContextSym2 f x =  'MkContext f x
type DoneSym0 = TyCon1  'Done
type DoneSym1 x =  'Done x
type MoreSym0 = TyCon2  'More
type MoreSym1 x = TyCon1 ( 'More x)
type MoreSym2 x b =  'More x b
data UnBazaarSym0 :: forall a6989586621679165099 b6989586621679165100 f6989586621679165098 t6989586621679165101. (~>) ((~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) ((~>) (Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) (f6989586621679165098 t6989586621679165101))
data UnBazaarSym1 (a6989586621679166004 :: (~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) :: forall t6989586621679165101. (~>) (Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) (f6989586621679165098 t6989586621679165101)
type UnBazaarSym2 (a6989586621679166004 :: (~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) (a6989586621679166005 :: Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) = UnBazaar a6989586621679166004 a6989586621679166005
instance forall a6989586621679165105 b6989586621679165106 t6989586621679165102 r6989586621679165103 s6989586621679165104 (a6989586621679166027 :: t6989586621679165102 Data.Singletons.Internal.~> (r6989586621679165103 Data.Singletons.Internal.~> s6989586621679165104)) (a6989586621679166026 :: Data.Type.Lens.Internal.Bazaar a6989586621679165105 b6989586621679165106 t6989586621679165102). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym2 a6989586621679166027 a6989586621679166026)
instance forall a6989586621679165105 b6989586621679165106 t6989586621679165102 r6989586621679165103 s6989586621679165104 (a6989586621679166026 :: t6989586621679165102 Data.Singletons.Internal.~> (r6989586621679165103 Data.Singletons.Internal.~> s6989586621679165104)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym1 a6989586621679166026)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.LiftA2BazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.LiftA2BazaarSym0
instance forall t r s a b (d :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym1 d)
instance forall t r s a b (d1 :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)) (d2 :: Data.Type.Lens.Internal.Bazaar a b t). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym2 d1 d2)
instance Data.Singletons.Prelude.Monad.Internal.PApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance forall a6989586621679165112 b6989586621679165113 t6989586621679165110 q6989586621679165111 (a6989586621679166017 :: t6989586621679165110 Data.Singletons.Internal.~> q6989586621679165111). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapBazaarSym1 a6989586621679166017)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapBazaarSym0
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapBazaarSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.PureBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.PureBazaarSym0
instance forall t6989586621679165101 a6989586621679165099 (f6989586621679165098 :: * -> *) b6989586621679165100 (a6989586621679166004 :: a6989586621679165099 Data.Singletons.Internal.~> f6989586621679165098 b6989586621679165100). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.UnBazaarSym1 a6989586621679166004)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.UnBazaarSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.Internal.UnBazaarSym0
instance forall a (f :: * -> *) b t (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.UnBazaarSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.Lambda_6989586621679166039Sym0
instance forall k2 k3 k4 k5 k6 k7 k8 (f6989586621679166035 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym1 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (x6989586621679166036 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (f6989586621679166035 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym2 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (b6989586621679166037 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (x6989586621679166036 :: k5) (f6989586621679166035 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym3 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (c6989586621679166038 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (b6989586621679166037 :: k5) (x6989586621679166036 :: k4) (f6989586621679166035 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym4 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166044 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (c6989586621679166038 :: k5) (b6989586621679166037 :: k4) (x6989586621679166036 :: k3) (f6989586621679166035 :: k2 Data.Singletons.Internal.~> k6). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym5 t6989586621679166044 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166045 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (t6989586621679166044 :: k5) (c6989586621679166038 :: k4) (b6989586621679166037 :: k3) (x6989586621679166036 :: k2 Data.Singletons.Internal.~> k6) (f6989586621679166035 :: k7). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym6 t6989586621679166045 t6989586621679166044 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.Prelude.Monad.Internal.SApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapContextSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapContextSym0
instance forall a6989586621679159061 b6989586621679159062 t6989586621679159059 q6989586621679159060 (a6989586621679159106 :: t6989586621679159059 Data.Singletons.Internal.~> q6989586621679159060). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapContextSym1 a6989586621679159106)
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapContextSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Context a b)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Context a b)


-- | Lenses and optics for manipulating DataKind-based types, powered by
--   <i>singletons</i> defunctionalization.
--   
--   See <a>Data.Type.Lens.Examples</a> for example usage and syntax.
--   
--   For the most part, you should be able to use them just like you'd use
--   the functions from the <i>lens</i> or <i>microlens</i> libraries; just
--   remember to capitalize names like <a>Over</a> and <a>Set</a>, since
--   they are type families.
--   
--   Note that the ways of "creating" a lens or optic (<a>Sets_</a>,
--   <a>Traverse_</a>, <a>To_</a>, <a>MkLens_</a>, etc. are all suffixed
--   with <tt>_</tt> for convenience, to reserve the underscoreless
--   identifiers for the fully applied type family as per <i>singletons</i>
--   library convention.
--   
--   "Value level" versions of these lenses and functions are not exported,
--   because they would be more or less completely compatible with the same
--   functions from <i>microlens</i> and <i>lens</i> packages. However,
--   when the names of these functions differ from the names of their
--   <i>lens</i> counterpart (<a>mkLens</a> and <a>ixList</a>), value-level
--   versions are provided.
--   
--   There are two main ways to define optics.
--   
--   First, you can write them by hand using <a>singletonsOnly</a>:
--   
--   <pre>
--   $(singletonsOnly [d|
--     l1 :: Functor f =&gt; LensLike (a, c) (b, c) a b
--     l1 f (x, y) = (x' -&gt; (x', y)) <a>$</a> f x
--   
--     l1Alt :: Functor f =&gt; LensLike (a, c) (b, c) a b
--     l1Alt = mkLens fst ((_, y) x -&gt; (x', y))
--   
--     getFirst :: Getting a (a, b) a
--     getFirst = to fst
--     |])
--   </pre>
--   
--   This creates the <i>type families</i> <tt>L1</tt>, <tt>L1Alt</tt>, and
--   <tt>GetFirst</tt>; however, these aren't lenses, because they aren't
--   partially applied. The lactual lenses are <tt>L1Sym0</tt>,
--   <tt>L1AltSym0</tt>, and <tt>GetFirstSym0</tt>. As a convention, it is
--   recommend to alias the <i>actual</i> lenses with an underscore suffix:
--   
--   <pre>
--   -- L1_       :: Functor f =&gt; LensLike f (a, c) (b, c) a b
--   type L1_       = L1Sym0
--   
--   -- L1Alt_    :: Functor f =&gt; LensLike f (a, c) (b, c) a b
--   type L1Alt     = L1AltSym0
--   
--   -- GetFirst_ :: Getting a (a, b) a
--   type GetFirst_ = GetFirstSym0
--   </pre>
--   
--   The number after the <tt>Sym</tt> is determined by how many arguments
--   you need to apply to your function before you get to the actual lens.
--   For example, <a>IxList</a> requires one argument (the index) to get to
--   the actual traversal, so the definition in the library is:
--   
--   <pre>
--   type IxList_ i = IxListSym1 i
--   </pre>
--   
--   Second, you can write them directly at the type level using
--   combinators like <a>MkLens_</a> and <a>To_</a>:
--   
--   <pre>
--   type GetFirst_ = <a>To_</a> <tt>FstSym0</tt>
--   </pre>
--   
--   (<tt>FstSym0</tt> is the promotion of <a>fst</a> from
--   <a>Data.Singletons.Prelude.Tuple</a>)
module Data.Type.Lens

-- | The general shape of optics in this library. ("van Laarhoven")
--   
--   For different levels of polymorphism on <tt>f</tt>, you get different
--   types of optics:
--   
--   <ul>
--   <li>If <tt>f</tt> can be any <a>Functor</a>, you have a Lens (see
--   <a>ALens</a>)</li>
--   <li>If <tt>f</tt> is only <a>Identity</a>, you have a setter (see
--   <a>ASetter</a>)</li>
--   <li>If <tt>f</tt> is only <tt><a>Const</a> R</tt> for a specific
--   <tt>R</tt>, you have a getter of <tt>R</tt> (see <a>Getting</a>)</li>
--   <li>If <tt>f</tt> can be <tt><a>Const</a> r</tt> for any <a>Monoid</a>
--   <tt>r</tt>, you have a Fold.</li>
--   <li>If <tt>f</tt> can be any <a>Applicative</a>, you have a Traversal
--   (see <a>ATraversal</a>)</li>
--   </ul>
--   
--   Normal lens libraries implement the constraints for lenses, folds, and
--   traversals using RankN types, but we don't do that here to avoid
--   working with RankN kinds.
type LensLike f s t a b = (a -> f b) -> (s -> f t)

-- | A <a>LensLike</a> that does not change any types.
type LensLike' f s a = LensLike f s s a a

-- | A settable "lens". Usable with <a>Over</a> (<a>%~</a>), constructable
--   with <a>To</a> or any of the general lens constructors.
--   
--   See <a>LensLike</a> for more information.
type ASetter s t a b = LensLike Identity s t a b
type family Over (a_aRoI :: (~>) ((~>) a_aQjo (Identity b_aQjp)) ((~>) s_aQjm (Identity t_aQjn))) (a_aRoJ :: (~>) a_aQjo b_aQjp) (a_aRoK :: s_aQjm) :: t_aQjn

-- | Infix application of <a>Over</a>
type l %~ f = OverSym2 l f
infixr 4 %~
sOver :: forall s_aQjm t_aQjn a_aQjo b_aQjp (t_aRqh :: (~>) ((~>) a_aQjo (Identity b_aQjp)) ((~>) s_aQjm (Identity t_aQjn))) (t_aRqi :: (~>) a_aQjo b_aQjp) (t_aRqj :: s_aQjm). Sing t_aRqh -> Sing t_aRqi -> Sing t_aRqj -> Sing (Apply (Apply (Apply OverSym0 t_aRqh) t_aRqi) t_aRqj :: t_aQjn)

-- | Singleton mirror of <a>Over</a> and <a>%~</a>.
--   
--   Note that this conflicts in naming from <a>%%~</a> in <i>lens</i>,
--   which is <a>id</a>.
(%%~) :: Sing l -> Sing f -> Sing x -> Sing (x & (l %~ f))
type family Set (a_aRoZ :: (~>) ((~>) a_aQjk (Identity b_aQjl)) ((~>) s_aQji (Identity t_aQjj))) (a_aRp0 :: b_aQjl) (a_aRp1 :: s_aQji) :: t_aQjj

-- | Infix application of <a>Set</a>
type l .~ x = SetSym2 l x
infixr 4 .~
sSet :: forall s_aQji t_aQjj a_aQjk b_aQjl (t_aRqn :: (~>) ((~>) a_aQjk (Identity b_aQjl)) ((~>) s_aQji (Identity t_aQjj))) (t_aRqo :: b_aQjl) (t_aRqp :: s_aQji). Sing t_aRqn -> Sing t_aRqo -> Sing t_aRqp -> Sing (Apply (Apply (Apply SetSym0 t_aRqn) t_aRqo) t_aRqp :: t_aQjj)

-- | Singleton mirror of <a>Set</a> and <a>.~</a>.
(%.~) :: Sing l -> Sing y -> Sing x -> Sing (x & (l .~ y))

-- | Create a Setter from a setting function.
--   
--   <pre>
--   <a>Sets_</a> :: ((a ~&gt; b) ~&gt; (s ~&gt; t)) -&gt; <a>ASetter</a> s t a b
--   </pre>
type Sets_ f = SetsSym1 f
type family Sets (a_aRo3 :: (~>) ((~>) a_aQjc b_aQjd) ((~>) s_aQje t_aQjf)) (a_aRo4 :: (~>) a_aQjc (Identity b_aQjd)) (a_aRo5 :: s_aQje) :: Identity t_aQjf
sSets :: forall a_aQjc b_aQjd s_aQje t_aQjf (t_aRq7 :: (~>) ((~>) a_aQjc b_aQjd) ((~>) s_aQje t_aQjf)) (t_aRq8 :: (~>) a_aQjc (Identity b_aQjd)) (t_aRq9 :: s_aQje). Sing t_aRq7 -> Sing t_aRq8 -> Sing t_aRq9 -> Sing (Apply (Apply (Apply SetsSym0 t_aRq7) t_aRq8) t_aRq9 :: Identity t_aQjf)

-- | A retrieving "lens". If <tt>r</tt> is fixed to a type, it's a Getter
--   for that type. If <tt>r</tt> is polymorphic over all <a>Monoid</a>,
--   then it's a Fold over <tt>a</tt>s.
--   
--   As a Getter, usable with <a>View</a> (<a>^.</a>); as a Fold, usable
--   with <a>ToListOf</a> (<a>^..</a>), <a>Preview</a> (<a>^?</a>), etc.
--   
--   Normal lens libraries implement the constraints for folds using RankN
--   types, but we don't do that here to avoid working with RankN kinds.
--   
--   See <a>LensLike</a> for more information.
type Getting r s a = LensLike (Const r) s s a a
type family View (a_aRov :: (~>) ((~>) a_aQjg ((Const a_aQjg :: Type -> Type) a_aQjg)) ((~>) s_aQjh ((Const a_aQjg :: Type -> Type) s_aQjh))) (a_aRow :: s_aQjh) :: a_aQjg

-- | Infix application of <a>View</a>
type x ^. l = View l x
infixl 8 ^.
sView :: forall a_aQjg s_aQjh (t_aRqd :: (~>) ((~>) a_aQjg ((Const a_aQjg :: Type -> Type) a_aQjg)) ((~>) s_aQjh ((Const a_aQjg :: Type -> Type) s_aQjh))) (t_aRqe :: s_aQjh). Sing t_aRqd -> Sing t_aRqe -> Sing (Apply (Apply ViewSym0 t_aRqd) t_aRqe :: a_aQjg)

-- | Singleton mirror of <a>View</a> and <a>%^.</a>.
(%^.) :: Sing x -> Sing l -> Sing (x ^. l)

-- | Create a Getter from a getting function.
--   
--   <pre>
--   <a>To_</a> :: (a ~&gt; b) -&gt; <a>Getting</a> b a b
--   </pre>
type To_ f = ToSym1 f
type family To (a_aRnM :: (~>) s_aQj9 a_aQja) (a_aRnN :: (~>) a_aQja ((Const r_aQjb :: Type -> Type) a_aQja)) (a_aRnO :: s_aQj9) :: (Const r_aQjb :: Type -> Type) s_aQj9
sTo :: forall s_aQj9 a_aQja r_aQjb (t_aRq1 :: (~>) s_aQj9 a_aQja) (t_aRq2 :: (~>) a_aQja ((Const r_aQjb :: Type -> Type) a_aQja)) (t_aRq3 :: s_aQj9). Sing t_aRq1 -> Sing t_aRq2 -> Sing t_aRq3 -> Sing (Apply (Apply (Apply ToSym0 t_aRq1) t_aRq2) t_aRq3 :: (Const r_aQjb :: Type -> Type) s_aQj9)

-- | If a function expects an <a>ALens</a>, it can be given any Lens (a
--   <tt><a>LensLike</a> f</tt> that works for any <a>Functor</a> f).
--   
--   You can use an <a>ALens</a> as a normal lens by using
--   <a>CloneLens_</a>.
type ALens s t a b = LensLike (Context a b) s t a b

-- | Create a Lens from a setter and a getter.
--   
--   <pre>
--   <a>MkLens_</a>
--       :: <a>Functor</a> f
--       =&gt; (s ~&gt; a)
--       -&gt; (s ~&gt; b ~&gt; t)
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
type MkLens_ f g = MkLensSym2 f g
type family MkLens (a_aXF4 :: (~>) s_aXDM a_aXDN) (a_aXF5 :: (~>) s_aXDM ((~>) b_aXDO t_aXDP)) (a_aXF6 :: (~>) a_aXDN (f_aXDL b_aXDO)) (a_aXF7 :: s_aXDM) :: f_aXDL t_aXDP
sMkLens :: forall f_aXDL s_aXDM a_aXDN b_aXDO t_aXDP (t_aXFm :: (~>) s_aXDM a_aXDN) (t_aXFn :: (~>) s_aXDM ((~>) b_aXDO t_aXDP)) (t_aXFo :: (~>) a_aXDN (f_aXDL b_aXDO)) (t_aXFp :: s_aXDM). SFunctor f_aXDL => Sing t_aXFm -> Sing t_aXFn -> Sing t_aXFo -> Sing t_aXFp -> Sing (Apply (Apply (Apply (Apply MkLensSym0 t_aXFm) t_aXFn) t_aXFo) t_aXFp :: f_aXDL t_aXDP)
mkLens :: Functor f_aXDL => (s_aXDM -> a_aXDN) -> (s_aXDM -> b_aXDO -> t_aXDP) -> LensLike f_aXDL s_aXDM t_aXDP a_aXDN b_aXDO

-- | <a>Clone</a> a polymorphic lens so it can be used as more than one
--   type of thing (getter or setter).
--   
--   <pre>
--   <a>CloneLens_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Context a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a lens and uses it in more
--   than one way; if you have it take an <a>ALens</a>, you can then use
--   <a>CloneLens_</a> to use it as a getter or setter.
type CloneLens_ l = CloneLensSym1 l
type family CloneLens (a_aRm8 :: (~>) ((~>) a_aQiS (Context a_aQiS b_aQiT b_aQiT)) ((~>) s_aQiU (Context a_aQiS b_aQiT t_aQiV))) (a_aRm9 :: (~>) a_aQiS (f_aQiR b_aQiT)) (a_aRma :: s_aQiU) :: f_aQiR t_aQiV

-- | If a function expects an <a>ATraversal</a>, it can be given any
--   Traversal (a <tt><a>LensLike</a> f</tt> that works for any
--   <a>Applicative</a> f).
--   
--   You can use an <a>ATraversal</a> as a normal traversal by using
--   <a>CloneTraversal_</a>.
type ATraversal s t a b = LensLike (Bazaar a b) s t a b
type family Preview (a_aRn2 :: (~>) ((~>) a_aQj5 ((Const (First a_aQj5) :: Type -> Type) a_aQj5)) ((~>) s_aQj6 ((Const (First a_aQj5) :: Type -> Type) s_aQj6))) (a_aRn3 :: s_aQj6) :: Maybe a_aQj5

-- | Infix application of <a>Preview</a>
type x ^? l = Preview l x
infixl 8 ^?
sPreview :: forall a_aQj5 s_aQj6 (t_aRpP :: (~>) ((~>) a_aQj5 ((Const (First a_aQj5) :: Type -> Type) a_aQj5)) ((~>) s_aQj6 ((Const (First a_aQj5) :: Type -> Type) s_aQj6))) (t_aRpQ :: s_aQj6). Sing t_aRpP -> Sing t_aRpQ -> Sing (Apply (Apply PreviewSym0 t_aRpP) t_aRpQ :: Maybe a_aQj5)

-- | Singleton mirror of <a>Preview</a> and <a>%^?</a>.
(%^?) :: Sing x -> Sing l -> Sing (x ^? l)
type family ToListOf (a_aRns :: (~>) ((~>) a_aQj7 ((Const [a_aQj7] :: Type -> Type) a_aQj7)) ((~>) s_aQj8 ((Const [a_aQj7] :: Type -> Type) s_aQj8))) (a_aRnt :: s_aQj8) :: [a_aQj7]

-- | Infix application of <a>ToListOf</a>
type x ^.. l = ToListOf l x
infixl 8 ^..
sToListOf :: forall a_aQj7 s_aQj8 (t_aRpX :: (~>) ((~>) a_aQj7 ((Const [a_aQj7] :: Type -> Type) a_aQj7)) ((~>) s_aQj8 ((Const [a_aQj7] :: Type -> Type) s_aQj8))) (t_aRpY :: s_aQj8). Sing t_aRpX -> Sing t_aRpY -> Sing (Apply (Apply ToListOfSym0 t_aRpX) t_aRpY :: [a_aQj7])

-- | Singleton mirror of <a>ToListOf</a> and <a>%^..</a>.
(%^..) :: Sing x -> Sing l -> Sing (x ^.. l)
type family UnsafePreview (a_aRnf :: (~>) ((~>) a_aQj3 ((Const (First a_aQj3) :: Type -> Type) a_aQj3)) ((~>) s_aQj4 ((Const (First a_aQj3) :: Type -> Type) s_aQj4))) (a_aRng :: s_aQj4) :: a_aQj3

-- | Infix application of <a>UnsafePreview</a>
type x ^?! l = UnsafePreview l x
infixl 8 ^?!
sUnsafePreview :: forall a_aQj3 s_aQj4 (t_aRpT :: (~>) ((~>) a_aQj3 ((Const (First a_aQj3) :: Type -> Type) a_aQj3)) ((~>) s_aQj4 ((Const (First a_aQj3) :: Type -> Type) s_aQj4))) (t_aRpU :: s_aQj4). Sing t_aRpT -> Sing t_aRpU -> Sing (Apply (Apply UnsafePreviewSym0 t_aRpT) t_aRpU :: a_aQj3)

-- | Singleton mirror of <a>UnsafePreview</a> and <a>%^?!</a>.
(%^?!) :: Sing x -> Sing l -> Sing (x ^?! l)

-- | Create a Fold from a "folding function":
--   
--   <pre>
--   <a>Folding_</a>
--       :: (<a>Foldable</a> f, <a>Monoid</a> r)
--       =&gt; (s ~&gt; f a)
--       -&gt; <a>Getting</a> r s a
--   </pre>
type Folding_ f = FoldingSym1 f
type family Folding (a_aRmL :: (~>) s_aQj1 (f_aQiZ a_aQj2)) (a_aRmM :: (~>) a_aQj2 ((Const r_aQj0 :: Type -> Type) a_aQj2)) (a_aRmN :: s_aQj1) :: (Const r_aQj0 :: Type -> Type) s_aQj1
sFolding :: forall f_aQiZ r_aQj0 s_aQj1 a_aQj2 (t_aRpJ :: (~>) s_aQj1 (f_aQiZ a_aQj2)) (t_aRpK :: (~>) a_aQj2 ((Const r_aQj0 :: Type -> Type) a_aQj2)) (t_aRpL :: s_aQj1). (SFoldable f_aQiZ, SMonoid r_aQj0) => Sing t_aRpJ -> Sing t_aRpK -> Sing t_aRpL -> Sing (Apply (Apply (Apply FoldingSym0 t_aRpJ) t_aRpK) t_aRpL :: (Const r_aQj0 :: Type -> Type) s_aQj1)

-- | The canonical Fold for any instance of <a>Foldable</a>.
--   
--   <pre>
--   <a>Folded_</a>
--       :: <a>Monoid</a> r
--       =&gt; <a>Getting</a> r (t a) a
--   </pre>
type Folded_ = FoldedSym0
type family Folded (a_aRmy :: (~>) a_aQiY ((Const r_aQiX :: Type -> Type) a_aQiY)) (a_aRmz :: f_aQiW a_aQiY) :: (Const r_aQiX :: Type -> Type) (f_aQiW a_aQiY)
sFolded :: forall f_aQiW r_aQiX a_aQiY (t_aRpF :: (~>) a_aQiY ((Const r_aQiX :: Type -> Type) a_aQiY)) (t_aRpG :: f_aQiW a_aQiY). (SFoldable f_aQiW, SMonoid r_aQiX) => Sing t_aRpF -> Sing t_aRpG -> Sing (Apply (Apply FoldedSym0 t_aRpF) t_aRpG :: (Const r_aQiX :: Type -> Type) (f_aQiW a_aQiY))

-- | The canonical Traversal for any instance of <a>Traversable</a>.
--   
--   <pre>
--   <a>Traverse_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>LensLike</a> f (t a) (t b) a b
--   </pre>
type Traverse_ = TraverseSym0
type family Traverse (arg :: a ~> f b) (arg1 :: t a) :: f t b
sTraverse :: (STraversable t, SApplicative f) => Sing t1 -> Sing t2 -> Sing (Apply (Apply (TraverseSym0 :: TyFun (a ~> f b) (t a ~> f (t b)) -> Type) t1) t2)

-- | <a>Clone</a> a polymorphic traversal so it can be used as more than
--   one type of thing (fold, traversal, getter, setter...).
--   
--   <pre>
--   <a>CloneTraversal_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Bazaar a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a traversal and uses it in
--   more than one way; if you have it take an <a>ATraversal</a>, you can
--   then use <a>CloneTraversal_</a> to use it as a fold or traversal or
--   anything else.
type CloneTraversal_ l = CloneTraversalSym1 l
type family CloneTraversal (a_aRlR :: (~>) ((~>) a_aQiN (Bazaar a_aQiN b_aQiO b_aQiO)) ((~>) s_aQiP (Bazaar a_aQiN b_aQiO t_aQiQ))) (a_aRlS :: (~>) a_aQiN (f_aQiM b_aQiO)) (a_aRlT :: s_aQiP) :: f_aQiM t_aQiQ
sCloneTraversal :: forall f_aQiM a_aQiN b_aQiO s_aQiP t_aQiQ (t_aRpt :: (~>) ((~>) a_aQiN (Bazaar a_aQiN b_aQiO b_aQiO)) ((~>) s_aQiP (Bazaar a_aQiN b_aQiO t_aQiQ))) (t_aRpu :: (~>) a_aQiN (f_aQiM b_aQiO)) (t_aRpv :: s_aQiP). SApplicative f_aQiM => Sing t_aRpt -> Sing t_aRpu -> Sing t_aRpv -> Sing (Apply (Apply (Apply CloneTraversalSym0 t_aRpt) t_aRpu) t_aRpv :: f_aQiM t_aQiQ)

-- | Lens into the first field of a tuple
type L1_ = L1Sym0
type family L1 (a_aRlC :: (~>) a_aQiJ (f_aQiI b_aQiL)) (a_aRlD :: (a_aQiJ, c_aQiK)) :: f_aQiI (b_aQiL, c_aQiK)
sL1 :: forall f_aQiI a_aQiJ c_aQiK b_aQiL (t_aRpp :: (~>) a_aQiJ (f_aQiI b_aQiL)) (t_aRpq :: (a_aQiJ, c_aQiK)). SFunctor f_aQiI => Sing t_aRpp -> Sing t_aRpq -> Sing (Apply (Apply L1Sym0 t_aRpp) t_aRpq :: f_aQiI (b_aQiL, c_aQiK))

-- | Lens into the second field of a tuple
type L2_ = L2Sym0
type family L2 (a_aRln :: (~>) b_aQiG (f_aQiE c_aQiH)) (a_aRlo :: (a_aQiF, b_aQiG)) :: f_aQiE (a_aQiF, c_aQiH)
sL2 :: forall f_aQiE a_aQiF b_aQiG c_aQiH (t_aRpl :: (~>) b_aQiG (f_aQiE c_aQiH)) (t_aRpm :: (a_aQiF, b_aQiG)). SFunctor f_aQiE => Sing t_aRpl -> Sing t_aRpm -> Sing (Apply (Apply L2Sym0 t_aRpl) t_aRpm :: f_aQiE (a_aQiF, c_aQiH))

-- | Peano nats, used for implementation of list index traversals in a
--   termination-sane way.
data N
Z :: N
S :: N -> N
type SN = (Sing :: N -> Type)

-- | <tt><a>IxList</a> i</tt> is a Traversal into the i-th item into a
--   list. Defined in terms of <a>N</a> to allow for sane termination
--   guaruntees.
--   
--   <pre>
--   <a>IxList_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>N</a>
--       -&gt; <a>LensLike'</a> f [a] a
--   </pre>
type IxList_ i = IxListSym1 i
type family IxList (a_aXEJ :: N) (a_aXEK :: (~>) a_aXDK (f_aXDJ a_aXDK)) (a_aXEL :: [a_aXDK]) :: f_aXDJ [a_aXDK]
sIxList :: forall f_aXDJ a_aXDK (t_aXFg :: N) (t_aXFh :: (~>) a_aXDK (f_aXDJ a_aXDK)) (t_aXFi :: [a_aXDK]). SApplicative f_aXDJ => Sing t_aXFg -> Sing t_aXFh -> Sing t_aXFi -> Sing (Apply (Apply (Apply IxListSym0 t_aXFg) t_aXFh) t_aXFi :: f_aXDJ [a_aXDK])
ixList :: Applicative f_aXDJ => N -> LensLike' f_aXDJ [a_aXDK] a_aXDK

-- | Shorter name for type-level function composition
type f .@ g = f .@#@$$$ g
infixr 9 .@

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
data ASetterSym0 s6989586621679201104
data ASetterSym1 (s6989586621679201104 :: Type) t6989586621679201105
data ASetterSym2 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) a6989586621679201106
data ASetterSym3 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) (a6989586621679201106 :: Type) b6989586621679201107
type ASetterSym4 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) (a6989586621679201106 :: Type) (b6989586621679201107 :: Type) = ASetter s6989586621679201104 t6989586621679201105 a6989586621679201106 b6989586621679201107
data OverSym0 :: forall a6989586621679210882 b6989586621679210883 s6989586621679210880 t6989586621679210881. (~>) ((~>) ((~>) a6989586621679210882 (Identity b6989586621679210883)) ((~>) s6989586621679210880 (Identity t6989586621679210881))) ((~>) ((~>) a6989586621679210882 b6989586621679210883) ((~>) s6989586621679210880 t6989586621679210881))
data OverSym1 (a6989586621679215056 :: (~>) ((~>) a6989586621679210882 (Identity b6989586621679210883)) ((~>) s6989586621679210880 (Identity t6989586621679210881))) :: (~>) ((~>) a6989586621679210882 b6989586621679210883) ((~>) s6989586621679210880 t6989586621679210881)
data OverSym2 (a6989586621679215056 :: (~>) ((~>) a6989586621679210882 (Identity b6989586621679210883)) ((~>) s6989586621679210880 (Identity t6989586621679210881))) (a6989586621679215057 :: (~>) a6989586621679210882 b6989586621679210883) :: (~>) s6989586621679210880 t6989586621679210881
type OverSym3 (a6989586621679215056 :: (~>) ((~>) a6989586621679210882 (Identity b6989586621679210883)) ((~>) s6989586621679210880 (Identity t6989586621679210881))) (a6989586621679215057 :: (~>) a6989586621679210882 b6989586621679210883) (a6989586621679215058 :: s6989586621679210880) = Over a6989586621679215056 a6989586621679215057 a6989586621679215058
data SetSym0 :: forall a6989586621679210878 b6989586621679210879 s6989586621679210876 t6989586621679210877. (~>) ((~>) ((~>) a6989586621679210878 (Identity b6989586621679210879)) ((~>) s6989586621679210876 (Identity t6989586621679210877))) ((~>) b6989586621679210879 ((~>) s6989586621679210876 t6989586621679210877))
data SetSym1 (a6989586621679215073 :: (~>) ((~>) a6989586621679210878 (Identity b6989586621679210879)) ((~>) s6989586621679210876 (Identity t6989586621679210877))) :: (~>) b6989586621679210879 ((~>) s6989586621679210876 t6989586621679210877)
data SetSym2 (a6989586621679215073 :: (~>) ((~>) a6989586621679210878 (Identity b6989586621679210879)) ((~>) s6989586621679210876 (Identity t6989586621679210877))) (a6989586621679215074 :: b6989586621679210879) :: (~>) s6989586621679210876 t6989586621679210877
type SetSym3 (a6989586621679215073 :: (~>) ((~>) a6989586621679210878 (Identity b6989586621679210879)) ((~>) s6989586621679210876 (Identity t6989586621679210877))) (a6989586621679215074 :: b6989586621679210879) (a6989586621679215075 :: s6989586621679210876) = Set a6989586621679215073 a6989586621679215074 a6989586621679215075
data SetsSym0 :: forall a6989586621679210870 b6989586621679210871 s6989586621679210872 t6989586621679210873. (~>) ((~>) ((~>) a6989586621679210870 b6989586621679210871) ((~>) s6989586621679210872 t6989586621679210873)) ((~>) ((~>) a6989586621679210870 (Identity b6989586621679210871)) ((~>) s6989586621679210872 (Identity t6989586621679210873)))
data SetsSym1 (a6989586621679215015 :: (~>) ((~>) a6989586621679210870 b6989586621679210871) ((~>) s6989586621679210872 t6989586621679210873)) :: (~>) ((~>) a6989586621679210870 (Identity b6989586621679210871)) ((~>) s6989586621679210872 (Identity t6989586621679210873))
data SetsSym2 (a6989586621679215015 :: (~>) ((~>) a6989586621679210870 b6989586621679210871) ((~>) s6989586621679210872 t6989586621679210873)) (a6989586621679215016 :: (~>) a6989586621679210870 (Identity b6989586621679210871)) :: (~>) s6989586621679210872 (Identity t6989586621679210873)
type SetsSym3 (a6989586621679215015 :: (~>) ((~>) a6989586621679210870 b6989586621679210871) ((~>) s6989586621679210872 t6989586621679210873)) (a6989586621679215016 :: (~>) a6989586621679210870 (Identity b6989586621679210871)) (a6989586621679215017 :: s6989586621679210872) = Sets a6989586621679215015 a6989586621679215016 a6989586621679215017
data GettingSym0 r6989586621679201101
data GettingSym1 (r6989586621679201101 :: Type) s6989586621679201102
data GettingSym2 (r6989586621679201101 :: Type) (s6989586621679201102 :: Type) a6989586621679201103
type GettingSym3 (r6989586621679201101 :: Type) (s6989586621679201102 :: Type) (a6989586621679201103 :: Type) = Getting r6989586621679201101 s6989586621679201102 a6989586621679201103
data ViewSym0 :: forall a6989586621679210874 s6989586621679210875. (~>) ((~>) ((~>) a6989586621679210874 ((Const a6989586621679210874 :: Type -> Type) a6989586621679210874)) ((~>) s6989586621679210875 ((Const a6989586621679210874 :: Type -> Type) s6989586621679210875))) ((~>) s6989586621679210875 a6989586621679210874)
data ViewSym1 (a6989586621679215043 :: (~>) ((~>) a6989586621679210874 ((Const a6989586621679210874 :: Type -> Type) a6989586621679210874)) ((~>) s6989586621679210875 ((Const a6989586621679210874 :: Type -> Type) s6989586621679210875))) :: (~>) s6989586621679210875 a6989586621679210874
type ViewSym2 (a6989586621679215043 :: (~>) ((~>) a6989586621679210874 ((Const a6989586621679210874 :: Type -> Type) a6989586621679210874)) ((~>) s6989586621679210875 ((Const a6989586621679210874 :: Type -> Type) s6989586621679210875))) (a6989586621679215044 :: s6989586621679210875) = View a6989586621679215043 a6989586621679215044
data ToSym0 :: forall a6989586621679210868 r6989586621679210869 s6989586621679210867. (~>) ((~>) s6989586621679210867 a6989586621679210868) ((~>) ((~>) a6989586621679210868 ((Const r6989586621679210869 :: Type -> Type) a6989586621679210868)) ((~>) s6989586621679210867 ((Const r6989586621679210869 :: Type -> Type) s6989586621679210867)))
data ToSym1 (a6989586621679214998 :: (~>) s6989586621679210867 a6989586621679210868) :: forall r6989586621679210869. (~>) ((~>) a6989586621679210868 ((Const r6989586621679210869 :: Type -> Type) a6989586621679210868)) ((~>) s6989586621679210867 ((Const r6989586621679210869 :: Type -> Type) s6989586621679210867))
data ToSym2 (a6989586621679214998 :: (~>) s6989586621679210867 a6989586621679210868) (a6989586621679214999 :: (~>) a6989586621679210868 ((Const r6989586621679210869 :: Type -> Type) a6989586621679210868)) :: (~>) s6989586621679210867 ((Const r6989586621679210869 :: Type -> Type) s6989586621679210867)
type ToSym3 (a6989586621679214998 :: (~>) s6989586621679210867 a6989586621679210868) (a6989586621679214999 :: (~>) a6989586621679210868 ((Const r6989586621679210869 :: Type -> Type) a6989586621679210868)) (a6989586621679215000 :: s6989586621679210867) = To a6989586621679214998 a6989586621679214999 a6989586621679215000
data ToListOfSym0 :: forall a6989586621679210865 s6989586621679210866. (~>) ((~>) ((~>) a6989586621679210865 ((Const [a6989586621679210865] :: Type -> Type) a6989586621679210865)) ((~>) s6989586621679210866 ((Const [a6989586621679210865] :: Type -> Type) s6989586621679210866))) ((~>) s6989586621679210866 [a6989586621679210865])
data ToListOfSym1 (a6989586621679214978 :: (~>) ((~>) a6989586621679210865 ((Const [a6989586621679210865] :: Type -> Type) a6989586621679210865)) ((~>) s6989586621679210866 ((Const [a6989586621679210865] :: Type -> Type) s6989586621679210866))) :: (~>) s6989586621679210866 [a6989586621679210865]
type ToListOfSym2 (a6989586621679214978 :: (~>) ((~>) a6989586621679210865 ((Const [a6989586621679210865] :: Type -> Type) a6989586621679210865)) ((~>) s6989586621679210866 ((Const [a6989586621679210865] :: Type -> Type) s6989586621679210866))) (a6989586621679214979 :: s6989586621679210866) = ToListOf a6989586621679214978 a6989586621679214979
data LensLikeSym0 f6989586621679201111
data LensLikeSym1 (f6989586621679201111 :: k6989586621679201126 -> Type) s6989586621679201112
data LensLikeSym2 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) t6989586621679201113
data LensLikeSym3 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) a6989586621679201114
data LensLikeSym4 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) (a6989586621679201114 :: Type) b6989586621679201115
type LensLikeSym5 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) (a6989586621679201114 :: Type) (b6989586621679201115 :: k6989586621679201126) = LensLike f6989586621679201111 s6989586621679201112 t6989586621679201113 a6989586621679201114 b6989586621679201115
data LensLike'Sym0 f6989586621679201108
data LensLike'Sym1 (f6989586621679201108 :: Type -> Type) s6989586621679201109
data LensLike'Sym2 (f6989586621679201108 :: Type -> Type) (s6989586621679201109 :: Type) a6989586621679201110
type LensLike'Sym3 (f6989586621679201108 :: Type -> Type) (s6989586621679201109 :: Type) (a6989586621679201110 :: Type) = LensLike' f6989586621679201108 s6989586621679201109 a6989586621679201110
data MkLensSym0 :: forall a6989586621679239055 b6989586621679239056 f6989586621679239053 s6989586621679239054 t6989586621679239057. (~>) ((~>) s6989586621679239054 a6989586621679239055) ((~>) ((~>) s6989586621679239054 ((~>) b6989586621679239056 t6989586621679239057)) ((~>) ((~>) a6989586621679239055 (f6989586621679239053 b6989586621679239056)) ((~>) s6989586621679239054 (f6989586621679239053 t6989586621679239057))))
data MkLensSym1 (a6989586621679239134 :: (~>) s6989586621679239054 a6989586621679239055) :: forall b6989586621679239056 f6989586621679239053 t6989586621679239057. (~>) ((~>) s6989586621679239054 ((~>) b6989586621679239056 t6989586621679239057)) ((~>) ((~>) a6989586621679239055 (f6989586621679239053 b6989586621679239056)) ((~>) s6989586621679239054 (f6989586621679239053 t6989586621679239057)))
data MkLensSym2 (a6989586621679239134 :: (~>) s6989586621679239054 a6989586621679239055) (a6989586621679239135 :: (~>) s6989586621679239054 ((~>) b6989586621679239056 t6989586621679239057)) :: forall f6989586621679239053. (~>) ((~>) a6989586621679239055 (f6989586621679239053 b6989586621679239056)) ((~>) s6989586621679239054 (f6989586621679239053 t6989586621679239057))
data MkLensSym3 (a6989586621679239134 :: (~>) s6989586621679239054 a6989586621679239055) (a6989586621679239135 :: (~>) s6989586621679239054 ((~>) b6989586621679239056 t6989586621679239057)) (a6989586621679239136 :: (~>) a6989586621679239055 (f6989586621679239053 b6989586621679239056)) :: (~>) s6989586621679239054 (f6989586621679239053 t6989586621679239057)
type MkLensSym4 (a6989586621679239134 :: (~>) s6989586621679239054 a6989586621679239055) (a6989586621679239135 :: (~>) s6989586621679239054 ((~>) b6989586621679239056 t6989586621679239057)) (a6989586621679239136 :: (~>) a6989586621679239055 (f6989586621679239053 b6989586621679239056)) (a6989586621679239137 :: s6989586621679239054) = MkLens a6989586621679239134 a6989586621679239135 a6989586621679239136 a6989586621679239137
data CloneLensSym0 :: forall a6989586621679210850 b6989586621679210851 f6989586621679210849 s6989586621679210852 t6989586621679210853. (~>) ((~>) ((~>) a6989586621679210850 (Context a6989586621679210850 b6989586621679210851 b6989586621679210851)) ((~>) s6989586621679210852 (Context a6989586621679210850 b6989586621679210851 t6989586621679210853))) ((~>) ((~>) a6989586621679210850 (f6989586621679210849 b6989586621679210851)) ((~>) s6989586621679210852 (f6989586621679210849 t6989586621679210853)))
data CloneLensSym1 (a6989586621679214896 :: (~>) ((~>) a6989586621679210850 (Context a6989586621679210850 b6989586621679210851 b6989586621679210851)) ((~>) s6989586621679210852 (Context a6989586621679210850 b6989586621679210851 t6989586621679210853))) :: forall f6989586621679210849. (~>) ((~>) a6989586621679210850 (f6989586621679210849 b6989586621679210851)) ((~>) s6989586621679210852 (f6989586621679210849 t6989586621679210853))
data CloneLensSym2 (a6989586621679214896 :: (~>) ((~>) a6989586621679210850 (Context a6989586621679210850 b6989586621679210851 b6989586621679210851)) ((~>) s6989586621679210852 (Context a6989586621679210850 b6989586621679210851 t6989586621679210853))) (a6989586621679214897 :: (~>) a6989586621679210850 (f6989586621679210849 b6989586621679210851)) :: (~>) s6989586621679210852 (f6989586621679210849 t6989586621679210853)
type CloneLensSym3 (a6989586621679214896 :: (~>) ((~>) a6989586621679210850 (Context a6989586621679210850 b6989586621679210851 b6989586621679210851)) ((~>) s6989586621679210852 (Context a6989586621679210850 b6989586621679210851 t6989586621679210853))) (a6989586621679214897 :: (~>) a6989586621679210850 (f6989586621679210849 b6989586621679210851)) (a6989586621679214898 :: s6989586621679210852) = CloneLens a6989586621679214896 a6989586621679214897 a6989586621679214898
data FoldingSym0 :: forall a6989586621679210860 f6989586621679210857 r6989586621679210858 s6989586621679210859. (~>) ((~>) s6989586621679210859 (f6989586621679210857 a6989586621679210860)) ((~>) ((~>) a6989586621679210860 ((Const r6989586621679210858 :: Type -> Type) a6989586621679210860)) ((~>) s6989586621679210859 ((Const r6989586621679210858 :: Type -> Type) s6989586621679210859)))
data FoldingSym1 (a6989586621679214935 :: (~>) s6989586621679210859 (f6989586621679210857 a6989586621679210860)) :: forall r6989586621679210858. (~>) ((~>) a6989586621679210860 ((Const r6989586621679210858 :: Type -> Type) a6989586621679210860)) ((~>) s6989586621679210859 ((Const r6989586621679210858 :: Type -> Type) s6989586621679210859))
data FoldingSym2 (a6989586621679214935 :: (~>) s6989586621679210859 (f6989586621679210857 a6989586621679210860)) (a6989586621679214936 :: (~>) a6989586621679210860 ((Const r6989586621679210858 :: Type -> Type) a6989586621679210860)) :: (~>) s6989586621679210859 ((Const r6989586621679210858 :: Type -> Type) s6989586621679210859)
type FoldingSym3 (a6989586621679214935 :: (~>) s6989586621679210859 (f6989586621679210857 a6989586621679210860)) (a6989586621679214936 :: (~>) a6989586621679210860 ((Const r6989586621679210858 :: Type -> Type) a6989586621679210860)) (a6989586621679214937 :: s6989586621679210859) = Folding a6989586621679214935 a6989586621679214936 a6989586621679214937
data FoldedSym0 :: forall a6989586621679210856 f6989586621679210854 r6989586621679210855. (~>) ((~>) a6989586621679210856 ((Const r6989586621679210855 :: Type -> Type) a6989586621679210856)) ((~>) (f6989586621679210854 a6989586621679210856) ((Const r6989586621679210855 :: Type -> Type) (f6989586621679210854 a6989586621679210856)))
data FoldedSym1 (a6989586621679214922 :: (~>) a6989586621679210856 ((Const r6989586621679210855 :: Type -> Type) a6989586621679210856)) :: forall f6989586621679210854. (~>) (f6989586621679210854 a6989586621679210856) ((Const r6989586621679210855 :: Type -> Type) (f6989586621679210854 a6989586621679210856))
type FoldedSym2 (a6989586621679214922 :: (~>) a6989586621679210856 ((Const r6989586621679210855 :: Type -> Type) a6989586621679210856)) (a6989586621679214923 :: f6989586621679210854 a6989586621679210856) = Folded a6989586621679214922 a6989586621679214923
data L1Sym0 :: forall a6989586621679210841 b6989586621679210843 c6989586621679210842 f6989586621679210840. (~>) ((~>) a6989586621679210841 (f6989586621679210840 b6989586621679210843)) ((~>) (a6989586621679210841, c6989586621679210842) (f6989586621679210840 (b6989586621679210843, c6989586621679210842)))
data L1Sym1 (a6989586621679214864 :: (~>) a6989586621679210841 (f6989586621679210840 b6989586621679210843)) :: forall c6989586621679210842. (~>) (a6989586621679210841, c6989586621679210842) (f6989586621679210840 (b6989586621679210843, c6989586621679210842))
type L1Sym2 (a6989586621679214864 :: (~>) a6989586621679210841 (f6989586621679210840 b6989586621679210843)) (a6989586621679214865 :: (a6989586621679210841, c6989586621679210842)) = L1 a6989586621679214864 a6989586621679214865
data L2Sym0 :: forall a6989586621679210837 b6989586621679210838 c6989586621679210839 f6989586621679210836. (~>) ((~>) b6989586621679210838 (f6989586621679210836 c6989586621679210839)) ((~>) (a6989586621679210837, b6989586621679210838) (f6989586621679210836 (a6989586621679210837, c6989586621679210839)))
data L2Sym1 (a6989586621679214849 :: (~>) b6989586621679210838 (f6989586621679210836 c6989586621679210839)) :: forall a6989586621679210837. (~>) (a6989586621679210837, b6989586621679210838) (f6989586621679210836 (a6989586621679210837, c6989586621679210839))
type L2Sym2 (a6989586621679214849 :: (~>) b6989586621679210838 (f6989586621679210836 c6989586621679210839)) (a6989586621679214850 :: (a6989586621679210837, b6989586621679210838)) = L2 a6989586621679214849 a6989586621679214850
type ZSym0 =  'Z
data SSym0 :: (~>) N N
type SSym1 (t6989586621679202515 :: N) =  'S t6989586621679202515
data IxListSym0 :: forall a6989586621679239052 f6989586621679239051. (~>) N ((~>) ((~>) a6989586621679239052 (f6989586621679239051 a6989586621679239052)) ((~>) [a6989586621679239052] (f6989586621679239051 [a6989586621679239052])))
data IxListSym1 (a6989586621679239113 :: N) :: forall a6989586621679239052 f6989586621679239051. (~>) ((~>) a6989586621679239052 (f6989586621679239051 a6989586621679239052)) ((~>) [a6989586621679239052] (f6989586621679239051 [a6989586621679239052]))
data IxListSym2 (a6989586621679239113 :: N) (a6989586621679239114 :: (~>) a6989586621679239052 (f6989586621679239051 a6989586621679239052)) :: (~>) [a6989586621679239052] (f6989586621679239051 [a6989586621679239052])
type IxListSym3 (a6989586621679239113 :: N) (a6989586621679239114 :: (~>) a6989586621679239052 (f6989586621679239051 a6989586621679239052)) (a6989586621679239115 :: [a6989586621679239052]) = IxList a6989586621679239113 a6989586621679239114 a6989586621679239115
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.MkLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.MkLensSym0
instance forall b6989586621679239056 (f6989586621679239053 :: * -> *) t6989586621679239057 s6989586621679239054 a6989586621679239055 (a6989586621679239134 :: s6989586621679239054 Data.Singletons.Internal.~> a6989586621679239055). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym1 a6989586621679239134)
instance forall s a b t (f :: * -> *) (d :: s Data.Singletons.Internal.~> a). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym1 d)
instance forall (f6989586621679239053 :: * -> *) b6989586621679239056 t6989586621679239057 s6989586621679239054 a6989586621679239055 (a6989586621679239135 :: s6989586621679239054 Data.Singletons.Internal.~> a6989586621679239055) (a6989586621679239134 :: s6989586621679239054 Data.Singletons.Internal.~> (b6989586621679239056 Data.Singletons.Internal.~> t6989586621679239057)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym2 a6989586621679239135 a6989586621679239134)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym2 d1 d2)
instance forall (f6989586621679239053 :: * -> *) b6989586621679239056 t6989586621679239057 s6989586621679239054 a6989586621679239055 (a6989586621679239136 :: s6989586621679239054 Data.Singletons.Internal.~> a6989586621679239055) (a6989586621679239135 :: s6989586621679239054 Data.Singletons.Internal.~> (b6989586621679239056 Data.Singletons.Internal.~> t6989586621679239057)) (a6989586621679239134 :: a6989586621679239055 Data.Singletons.Internal.~> f6989586621679239053 b6989586621679239056). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym3 a6989586621679239136 a6989586621679239135 a6989586621679239134)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)) (d3 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2, Data.Singletons.Internal.SingI d3) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym3 d1 d2 d3)
instance forall (f6989586621679239051 :: * -> *) a6989586621679239052 (a6989586621679239114 :: Data.Type.Lens.N) (a6989586621679239113 :: a6989586621679239052 Data.Singletons.Internal.~> f6989586621679239051 a6989586621679239052). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym2 a6989586621679239114 a6989586621679239113)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym1 a6989586621679239113)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.IxListSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.IxListSym0
instance (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym1 d)
instance forall a (f :: * -> *) (d1 :: Data.Type.Lens.N) (d2 :: a Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679239122Sym0
instance forall k1 k2 k3 (f6989586621679239119 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679239122Sym1 f6989586621679239119)
instance forall k1 k2 k3 (x6989586621679239120 :: k3) (f6989586621679239119 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679239122Sym2 x6989586621679239120 f6989586621679239119)
instance forall k1 k2 k3 (xs6989586621679239121 :: k3) (x6989586621679239120 :: k2) (f6989586621679239119 :: [k1]). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679239122Sym3 xs6989586621679239121 x6989586621679239120 f6989586621679239119)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetSym0
instance forall a6989586621679210878 b6989586621679210879 s6989586621679210876 t6989586621679210877 (a6989586621679215073 :: (a6989586621679210878 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210879) Data.Singletons.Internal.~> (s6989586621679210876 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210877)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym1 a6989586621679215073)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym1 d)
instance forall a6989586621679210878 b6989586621679210879 s6989586621679210876 t6989586621679210877 (a6989586621679215074 :: (a6989586621679210878 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210879) Data.Singletons.Internal.~> (s6989586621679210876 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210877)) (a6989586621679215073 :: b6989586621679210879). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym2 a6989586621679215074 a6989586621679215073)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.OverSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.OverSym0
instance forall a6989586621679210882 b6989586621679210883 s6989586621679210880 t6989586621679210881 (a6989586621679215056 :: (a6989586621679210882 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210883) Data.Singletons.Internal.~> (s6989586621679210880 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210881)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym1 a6989586621679215056)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym1 d)
instance forall a6989586621679210882 b6989586621679210883 s6989586621679210880 t6989586621679210881 (a6989586621679215057 :: (a6989586621679210882 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210883) Data.Singletons.Internal.~> (s6989586621679210880 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210881)) (a6989586621679215056 :: a6989586621679210882 Data.Singletons.Internal.~> b6989586621679210883). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym2 a6989586621679215057 a6989586621679215056)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: a Data.Singletons.Internal.~> b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ViewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ViewSym0
instance forall a6989586621679210874 s6989586621679210875 (a6989586621679215043 :: (a6989586621679210874 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679210874 a6989586621679210874) Data.Singletons.Internal.~> (s6989586621679210875 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679210874 s6989586621679210875)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ViewSym1 a6989586621679215043)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const a a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const a s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ViewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetsSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetsSym0
instance forall a6989586621679210870 b6989586621679210871 s6989586621679210872 t6989586621679210873 (a6989586621679215015 :: (a6989586621679210870 Data.Singletons.Internal.~> b6989586621679210871) Data.Singletons.Internal.~> (s6989586621679210872 Data.Singletons.Internal.~> t6989586621679210873)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym1 a6989586621679215015)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym1 d)
instance forall a6989586621679210870 b6989586621679210871 s6989586621679210872 t6989586621679210873 (a6989586621679215016 :: (a6989586621679210870 Data.Singletons.Internal.~> b6989586621679210871) Data.Singletons.Internal.~> (s6989586621679210872 Data.Singletons.Internal.~> t6989586621679210873)) (a6989586621679215015 :: a6989586621679210870 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210871). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym2 a6989586621679215016 a6989586621679215015)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToSym0
instance forall r6989586621679210869 s6989586621679210867 a6989586621679210868 (a6989586621679214998 :: s6989586621679210867 Data.Singletons.Internal.~> a6989586621679210868). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym1 a6989586621679214998)
instance forall s a r (d :: s Data.Singletons.Internal.~> a). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym1 d)
instance forall r6989586621679210869 s6989586621679210867 a6989586621679210868 (a6989586621679214999 :: s6989586621679210867 Data.Singletons.Internal.~> a6989586621679210868) (a6989586621679214998 :: a6989586621679210868 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210869 a6989586621679210868). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym2 a6989586621679214999 a6989586621679214998)
instance forall s a r (d1 :: s Data.Singletons.Internal.~> a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToListOfSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToListOfSym0
instance forall a6989586621679210865 s6989586621679210866 (a6989586621679214978 :: (a6989586621679210865 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679210865] a6989586621679210865) Data.Singletons.Internal.~> (s6989586621679210866 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679210865] s6989586621679210866)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToListOfSym1 a6989586621679214978)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const [a] a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const [a] s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToListOfSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.UnsafePreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.UnsafePreviewSym0
instance forall a6989586621679210861 s6989586621679210862 (a6989586621679214965 :: (a6989586621679210861 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210861) a6989586621679210861) Data.Singletons.Internal.~> (s6989586621679210862 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210861) s6989586621679210862)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.UnsafePreviewSym1 a6989586621679214965)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.UnsafePreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214971Scrutinee_6989586621679210980Sym0
instance forall a6989586621679210863 k1 (l6989586621679214969 :: (a6989586621679210863 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210863) a6989586621679210863) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210863) k1)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214971Scrutinee_6989586621679210980Sym1 l6989586621679214969)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.PreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.PreviewSym0
instance forall a6989586621679210863 s6989586621679210864 (a6989586621679214952 :: (a6989586621679210863 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210863) a6989586621679210863) Data.Singletons.Internal.~> (s6989586621679210864 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210863) s6989586621679210864)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.PreviewSym1 a6989586621679214952)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.PreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldingSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldingSym0
instance forall r6989586621679210858 s6989586621679210859 (f6989586621679210857 :: * -> *) a6989586621679210860 (a6989586621679214935 :: s6989586621679210859 Data.Singletons.Internal.~> f6989586621679210857 a6989586621679210860). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym1 a6989586621679214935)
instance forall s (f :: * -> *) a r (d :: s Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym1 d)
instance forall r6989586621679210858 s6989586621679210859 (f6989586621679210857 :: * -> *) a6989586621679210860 (a6989586621679214936 :: s6989586621679210859 Data.Singletons.Internal.~> f6989586621679210857 a6989586621679210860) (a6989586621679214935 :: a6989586621679210860 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210858 a6989586621679210860). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym2 a6989586621679214936 a6989586621679214935)
instance forall s (f :: * -> *) a r (d1 :: s Data.Singletons.Internal.~> f a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldedSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldedSym0
instance forall (f6989586621679210854 :: * -> *) r6989586621679210855 a6989586621679210856 (a6989586621679214922 :: a6989586621679210856 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210855 a6989586621679210856). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldedSym1 a6989586621679214922)
instance forall a r (f :: * -> *) (d :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldedSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneLensSym0
instance forall (f6989586621679210849 :: * -> *) s6989586621679210852 a6989586621679210850 b6989586621679210851 t6989586621679210853 (a6989586621679214896 :: (a6989586621679210850 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679210850 b6989586621679210851 b6989586621679210851) Data.Singletons.Internal.~> (s6989586621679210852 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679210850 b6989586621679210851 t6989586621679210853)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym1 a6989586621679214896)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym1 d)
instance forall (f6989586621679210849 :: * -> *) s6989586621679210852 a6989586621679210850 b6989586621679210851 t6989586621679210853 (a6989586621679214897 :: (a6989586621679210850 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679210850 b6989586621679210851 b6989586621679210851) Data.Singletons.Internal.~> (s6989586621679210852 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679210850 b6989586621679210851 t6989586621679210853)) (a6989586621679214896 :: a6989586621679210850 Data.Singletons.Internal.~> f6989586621679210849 b6989586621679210851). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym2 a6989586621679214897 a6989586621679214896)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneTraversalSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneTraversalSym0
instance forall (f6989586621679210844 :: * -> *) s6989586621679210847 a6989586621679210845 b6989586621679210846 t6989586621679210848 (a6989586621679214879 :: (a6989586621679210845 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679210845 b6989586621679210846 b6989586621679210846) Data.Singletons.Internal.~> (s6989586621679210847 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679210845 b6989586621679210846 t6989586621679210848)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym1 a6989586621679214879)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym1 d)
instance forall (f6989586621679210844 :: * -> *) s6989586621679210847 a6989586621679210845 b6989586621679210846 t6989586621679210848 (a6989586621679214880 :: (a6989586621679210845 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679210845 b6989586621679210846 b6989586621679210846) Data.Singletons.Internal.~> (s6989586621679210847 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679210845 b6989586621679210846 t6989586621679210848)) (a6989586621679214879 :: a6989586621679210845 Data.Singletons.Internal.~> f6989586621679210844 b6989586621679210846). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym2 a6989586621679214880 a6989586621679214879)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L1Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L1Sym0
instance forall c6989586621679210842 a6989586621679210841 (f6989586621679210840 :: * -> *) b6989586621679210843 (a6989586621679214864 :: a6989586621679210841 Data.Singletons.Internal.~> f6989586621679210840 b6989586621679210843). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L1Sym1 a6989586621679214864)
instance forall a (f :: * -> *) b c (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L1Sym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L2Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L2Sym0
instance forall a6989586621679210837 b6989586621679210838 (f6989586621679210836 :: * -> *) c6989586621679210839 (a6989586621679214849 :: b6989586621679210838 Data.Singletons.Internal.~> f6989586621679210836 c6989586621679210839). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L2Sym1 a6989586621679214849)
instance forall b (f :: * -> *) c a (d :: b Data.Singletons.Internal.~> f c). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L2Sym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679215084Sym0
instance forall k1 k2 k3 k4 (l6989586621679215081 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215084Sym1 l6989586621679215081)
instance forall k1 k2 k3 k4 (y6989586621679215082 :: k4) (l6989586621679215081 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215084Sym2 y6989586621679215082 l6989586621679215081)
instance forall k1 k2 k3 k4 (a_69895866216792150796989586621679215083 :: k4) (y6989586621679215082 :: k3) (l6989586621679215081 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215084Sym3 a_69895866216792150796989586621679215083 y6989586621679215082 l6989586621679215081)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215065Scrutinee_6989586621679210948Sym0
instance forall a6989586621679919356 b6989586621679919354 k1 k (l6989586621679215062 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215065Scrutinee_6989586621679210948Sym1 l6989586621679215062)
instance forall a6989586621679919356 b6989586621679919354 k1 k (f6989586621679215063 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)) (l6989586621679215062 :: a6989586621679919356 Data.Singletons.Internal.~> b6989586621679919354). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215065Scrutinee_6989586621679210948Sym2 f6989586621679215063 l6989586621679215062)
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215049Scrutinee_6989586621679210953Sym0
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679215047 :: (Data.Singletons.Internal.TyFun a6989586621679095349 (Data.Functor.Const.Const a6989586621679095349 b6989586621679095350) -> *) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215049Scrutinee_6989586621679210953Sym1 l6989586621679215047)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679215026Sym0
instance forall k1 k2 k3 k4 (f6989586621679215023 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215026Sym1 f6989586621679215023)
instance forall k1 k2 k3 k4 (g6989586621679215024 :: k4) (f6989586621679215023 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215026Sym2 g6989586621679215024 f6989586621679215023)
instance forall k1 k2 k3 k4 (a_69895866216792150216989586621679215025 :: k4) (g6989586621679215024 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3) (f6989586621679215023 :: k1). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215026Sym3 a_69895866216792150216989586621679215025 g6989586621679215024 f6989586621679215023)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215029Scrutinee_6989586621679210958Sym0
instance forall k1 k2 k3 k4 (f6989586621679215023 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215029Scrutinee_6989586621679210958Sym1 f6989586621679215023)
instance forall k1 k2 k3 k4 (g6989586621679215024 :: k4) (f6989586621679215023 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215029Scrutinee_6989586621679210958Sym2 g6989586621679215024 f6989586621679215023)
instance forall k1 k2 k3 k4 (x6989586621679215028 :: k4) (g6989586621679215024 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679215023 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215029Scrutinee_6989586621679210958Sym3 x6989586621679215028 g6989586621679215024 f6989586621679215023)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215007Scrutinee_6989586621679210961Sym0
instance forall k k2 k3 (f6989586621679215004 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215007Scrutinee_6989586621679210961Sym1 f6989586621679215004)
instance forall k k2 k3 (g6989586621679215005 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679215004 :: k3 Data.Singletons.Internal.~> k). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215007Scrutinee_6989586621679210961Sym2 g6989586621679215005 f6989586621679215004)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214984Scrutinee_6989586621679210966Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679214982 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679919356] b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214984Scrutinee_6989586621679210966Sym1 l6989586621679214982)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214985Sym0
instance forall k1 k2 k3 (l6989586621679214982 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214985Sym1 l6989586621679214982)
instance forall k1 k2 k3 (x6989586621679214983 :: k3) (l6989586621679214982 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214985Sym2 x6989586621679214983 l6989586621679214982)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214958Scrutinee_6989586621679210973Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679214956 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679919356) b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214958Scrutinee_6989586621679210973Sym1 l6989586621679214956)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214944Scrutinee_6989586621679210986Sym0
instance forall b6989586621680695205 (f6989586621680695203 :: * -> *) k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621679214941 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214944Scrutinee_6989586621679210986Sym1 f6989586621679214941)
instance forall (f6989586621680695203 :: * -> *) b6989586621680695205 k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (g6989586621679214942 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204) (f6989586621679214941 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214944Scrutinee_6989586621679210986Sym2 g6989586621679214942 f6989586621679214941)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214928Scrutinee_6989586621679210991Sym0
instance forall (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621680695203 :: * -> *) b6989586621680695205 (f6989586621679214926 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214928Scrutinee_6989586621679210991Sym1 f6989586621679214926)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214905Scrutinee_6989586621679210996Sym0
instance forall k2 k3 t k4 k (l6989586621679214902 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214905Scrutinee_6989586621679210996Sym1 l6989586621679214902)
instance forall k2 k3 t k4 k (f6989586621679214903 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)) (l6989586621679214902 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214905Scrutinee_6989586621679210996Sym2 f6989586621679214903 l6989586621679214902)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214906Sym0
instance forall k1 k2 k3 t k4 (l6989586621679214902 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214906Sym1 l6989586621679214902)
instance forall k1 k2 t k3 k4 (f6989586621679214903 :: k4) (l6989586621679214902 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214906Sym2 f6989586621679214903 l6989586621679214902)
instance forall k1 t k2 k3 k4 (x6989586621679214904 :: k4) (f6989586621679214903 :: k3) (l6989586621679214902 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214906Sym3 x6989586621679214904 f6989586621679214903 l6989586621679214902)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214888Sym0
instance forall k1 k2 k3 t k4 (l6989586621679214885 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214888Sym1 l6989586621679214885)
instance forall k1 k2 t k3 k4 (f6989586621679214886 :: k4) (l6989586621679214885 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214888Sym2 f6989586621679214886 l6989586621679214885)
instance forall k1 t k2 k3 k4 (xs6989586621679214887 :: k4) (f6989586621679214886 :: k3) (l6989586621679214885 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214888Sym3 xs6989586621679214887 f6989586621679214886 l6989586621679214885)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214871Sym0
instance forall k2 k3 k4 k5 (f6989586621679214868 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214871Sym1 f6989586621679214868)
instance forall k2 k3 k4 k5 (x6989586621679214869 :: k5) (f6989586621679214868 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214871Sym2 x6989586621679214869 f6989586621679214868)
instance forall k2 k3 k4 k5 (y6989586621679214870 :: k5) (x6989586621679214869 :: k4) (f6989586621679214868 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214871Sym3 y6989586621679214870 x6989586621679214869 f6989586621679214868)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214856Sym0
instance forall k2 k3 k4 k5 (f6989586621679214853 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214856Sym1 f6989586621679214853)
instance forall k2 k3 k4 k5 (x6989586621679214854 :: k5) (f6989586621679214853 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214856Sym2 x6989586621679214854 f6989586621679214853)
instance forall k2 k3 k4 k5 (y6989586621679214855 :: k5) (x6989586621679214854 :: k4) (f6989586621679214853 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214856Sym3 y6989586621679214855 x6989586621679214854 f6989586621679214853)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ShowsPrec_6989586621679208339Sym0
instance Data.Singletons.Prelude.Show.PShow Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ShowsPrec_6989586621679208339Sym1 a6989586621679208336)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ShowsPrec_6989586621679208339Sym2 a6989586621679208337 a6989586621679208336)
instance Data.Singletons.Prelude.Show.SShow Data.Type.Lens.N => Data.Singletons.Prelude.Show.SShow Data.Type.Lens.N
instance Data.Singletons.Decide.SDecide Data.Type.Lens.N => Data.Singletons.Decide.SDecide Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Compare_6989586621679206559Sym0
instance Data.Singletons.Prelude.Ord.POrd Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Compare_6989586621679206559Sym1 a6989586621679206557)
instance Data.Singletons.Prelude.Ord.SOrd Data.Type.Lens.N => Data.Singletons.Prelude.Ord.SOrd Data.Type.Lens.N
instance Data.Singletons.Prelude.Eq.PEq Data.Type.Lens.N
instance Data.Singletons.Prelude.Eq.SEq Data.Type.Lens.N => Data.Singletons.Prelude.Eq.SEq Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.GettingSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym1 r6989586621679201101)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym2 s6989586621679201102 r6989586621679201101)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ASetterSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym1 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym2 t6989586621679201105 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym3 a6989586621679201106 t6989586621679201105 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLike'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym1 f6989586621679201108)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym2 s6989586621679201109 f6989586621679201108)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLikeSym0
instance forall k6989586621679201126 (f6989586621679201111 :: k6989586621679201126 -> *). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym1 f6989586621679201111)
instance forall k6989586621679201126 (s6989586621679201112 :: k6989586621679201126 -> *) f6989586621679201111. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym2 s6989586621679201112 f6989586621679201111)
instance forall k6989586621679201126 (t6989586621679201113 :: k6989586621679201126 -> *) s6989586621679201112 (f6989586621679201111 :: k6989586621679201126). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym3 t6989586621679201113 s6989586621679201112 f6989586621679201111)
instance forall k6989586621679201126 (a6989586621679201114 :: k6989586621679201126 -> *) t6989586621679201113 (s6989586621679201112 :: k6989586621679201126) f6989586621679201111. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym4 a6989586621679201114 t6989586621679201113 s6989586621679201112 f6989586621679201111)
instance Data.Singletons.Internal.SingKind Data.Type.Lens.N
instance Data.Singletons.Internal.SingI 'Data.Type.Lens.Z
instance Data.Singletons.Internal.SingI n => Data.Singletons.Internal.SingI ('Data.Type.Lens.S n)
instance Data.Singletons.Internal.SingI (Data.Singletons.Internal.TyCon1 'Data.Type.Lens.S)
instance GHC.Generics.Generic Data.Type.Lens.N
instance GHC.Read.Read Data.Type.Lens.N
instance GHC.Classes.Ord Data.Type.Lens.N
instance GHC.Classes.Eq Data.Type.Lens.N
instance GHC.Show.Show Data.Type.Lens.N


-- | See source for examples of using type-level lenses from
--   <a>Data.Type.Lens</a>.
module Data.Type.Lens.Example

-- | <pre>
--   &gt;&gt;&gt; :kind! SetExample
--   '( 'True, 6 )
--   </pre>
type SetExample = Set L1_  'True '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ViewExample
--   6
--   </pre>
type ViewExample = View L2_ '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ToExample
--   6
--   </pre>
type ToExample = View (To_ SndSym0) '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '( "hello", 'False )
--   </pre>
type OverExample = Over L2_ NotSym0 '("hello",  'True)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '[ 'False, 'True, 'True ]
--   </pre>
type TraversalExample = Over Traverse_ NotSym0 '[ 'True,  'False,  'False]

-- | <pre>
--   &gt;&gt;&gt; :kind! NestedExample
--   6
--   </pre>
type NestedExample = View (L2_ .@ L1_) '("hello", '(6,  'False))

-- | <pre>
--   &gt;&gt;&gt; :kind! FoldExample
--   '["hello", "world", "curry"]
--   </pre>
type FoldExample = ToListOf (Traverse_ .@ L1_) '['("hello",  'True), '("world",  'False), '("curry",  'False)]

-- | <pre>
--   &gt;&gt;&gt; :kind! UnsafeExample
--   Error "Failed indexing into empty traversal"
--   </pre>
type UnsafeExample = UnsafePreview Traverse_ '[]

-- | <pre>
--   &gt;&gt;&gt; :kind! IxExample
--   '["hello", "haskell", "curry"]
--   </pre>
type IxExample = Set (IxList_ ( 'S  'Z)) "haskell" '["hello", "world", "curry"]

-- | <pre>
--   &gt;&gt;&gt; :kind! CloneExample L1_
--   'False
--   
--   &gt;&gt;&gt; :kind! CloneExample L2_
--   'True
--   </pre>
type CloneExample l = View (CloneLens_ l) (Over (CloneLens_ l) NotSym0 '( 'True,  'False))
type SetExample' = '("hello", 6) & L1_ .~  'True
type ViewExample' = '("hello", 6) ^. L2_
type ToExample' = '("hello", 6) ^. To_ SndSym0
type OverExample' = '("hello",  'True) & L2_ %~ NotSym0
type TraversalExample' = '[ 'True,  'False,  'False] & Traverse_ %~ NotSym0
type NestedExample' = '("hello", '(6,  'False)) ^. L2_ .@ L1_
type FoldExample' = '['("hello",  'True), '("world",  'False), '("curry",  'False)] ^.. Traverse_ .@ L1_
type IxExample' = '["hello", "world", "curry"] & IxList_ ( 'S  'Z) .~ "haskell"
type UnsafeExample' = '[] ^?! Traverse_
type CloneExample' l = ('( 'True,  'False) & CloneLens_ l %~ NotSym0) ^. CloneLens_ l
