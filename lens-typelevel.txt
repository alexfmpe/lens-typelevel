-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Type-level lenses using singletons
--   
--   Type-level lenses using singletons and its defunctionalization system,
--   implemented using the same van Laarhoven encoding as the <i>lens</i>
--   package. See README for more information.
@package lens-typelevel
@version 0.1.1.0

module Data.Type.Lens.Internal

-- | A partially applied lens
data Context a b t
MkContext :: (b ~> t) -> a -> Context a b t

-- | A partially applied traversal
data Bazaar a b t
Done :: t -> Bazaar a b t
More :: a -> Bazaar a b (b ~> t) -> Bazaar a b t
type family UnBazaar (a_aEDy :: (~>) a_aEoX (f_aEoW b_aEoY)) (a_aEDz :: Bazaar a_aEoX b_aEoY t_aEoZ) :: f_aEoW t_aEoZ
sUnBazaar :: forall f_aEoW a_aEoX b_aEoY t_aEoZ (t_aEEm :: (~>) a_aEoX (f_aEoW b_aEoY)) (t_aEEn :: Bazaar a_aEoX b_aEoY t_aEoZ). SApplicative f_aEoW => Sing t_aEEm -> Sing t_aEEn -> Sing (Apply (Apply UnBazaarSym0 t_aEEm) t_aEEn :: f_aEoW t_aEoZ)

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
type MkContextSym0 = TyCon2  'MkContext
type MkContextSym1 f = TyCon1 ( 'MkContext f)
type MkContextSym2 f x =  'MkContext f x
type DoneSym0 = TyCon1  'Done
type DoneSym1 x =  'Done x
type MoreSym0 = TyCon2  'More
type MoreSym1 x = TyCon1 ( 'More x)
type MoreSym2 x b =  'More x b
data UnBazaarSym0 :: forall a6989586621679165099 b6989586621679165100 f6989586621679165098 t6989586621679165101. (~>) ((~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) ((~>) (Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) (f6989586621679165098 t6989586621679165101))
data UnBazaarSym1 (a6989586621679166004 :: (~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) :: forall t6989586621679165101. (~>) (Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) (f6989586621679165098 t6989586621679165101)
type UnBazaarSym2 (a6989586621679166004 :: (~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) (a6989586621679166005 :: Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) = UnBazaar a6989586621679166004 a6989586621679166005
instance forall a6989586621679165105 b6989586621679165106 t6989586621679165102 r6989586621679165103 s6989586621679165104 (a6989586621679166027 :: t6989586621679165102 Data.Singletons.Internal.~> (r6989586621679165103 Data.Singletons.Internal.~> s6989586621679165104)) (a6989586621679166026 :: Data.Type.Lens.Internal.Bazaar a6989586621679165105 b6989586621679165106 t6989586621679165102). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym2 a6989586621679166027 a6989586621679166026)
instance forall a6989586621679165105 b6989586621679165106 t6989586621679165102 r6989586621679165103 s6989586621679165104 (a6989586621679166026 :: t6989586621679165102 Data.Singletons.Internal.~> (r6989586621679165103 Data.Singletons.Internal.~> s6989586621679165104)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym1 a6989586621679166026)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.LiftA2BazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.LiftA2BazaarSym0
instance forall t r s a b (d :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym1 d)
instance forall t r s a b (d1 :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)) (d2 :: Data.Type.Lens.Internal.Bazaar a b t). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym2 d1 d2)
instance Data.Singletons.Prelude.Monad.Internal.PApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance forall a6989586621679165112 b6989586621679165113 t6989586621679165110 q6989586621679165111 (a6989586621679166017 :: t6989586621679165110 Data.Singletons.Internal.~> q6989586621679165111). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapBazaarSym1 a6989586621679166017)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapBazaarSym0
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapBazaarSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.PureBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.PureBazaarSym0
instance forall t6989586621679165101 a6989586621679165099 (f6989586621679165098 :: * -> *) b6989586621679165100 (a6989586621679166004 :: a6989586621679165099 Data.Singletons.Internal.~> f6989586621679165098 b6989586621679165100). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.UnBazaarSym1 a6989586621679166004)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.UnBazaarSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.Internal.UnBazaarSym0
instance forall a (f :: * -> *) b t (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.UnBazaarSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.Lambda_6989586621679166039Sym0
instance forall k2 k3 k4 k5 k6 k7 k8 (f6989586621679166035 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym1 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (x6989586621679166036 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (f6989586621679166035 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym2 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (b6989586621679166037 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (x6989586621679166036 :: k5) (f6989586621679166035 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym3 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (c6989586621679166038 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (b6989586621679166037 :: k5) (x6989586621679166036 :: k4) (f6989586621679166035 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym4 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166044 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (c6989586621679166038 :: k5) (b6989586621679166037 :: k4) (x6989586621679166036 :: k3) (f6989586621679166035 :: k2 Data.Singletons.Internal.~> k6). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym5 t6989586621679166044 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166045 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (t6989586621679166044 :: k5) (c6989586621679166038 :: k4) (b6989586621679166037 :: k3) (x6989586621679166036 :: k2 Data.Singletons.Internal.~> k6) (f6989586621679166035 :: k7). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym6 t6989586621679166045 t6989586621679166044 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.Prelude.Monad.Internal.SApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapContextSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapContextSym0
instance forall a6989586621679159061 b6989586621679159062 t6989586621679159059 q6989586621679159060 (a6989586621679159106 :: t6989586621679159059 Data.Singletons.Internal.~> q6989586621679159060). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapContextSym1 a6989586621679159106)
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapContextSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Context a b)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Context a b)


-- | Lenses and optics for manipulating DataKind-based types, powered by
--   <i>singletons</i> defunctionalization.
--   
--   See <a>Data.Type.Lens.Examples</a> for example usage and syntax.
--   
--   For the most part, you should be able to use them just like you'd use
--   the functions from the <i>lens</i> or <i>microlens</i> libraries; just
--   remember to capitalize names like <a>Over</a> and <a>Set</a>, since
--   they are type families.
--   
--   Note that the ways of "creating" a lens or optic (<a>Sets_</a>,
--   <a>Traverse_</a>, <a>To_</a>, <a>MkLens_</a>, etc. are all suffixed
--   with <tt>_</tt> for convenience, to reserve the underscoreless
--   identifiers for the fully applied type family as per <i>singletons</i>
--   library convention.
--   
--   There are two main ways to define optics.
--   
--   First, you can write them by hand using <a>singletonsOnly</a>:
--   
--   <pre>
--   $(singletonsOnly [d|
--     l1 :: Functor f =&gt; LensLike (a, c) (b, c) a b
--     l1 f (x, y) = (x' -&gt; (x', y)) <a>$</a> f x
--   
--     l1Alt :: Functor f =&gt; LensLike (a, c) (b, c) a b
--     l1Alt = mkLens fst ((_, y) x -&gt; (x', y))
--   
--     getFirst :: Getting a (a, b) a
--     getFirst = to fst
--     |])
--   </pre>
--   
--   This creates the <i>type families</i> <tt>L1</tt>, <tt>L1Alt</tt>, and
--   <tt>GetFirst</tt>; however, these aren't lenses, because they aren't
--   partially applied. The lactual lenses are <tt>L1Sym0</tt>,
--   <tt>L1AltSym0</tt>, and <tt>GetFirstSym0</tt>. As a convention, it is
--   recommend to alias the <i>actual</i> lenses with an underscore suffix:
--   
--   <pre>
--   -- L1_       :: Functor f =&gt; LensLike f (a, c) (b, c) a b
--   type L1_       = L1Sym0
--   
--   -- L1Alt_    :: Functor f =&gt; LensLike f (a, c) (b, c) a b
--   type L1Alt     = L1AltSym0
--   
--   -- GetFirst_ :: Getting a (a, b) a
--   type GetFirst_ = GetFirstSym0
--   </pre>
--   
--   The number after the <tt>Sym</tt> is determined by how many arguments
--   you need to apply to your function before you get to the actual lens.
--   For example, <a>IxList</a> requires one argument (the index) to get to
--   the actual traversal, so the definition in the library is:
--   
--   <pre>
--   type IxList_ i = IxListSym1 i
--   </pre>
--   
--   Second, you can write them directly at the type level using
--   combinators like <a>MkLens_</a> and <a>To_</a>:
--   
--   <pre>
--   type GetFirst_ = <a>To_</a> <tt>FstSym0</tt>
--   </pre>
--   
--   (<tt>FstSym0</tt> is the promotion of <a>fst</a> from
--   <a>Data.Singletons.Prelude.Tuple</a>)
module Data.Type.Lens

-- | The general shape of optics in this library. ("van Laarhoven")
--   
--   For different levels of polymorphism on <tt>f</tt>, you get different
--   types of optics:
--   
--   <ul>
--   <li>If <tt>f</tt> can be any <a>Functor</a>, you have a Lens (see
--   <a>ALens</a>)</li>
--   <li>If <tt>f</tt> is only <a>Identity</a>, you have a setter (see
--   <a>ASetter</a>)</li>
--   <li>If <tt>f</tt> is only <tt><a>Const</a> R</tt> for a specific
--   <tt>R</tt>, you have a getter of <tt>R</tt> (see <a>Getting</a>)</li>
--   <li>If <tt>f</tt> can be <tt><a>Const</a> r</tt> for any <a>Monoid</a>
--   <tt>r</tt>, you have a Fold.</li>
--   <li>If <tt>f</tt> can be any <a>Applicative</a>, you have a Traversal
--   (see <a>ATraversal</a>)</li>
--   </ul>
--   
--   Normal lens libraries implement the constraints for lenses, folds, and
--   traversals using RankN types, but we don't do that here to avoid
--   working with RankN kinds.
type LensLike f s t a b = (a -> f b) -> (s -> f t)

-- | A <a>LensLike</a> that does not change any types.
type LensLike' f s a = LensLike f s s a a

-- | A settable "lens". Usable with <a>Over</a> (<a>%~</a>), constructable
--   with <a>To</a> or any of the general lens constructors.
--   
--   See <a>LensLike</a> for more information.
type ASetter s t a b = LensLike Identity s t a b
type family Over (a_aRfG :: (~>) ((~>) a_aQgi (Identity b_aQgj)) ((~>) s_aQgg (Identity t_aQgh))) (a_aRfH :: (~>) a_aQgi b_aQgj) (a_aRfI :: s_aQgg) :: t_aQgh

-- | Infix application of <a>Over</a>
type l %~ f = OverSym2 l f
infixr 4 %~
sOver :: forall s_aQgg t_aQgh a_aQgi b_aQgj (t_aRhb :: (~>) ((~>) a_aQgi (Identity b_aQgj)) ((~>) s_aQgg (Identity t_aQgh))) (t_aRhc :: (~>) a_aQgi b_aQgj) (t_aRhd :: s_aQgg). Sing t_aRhb -> Sing t_aRhc -> Sing t_aRhd -> Sing (Apply (Apply (Apply OverSym0 t_aRhb) t_aRhc) t_aRhd :: t_aQgh)
type family Set (a_aRfX :: (~>) ((~>) a_aQge (Identity b_aQgf)) ((~>) s_aQgc (Identity t_aQgd))) (a_aRfY :: b_aQgf) (a_aRfZ :: s_aQgc) :: t_aQgd

-- | Infix application of <a>Set</a>
type l .~ x = SetSym2 l x
infixr 4 .~
sSet :: forall s_aQgc t_aQgd a_aQge b_aQgf (t_aRhh :: (~>) ((~>) a_aQge (Identity b_aQgf)) ((~>) s_aQgc (Identity t_aQgd))) (t_aRhi :: b_aQgf) (t_aRhj :: s_aQgc). Sing t_aRhh -> Sing t_aRhi -> Sing t_aRhj -> Sing (Apply (Apply (Apply SetSym0 t_aRhh) t_aRhi) t_aRhj :: t_aQgd)

-- | Create a Setter from a setting function.
--   
--   <pre>
--   <a>Sets_</a> :: ((a ~&gt; b) ~&gt; (s ~&gt; t)) -&gt; <a>ASetter</a> s t a b
--   </pre>
type Sets_ f = SetsSym1 f
type family Sets (a_aRf1 :: (~>) ((~>) a_aQg6 b_aQg7) ((~>) s_aQg8 t_aQg9)) (a_aRf2 :: (~>) a_aQg6 (Identity b_aQg7)) (a_aRf3 :: s_aQg8) :: Identity t_aQg9
sSets :: forall a_aQg6 b_aQg7 s_aQg8 t_aQg9 (t_aRh1 :: (~>) ((~>) a_aQg6 b_aQg7) ((~>) s_aQg8 t_aQg9)) (t_aRh2 :: (~>) a_aQg6 (Identity b_aQg7)) (t_aRh3 :: s_aQg8). Sing t_aRh1 -> Sing t_aRh2 -> Sing t_aRh3 -> Sing (Apply (Apply (Apply SetsSym0 t_aRh1) t_aRh2) t_aRh3 :: Identity t_aQg9)

-- | A retrieving "lens". If <tt>r</tt> is fixed to a type, it's a Getter
--   for that type. If <tt>r</tt> is polymorphic over all <a>Monoid</a>,
--   then it's a Fold over <tt>a</tt>s.
--   
--   As a Getter, usable with <a>View</a> (<a>^.</a>); as a Fold, usable
--   with <a>ToListOf</a> (<a>^..</a>), <a>Preview</a> (<a>^?</a>), etc.
--   
--   Normal lens libraries implement the constraints for folds using RankN
--   types, but we don't do that here to avoid working with RankN kinds.
--   
--   See <a>LensLike</a> for more information.
type Getting r s a = LensLike (Const r) s s a a
type family View (a_aRft :: (~>) ((~>) a_aQga ((Const a_aQga :: Type -> Type) a_aQga)) ((~>) s_aQgb ((Const a_aQga :: Type -> Type) s_aQgb))) (a_aRfu :: s_aQgb) :: a_aQga

-- | Infix application of <a>View</a>
type x ^. l = View l x
infixl 8 ^.
sView :: forall a_aQga s_aQgb (t_aRh7 :: (~>) ((~>) a_aQga ((Const a_aQga :: Type -> Type) a_aQga)) ((~>) s_aQgb ((Const a_aQga :: Type -> Type) s_aQgb))) (t_aRh8 :: s_aQgb). Sing t_aRh7 -> Sing t_aRh8 -> Sing (Apply (Apply ViewSym0 t_aRh7) t_aRh8 :: a_aQga)

-- | Create a Getter from a getting function.
--   
--   <pre>
--   <a>To_</a> :: (a ~&gt; b) -&gt; <a>Getting</a> b a b
--   </pre>
type To_ f = ToSym1 f
type family To (a_aReK :: (~>) s_aQg3 a_aQg4) (a_aReL :: (~>) a_aQg4 ((Const r_aQg5 :: Type -> Type) a_aQg4)) (a_aReM :: s_aQg3) :: (Const r_aQg5 :: Type -> Type) s_aQg3
sTo :: forall s_aQg3 a_aQg4 r_aQg5 (t_aRgV :: (~>) s_aQg3 a_aQg4) (t_aRgW :: (~>) a_aQg4 ((Const r_aQg5 :: Type -> Type) a_aQg4)) (t_aRgX :: s_aQg3). Sing t_aRgV -> Sing t_aRgW -> Sing t_aRgX -> Sing (Apply (Apply (Apply ToSym0 t_aRgV) t_aRgW) t_aRgX :: (Const r_aQg5 :: Type -> Type) s_aQg3)

-- | If a function expects an <a>ALens</a>, it can be given any Lens (a
--   <tt><a>LensLike</a> f</tt> that works for any <a>Functor</a> f).
--   
--   You can use an <a>ALens</a> as a normal lens by using
--   <a>CloneLens_</a>.
type ALens s t a b = LensLike (Context a b) s t a b

-- | Create a Lens from a setter and a getter.
--   
--   <pre>
--   <a>MkLens_</a>
--       :: <a>Functor</a> f
--       =&gt; (s ~&gt; a)
--       -&gt; (s ~&gt; b ~&gt; t)
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
type MkLens_ f g = MkLensSym2 f g
type family MkLens (a_aRey :: (~>) s_aQfZ a_aQg0) (a_aRez :: (~>) s_aQfZ ((~>) b_aQg1 t_aQg2)) (a_aReA :: (~>) a_aQg0 (f_aQfY b_aQg1)) (a_aReB :: s_aQfZ) :: f_aQfY t_aQg2
sMkLens :: forall f_aQfY s_aQfZ a_aQg0 b_aQg1 t_aQg2 (t_aRgN :: (~>) s_aQfZ a_aQg0) (t_aRgO :: (~>) s_aQfZ ((~>) b_aQg1 t_aQg2)) (t_aRgP :: (~>) a_aQg0 (f_aQfY b_aQg1)) (t_aRgQ :: s_aQfZ). SFunctor f_aQfY => Sing t_aRgN -> Sing t_aRgO -> Sing t_aRgP -> Sing t_aRgQ -> Sing (Apply (Apply (Apply (Apply MkLensSym0 t_aRgN) t_aRgO) t_aRgP) t_aRgQ :: f_aQfY t_aQg2)

-- | <a>Clone</a> a polymorphic lens so it can be used as more than one
--   type of thing (getter or setter).
--   
--   <pre>
--   <a>CloneLens_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Context a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a lens and uses it in more
--   than one way; if you have it take an <a>ALens</a>, you can then use
--   <a>CloneLens_</a> to use it as a getter or setter.
type CloneLens_ l = CloneLensSym1 l
type family CloneLens (a_aXh5 :: (~>) ((~>) a_aXbe (Context a_aXbe b_aXbf b_aXbf)) ((~>) s_aXbg (Context a_aXbe b_aXbf t_aXbh))) (a_aXh6 :: (~>) a_aXbe (f_aXbd b_aXbf)) (a_aXh7 :: s_aXbg) :: f_aXbd t_aXbh

-- | If a function expects an <a>ATraversal</a>, it can be given any
--   Traversal (a <tt><a>LensLike</a> f</tt> that works for any
--   <a>Applicative</a> f).
--   
--   You can use an <a>ATraversal</a> as a normal traversal by using
--   <a>CloneTraversal_</a>.
type ATraversal s t a b = LensLike (Bazaar a b) s t a b
type family Preview (a_aRdO :: (~>) ((~>) a_aQfU ((Const (First a_aQfU) :: Type -> Type) a_aQfU)) ((~>) s_aQfV ((Const (First a_aQfU) :: Type -> Type) s_aQfV))) (a_aRdP :: s_aQfV) :: Maybe a_aQfU

-- | Infix application of <a>Preview</a>
type x ^? l = Preview l x
infixl 8 ^?
sPreview :: forall a_aQfU s_aQfV (t_aRgB :: (~>) ((~>) a_aQfU ((Const (First a_aQfU) :: Type -> Type) a_aQfU)) ((~>) s_aQfV ((Const (First a_aQfU) :: Type -> Type) s_aQfV))) (t_aRgC :: s_aQfV). Sing t_aRgB -> Sing t_aRgC -> Sing (Apply (Apply PreviewSym0 t_aRgB) t_aRgC :: Maybe a_aQfU)
type family ToListOf (a_aRee :: (~>) ((~>) a_aQfW ((Const [a_aQfW] :: Type -> Type) a_aQfW)) ((~>) s_aQfX ((Const [a_aQfW] :: Type -> Type) s_aQfX))) (a_aRef :: s_aQfX) :: [a_aQfW]

-- | Infix application of <a>ToListOf</a>
type x ^.. l = ToListOf l x
infixl 8 ^..
sToListOf :: forall a_aQfW s_aQfX (t_aRgJ :: (~>) ((~>) a_aQfW ((Const [a_aQfW] :: Type -> Type) a_aQfW)) ((~>) s_aQfX ((Const [a_aQfW] :: Type -> Type) s_aQfX))) (t_aRgK :: s_aQfX). Sing t_aRgJ -> Sing t_aRgK -> Sing (Apply (Apply ToListOfSym0 t_aRgJ) t_aRgK :: [a_aQfW])
type family UnsafePreview (a_aRe1 :: (~>) ((~>) a_aQfS ((Const (First a_aQfS) :: Type -> Type) a_aQfS)) ((~>) s_aQfT ((Const (First a_aQfS) :: Type -> Type) s_aQfT))) (a_aRe2 :: s_aQfT) :: a_aQfS

-- | Infix application of <a>UnsafePreview</a>
type x ^?! l = UnsafePreview l x
infixl 8 ^?!
sUnsafePreview :: forall a_aQfS s_aQfT (t_aRgF :: (~>) ((~>) a_aQfS ((Const (First a_aQfS) :: Type -> Type) a_aQfS)) ((~>) s_aQfT ((Const (First a_aQfS) :: Type -> Type) s_aQfT))) (t_aRgG :: s_aQfT). Sing t_aRgF -> Sing t_aRgG -> Sing (Apply (Apply UnsafePreviewSym0 t_aRgF) t_aRgG :: a_aQfS)

-- | Create a Fold from a "folding function":
--   
--   <pre>
--   <a>Folding_</a>
--       :: (<a>Foldable</a> f, <a>Monoid</a> r)
--       =&gt; (s ~&gt; f a)
--       -&gt; <a>Getting</a> r s a
--   </pre>
type Folding_ f = FoldingSym1 f
type family Folding (a_aRdx :: (~>) s_aQfQ (f_aQfO a_aQfR)) (a_aRdy :: (~>) a_aQfR ((Const r_aQfP :: Type -> Type) a_aQfR)) (a_aRdz :: s_aQfQ) :: (Const r_aQfP :: Type -> Type) s_aQfQ
sFolding :: forall f_aQfO r_aQfP s_aQfQ a_aQfR (t_aRgv :: (~>) s_aQfQ (f_aQfO a_aQfR)) (t_aRgw :: (~>) a_aQfR ((Const r_aQfP :: Type -> Type) a_aQfR)) (t_aRgx :: s_aQfQ). (SFoldable f_aQfO, SMonoid r_aQfP) => Sing t_aRgv -> Sing t_aRgw -> Sing t_aRgx -> Sing (Apply (Apply (Apply FoldingSym0 t_aRgv) t_aRgw) t_aRgx :: (Const r_aQfP :: Type -> Type) s_aQfQ)

-- | The canonical Fold for any instance of <a>Foldable</a>.
--   
--   <pre>
--   <a>Folded_</a>
--       :: <a>Monoid</a> r
--       =&gt; <a>Getting</a> r (t a) a
--   </pre>
type Folded_ = FoldedSym0
type family Folded (a_aRdk :: (~>) a_aQfN ((Const r_aQfM :: Type -> Type) a_aQfN)) (a_aRdl :: f_aQfL a_aQfN) :: (Const r_aQfM :: Type -> Type) (f_aQfL a_aQfN)
sFolded :: forall f_aQfL r_aQfM a_aQfN (t_aRgr :: (~>) a_aQfN ((Const r_aQfM :: Type -> Type) a_aQfN)) (t_aRgs :: f_aQfL a_aQfN). (SFoldable f_aQfL, SMonoid r_aQfM) => Sing t_aRgr -> Sing t_aRgs -> Sing (Apply (Apply FoldedSym0 t_aRgr) t_aRgs :: (Const r_aQfM :: Type -> Type) (f_aQfL a_aQfN))

-- | The canonical Traversal for any instance of <a>Traversable</a>.
--   
--   <pre>
--   <a>Traverse_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>LensLike</a> f (t a) (t b) a b
--   </pre>
type Traverse_ = TraverseSym0
type family Traverse (arg :: a ~> f b) (arg1 :: t a) :: f t b
sTraverse :: (STraversable t, SApplicative f) => Sing t1 -> Sing t2 -> Sing (Apply (Apply (TraverseSym0 :: TyFun (a ~> f b) (t a ~> f (t b)) -> Type) t1) t2)

-- | <a>Clone</a> a polymorphic traversal so it can be used as more than
--   one type of thing (fold, traversal, getter, setter...).
--   
--   <pre>
--   <a>CloneTraversal_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Bazaar a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a traversal and uses it in
--   more than one way; if you have it take an <a>ATraversal</a>, you can
--   then use <a>CloneTraversal_</a> to use it as a fold or traversal or
--   anything else.
type CloneTraversal_ l = CloneTraversalSym1 l
type family CloneTraversal (a_aXgO :: (~>) ((~>) a_aXb9 (Bazaar a_aXb9 b_aXba b_aXba)) ((~>) s_aXbb (Bazaar a_aXb9 b_aXba t_aXbc))) (a_aXgP :: (~>) a_aXb9 (f_aXb8 b_aXba)) (a_aXgQ :: s_aXbb) :: f_aXb8 t_aXbc
sCloneTraversal :: forall f_aXb8 a_aXb9 b_aXba s_aXbb t_aXbc (t_aXhv :: (~>) ((~>) a_aXb9 (Bazaar a_aXb9 b_aXba b_aXba)) ((~>) s_aXbb (Bazaar a_aXb9 b_aXba t_aXbc))) (t_aXhw :: (~>) a_aXb9 (f_aXb8 b_aXba)) (t_aXhx :: s_aXbb). SApplicative f_aXb8 => Sing t_aXhv -> Sing t_aXhw -> Sing t_aXhx -> Sing (Apply (Apply (Apply CloneTraversalSym0 t_aXhv) t_aXhw) t_aXhx :: f_aXb8 t_aXbc)

-- | Lens into the first field of a tuple
type L1_ = L1Sym0
type family L1 (a_aRd5 :: (~>) a_aQfI (f_aQfH b_aQfK)) (a_aRd6 :: (a_aQfI, c_aQfJ)) :: f_aQfH (b_aQfK, c_aQfJ)
sL1 :: forall f_aQfH a_aQfI c_aQfJ b_aQfK (t_aRgn :: (~>) a_aQfI (f_aQfH b_aQfK)) (t_aRgo :: (a_aQfI, c_aQfJ)). SFunctor f_aQfH => Sing t_aRgn -> Sing t_aRgo -> Sing (Apply (Apply L1Sym0 t_aRgn) t_aRgo :: f_aQfH (b_aQfK, c_aQfJ))

-- | Lens into the second field of a tuple
type L2_ = L2Sym0
type family L2 (a_aRcQ :: (~>) b_aQfF (f_aQfD c_aQfG)) (a_aRcR :: (a_aQfE, b_aQfF)) :: f_aQfD (a_aQfE, c_aQfG)
sL2 :: forall f_aQfD a_aQfE b_aQfF c_aQfG (t_aRgj :: (~>) b_aQfF (f_aQfD c_aQfG)) (t_aRgk :: (a_aQfE, b_aQfF)). SFunctor f_aQfD => Sing t_aRgj -> Sing t_aRgk -> Sing (Apply (Apply L2Sym0 t_aRgj) t_aRgk :: f_aQfD (a_aQfE, c_aQfG))

-- | Peano nats, used for implementation of list index traversals in a
--   termination-sane way.
data N
Z :: N
S :: N -> N
type SN = (Sing :: N -> Type)

-- | <tt><a>IxList</a> i</tt> is a Traversal into the i-th item into a
--   list. Defined in terms of <a>N</a> to allow for sane termination
--   guaruntees.
--   
--   <pre>
--   <a>IxList_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>N</a>
--       -&gt; <a>LensLike'</a> f [a] a
--   </pre>
type IxList_ i = IxListSym1 i
type family IxList (a_aWBQ :: N) (a_aWBR :: (~>) a_aWB1 (f_aWB0 a_aWB1)) (a_aWBS :: [a_aWB1]) :: f_aWB0 [a_aWB1]
sIxList :: forall f_aWB0 a_aWB1 (t_aWCb :: N) (t_aWCc :: (~>) a_aWB1 (f_aWB0 a_aWB1)) (t_aWCd :: [a_aWB1]). SApplicative f_aWB0 => Sing t_aWCb -> Sing t_aWCc -> Sing t_aWCd -> Sing (Apply (Apply (Apply IxListSym0 t_aWCb) t_aWCc) t_aWCd :: f_aWB0 [a_aWB1])
ixList :: Applicative f_aWB0 => N -> LensLike' f_aWB0 [a_aWB1] a_aWB1

-- | Shorter name for type-level function composition
type f .@ g = f .@#@$$$ g
infixr 9 .@

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
data ASetterSym0 s6989586621679201104
data ASetterSym1 (s6989586621679201104 :: Type) t6989586621679201105
data ASetterSym2 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) a6989586621679201106
data ASetterSym3 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) (a6989586621679201106 :: Type) b6989586621679201107
type ASetterSym4 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) (a6989586621679201106 :: Type) (b6989586621679201107 :: Type) = ASetter s6989586621679201104 t6989586621679201105 a6989586621679201106 b6989586621679201107
data OverSym0 :: forall a6989586621679210690 b6989586621679210691 s6989586621679210688 t6989586621679210689. (~>) ((~>) ((~>) a6989586621679210690 (Identity b6989586621679210691)) ((~>) s6989586621679210688 (Identity t6989586621679210689))) ((~>) ((~>) a6989586621679210690 b6989586621679210691) ((~>) s6989586621679210688 t6989586621679210689))
data OverSym1 (a6989586621679214496 :: (~>) ((~>) a6989586621679210690 (Identity b6989586621679210691)) ((~>) s6989586621679210688 (Identity t6989586621679210689))) :: (~>) ((~>) a6989586621679210690 b6989586621679210691) ((~>) s6989586621679210688 t6989586621679210689)
data OverSym2 (a6989586621679214496 :: (~>) ((~>) a6989586621679210690 (Identity b6989586621679210691)) ((~>) s6989586621679210688 (Identity t6989586621679210689))) (a6989586621679214497 :: (~>) a6989586621679210690 b6989586621679210691) :: (~>) s6989586621679210688 t6989586621679210689
type OverSym3 (a6989586621679214496 :: (~>) ((~>) a6989586621679210690 (Identity b6989586621679210691)) ((~>) s6989586621679210688 (Identity t6989586621679210689))) (a6989586621679214497 :: (~>) a6989586621679210690 b6989586621679210691) (a6989586621679214498 :: s6989586621679210688) = Over a6989586621679214496 a6989586621679214497 a6989586621679214498
data SetSym0 :: forall a6989586621679210686 b6989586621679210687 s6989586621679210684 t6989586621679210685. (~>) ((~>) ((~>) a6989586621679210686 (Identity b6989586621679210687)) ((~>) s6989586621679210684 (Identity t6989586621679210685))) ((~>) b6989586621679210687 ((~>) s6989586621679210684 t6989586621679210685))
data SetSym1 (a6989586621679214513 :: (~>) ((~>) a6989586621679210686 (Identity b6989586621679210687)) ((~>) s6989586621679210684 (Identity t6989586621679210685))) :: (~>) b6989586621679210687 ((~>) s6989586621679210684 t6989586621679210685)
data SetSym2 (a6989586621679214513 :: (~>) ((~>) a6989586621679210686 (Identity b6989586621679210687)) ((~>) s6989586621679210684 (Identity t6989586621679210685))) (a6989586621679214514 :: b6989586621679210687) :: (~>) s6989586621679210684 t6989586621679210685
type SetSym3 (a6989586621679214513 :: (~>) ((~>) a6989586621679210686 (Identity b6989586621679210687)) ((~>) s6989586621679210684 (Identity t6989586621679210685))) (a6989586621679214514 :: b6989586621679210687) (a6989586621679214515 :: s6989586621679210684) = Set a6989586621679214513 a6989586621679214514 a6989586621679214515
data SetsSym0 :: forall a6989586621679210678 b6989586621679210679 s6989586621679210680 t6989586621679210681. (~>) ((~>) ((~>) a6989586621679210678 b6989586621679210679) ((~>) s6989586621679210680 t6989586621679210681)) ((~>) ((~>) a6989586621679210678 (Identity b6989586621679210679)) ((~>) s6989586621679210680 (Identity t6989586621679210681)))
data SetsSym1 (a6989586621679214455 :: (~>) ((~>) a6989586621679210678 b6989586621679210679) ((~>) s6989586621679210680 t6989586621679210681)) :: (~>) ((~>) a6989586621679210678 (Identity b6989586621679210679)) ((~>) s6989586621679210680 (Identity t6989586621679210681))
data SetsSym2 (a6989586621679214455 :: (~>) ((~>) a6989586621679210678 b6989586621679210679) ((~>) s6989586621679210680 t6989586621679210681)) (a6989586621679214456 :: (~>) a6989586621679210678 (Identity b6989586621679210679)) :: (~>) s6989586621679210680 (Identity t6989586621679210681)
type SetsSym3 (a6989586621679214455 :: (~>) ((~>) a6989586621679210678 b6989586621679210679) ((~>) s6989586621679210680 t6989586621679210681)) (a6989586621679214456 :: (~>) a6989586621679210678 (Identity b6989586621679210679)) (a6989586621679214457 :: s6989586621679210680) = Sets a6989586621679214455 a6989586621679214456 a6989586621679214457
data GettingSym0 r6989586621679201101
data GettingSym1 (r6989586621679201101 :: Type) s6989586621679201102
data GettingSym2 (r6989586621679201101 :: Type) (s6989586621679201102 :: Type) a6989586621679201103
type GettingSym3 (r6989586621679201101 :: Type) (s6989586621679201102 :: Type) (a6989586621679201103 :: Type) = Getting r6989586621679201101 s6989586621679201102 a6989586621679201103
data ViewSym0 :: forall a6989586621679210682 s6989586621679210683. (~>) ((~>) ((~>) a6989586621679210682 ((Const a6989586621679210682 :: Type -> Type) a6989586621679210682)) ((~>) s6989586621679210683 ((Const a6989586621679210682 :: Type -> Type) s6989586621679210683))) ((~>) s6989586621679210683 a6989586621679210682)
data ViewSym1 (a6989586621679214483 :: (~>) ((~>) a6989586621679210682 ((Const a6989586621679210682 :: Type -> Type) a6989586621679210682)) ((~>) s6989586621679210683 ((Const a6989586621679210682 :: Type -> Type) s6989586621679210683))) :: (~>) s6989586621679210683 a6989586621679210682
type ViewSym2 (a6989586621679214483 :: (~>) ((~>) a6989586621679210682 ((Const a6989586621679210682 :: Type -> Type) a6989586621679210682)) ((~>) s6989586621679210683 ((Const a6989586621679210682 :: Type -> Type) s6989586621679210683))) (a6989586621679214484 :: s6989586621679210683) = View a6989586621679214483 a6989586621679214484
data ToSym0 :: forall a6989586621679210676 r6989586621679210677 s6989586621679210675. (~>) ((~>) s6989586621679210675 a6989586621679210676) ((~>) ((~>) a6989586621679210676 ((Const r6989586621679210677 :: Type -> Type) a6989586621679210676)) ((~>) s6989586621679210675 ((Const r6989586621679210677 :: Type -> Type) s6989586621679210675)))
data ToSym1 (a6989586621679214438 :: (~>) s6989586621679210675 a6989586621679210676) :: forall r6989586621679210677. (~>) ((~>) a6989586621679210676 ((Const r6989586621679210677 :: Type -> Type) a6989586621679210676)) ((~>) s6989586621679210675 ((Const r6989586621679210677 :: Type -> Type) s6989586621679210675))
data ToSym2 (a6989586621679214438 :: (~>) s6989586621679210675 a6989586621679210676) (a6989586621679214439 :: (~>) a6989586621679210676 ((Const r6989586621679210677 :: Type -> Type) a6989586621679210676)) :: (~>) s6989586621679210675 ((Const r6989586621679210677 :: Type -> Type) s6989586621679210675)
type ToSym3 (a6989586621679214438 :: (~>) s6989586621679210675 a6989586621679210676) (a6989586621679214439 :: (~>) a6989586621679210676 ((Const r6989586621679210677 :: Type -> Type) a6989586621679210676)) (a6989586621679214440 :: s6989586621679210675) = To a6989586621679214438 a6989586621679214439 a6989586621679214440
data ToListOfSym0 :: forall a6989586621679210668 s6989586621679210669. (~>) ((~>) ((~>) a6989586621679210668 ((Const [a6989586621679210668] :: Type -> Type) a6989586621679210668)) ((~>) s6989586621679210669 ((Const [a6989586621679210668] :: Type -> Type) s6989586621679210669))) ((~>) s6989586621679210669 [a6989586621679210668])
data ToListOfSym1 (a6989586621679214406 :: (~>) ((~>) a6989586621679210668 ((Const [a6989586621679210668] :: Type -> Type) a6989586621679210668)) ((~>) s6989586621679210669 ((Const [a6989586621679210668] :: Type -> Type) s6989586621679210669))) :: (~>) s6989586621679210669 [a6989586621679210668]
type ToListOfSym2 (a6989586621679214406 :: (~>) ((~>) a6989586621679210668 ((Const [a6989586621679210668] :: Type -> Type) a6989586621679210668)) ((~>) s6989586621679210669 ((Const [a6989586621679210668] :: Type -> Type) s6989586621679210669))) (a6989586621679214407 :: s6989586621679210669) = ToListOf a6989586621679214406 a6989586621679214407
data LensLikeSym0 f6989586621679201111
data LensLikeSym1 (f6989586621679201111 :: k6989586621679201126 -> Type) s6989586621679201112
data LensLikeSym2 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) t6989586621679201113
data LensLikeSym3 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) a6989586621679201114
data LensLikeSym4 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) (a6989586621679201114 :: Type) b6989586621679201115
type LensLikeSym5 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) (a6989586621679201114 :: Type) (b6989586621679201115 :: k6989586621679201126) = LensLike f6989586621679201111 s6989586621679201112 t6989586621679201113 a6989586621679201114 b6989586621679201115
data LensLike'Sym0 f6989586621679201108
data LensLike'Sym1 (f6989586621679201108 :: Type -> Type) s6989586621679201109
data LensLike'Sym2 (f6989586621679201108 :: Type -> Type) (s6989586621679201109 :: Type) a6989586621679201110
type LensLike'Sym3 (f6989586621679201108 :: Type -> Type) (s6989586621679201109 :: Type) (a6989586621679201110 :: Type) = LensLike' f6989586621679201108 s6989586621679201109 a6989586621679201110
data MkLensSym0 :: forall a6989586621679210672 b6989586621679210673 f6989586621679210670 s6989586621679210671 t6989586621679210674. (~>) ((~>) s6989586621679210671 a6989586621679210672) ((~>) ((~>) s6989586621679210671 ((~>) b6989586621679210673 t6989586621679210674)) ((~>) ((~>) a6989586621679210672 (f6989586621679210670 b6989586621679210673)) ((~>) s6989586621679210671 (f6989586621679210670 t6989586621679210674))))
data MkLensSym1 (a6989586621679214426 :: (~>) s6989586621679210671 a6989586621679210672) :: forall b6989586621679210673 f6989586621679210670 t6989586621679210674. (~>) ((~>) s6989586621679210671 ((~>) b6989586621679210673 t6989586621679210674)) ((~>) ((~>) a6989586621679210672 (f6989586621679210670 b6989586621679210673)) ((~>) s6989586621679210671 (f6989586621679210670 t6989586621679210674)))
data MkLensSym2 (a6989586621679214426 :: (~>) s6989586621679210671 a6989586621679210672) (a6989586621679214427 :: (~>) s6989586621679210671 ((~>) b6989586621679210673 t6989586621679210674)) :: forall f6989586621679210670. (~>) ((~>) a6989586621679210672 (f6989586621679210670 b6989586621679210673)) ((~>) s6989586621679210671 (f6989586621679210670 t6989586621679210674))
data MkLensSym3 (a6989586621679214426 :: (~>) s6989586621679210671 a6989586621679210672) (a6989586621679214427 :: (~>) s6989586621679210671 ((~>) b6989586621679210673 t6989586621679210674)) (a6989586621679214428 :: (~>) a6989586621679210672 (f6989586621679210670 b6989586621679210673)) :: (~>) s6989586621679210671 (f6989586621679210670 t6989586621679210674)
type MkLensSym4 (a6989586621679214426 :: (~>) s6989586621679210671 a6989586621679210672) (a6989586621679214427 :: (~>) s6989586621679210671 ((~>) b6989586621679210673 t6989586621679210674)) (a6989586621679214428 :: (~>) a6989586621679210672 (f6989586621679210670 b6989586621679210673)) (a6989586621679214429 :: s6989586621679210671) = MkLens a6989586621679214426 a6989586621679214427 a6989586621679214428 a6989586621679214429
data CloneLensSym0 :: forall a6989586621679237284 b6989586621679237285 f6989586621679237283 s6989586621679237286 t6989586621679237287. (~>) ((~>) ((~>) a6989586621679237284 (Context a6989586621679237284 b6989586621679237285 b6989586621679237285)) ((~>) s6989586621679237286 (Context a6989586621679237284 b6989586621679237285 t6989586621679237287))) ((~>) ((~>) a6989586621679237284 (f6989586621679237283 b6989586621679237285)) ((~>) s6989586621679237286 (f6989586621679237283 t6989586621679237287)))
data CloneLensSym1 (a6989586621679237647 :: (~>) ((~>) a6989586621679237284 (Context a6989586621679237284 b6989586621679237285 b6989586621679237285)) ((~>) s6989586621679237286 (Context a6989586621679237284 b6989586621679237285 t6989586621679237287))) :: forall f6989586621679237283. (~>) ((~>) a6989586621679237284 (f6989586621679237283 b6989586621679237285)) ((~>) s6989586621679237286 (f6989586621679237283 t6989586621679237287))
data CloneLensSym2 (a6989586621679237647 :: (~>) ((~>) a6989586621679237284 (Context a6989586621679237284 b6989586621679237285 b6989586621679237285)) ((~>) s6989586621679237286 (Context a6989586621679237284 b6989586621679237285 t6989586621679237287))) (a6989586621679237648 :: (~>) a6989586621679237284 (f6989586621679237283 b6989586621679237285)) :: (~>) s6989586621679237286 (f6989586621679237283 t6989586621679237287)
type CloneLensSym3 (a6989586621679237647 :: (~>) ((~>) a6989586621679237284 (Context a6989586621679237284 b6989586621679237285 b6989586621679237285)) ((~>) s6989586621679237286 (Context a6989586621679237284 b6989586621679237285 t6989586621679237287))) (a6989586621679237648 :: (~>) a6989586621679237284 (f6989586621679237283 b6989586621679237285)) (a6989586621679237649 :: s6989586621679237286) = CloneLens a6989586621679237647 a6989586621679237648 a6989586621679237649
data FoldingSym0 :: forall a6989586621679210663 f6989586621679210660 r6989586621679210661 s6989586621679210662. (~>) ((~>) s6989586621679210662 (f6989586621679210660 a6989586621679210663)) ((~>) ((~>) a6989586621679210663 ((Const r6989586621679210661 :: Type -> Type) a6989586621679210663)) ((~>) s6989586621679210662 ((Const r6989586621679210661 :: Type -> Type) s6989586621679210662)))
data FoldingSym1 (a6989586621679214363 :: (~>) s6989586621679210662 (f6989586621679210660 a6989586621679210663)) :: forall r6989586621679210661. (~>) ((~>) a6989586621679210663 ((Const r6989586621679210661 :: Type -> Type) a6989586621679210663)) ((~>) s6989586621679210662 ((Const r6989586621679210661 :: Type -> Type) s6989586621679210662))
data FoldingSym2 (a6989586621679214363 :: (~>) s6989586621679210662 (f6989586621679210660 a6989586621679210663)) (a6989586621679214364 :: (~>) a6989586621679210663 ((Const r6989586621679210661 :: Type -> Type) a6989586621679210663)) :: (~>) s6989586621679210662 ((Const r6989586621679210661 :: Type -> Type) s6989586621679210662)
type FoldingSym3 (a6989586621679214363 :: (~>) s6989586621679210662 (f6989586621679210660 a6989586621679210663)) (a6989586621679214364 :: (~>) a6989586621679210663 ((Const r6989586621679210661 :: Type -> Type) a6989586621679210663)) (a6989586621679214365 :: s6989586621679210662) = Folding a6989586621679214363 a6989586621679214364 a6989586621679214365
data FoldedSym0 :: forall a6989586621679210659 f6989586621679210657 r6989586621679210658. (~>) ((~>) a6989586621679210659 ((Const r6989586621679210658 :: Type -> Type) a6989586621679210659)) ((~>) (f6989586621679210657 a6989586621679210659) ((Const r6989586621679210658 :: Type -> Type) (f6989586621679210657 a6989586621679210659)))
data FoldedSym1 (a6989586621679214350 :: (~>) a6989586621679210659 ((Const r6989586621679210658 :: Type -> Type) a6989586621679210659)) :: forall f6989586621679210657. (~>) (f6989586621679210657 a6989586621679210659) ((Const r6989586621679210658 :: Type -> Type) (f6989586621679210657 a6989586621679210659))
type FoldedSym2 (a6989586621679214350 :: (~>) a6989586621679210659 ((Const r6989586621679210658 :: Type -> Type) a6989586621679210659)) (a6989586621679214351 :: f6989586621679210657 a6989586621679210659) = Folded a6989586621679214350 a6989586621679214351
data L1Sym0 :: forall a6989586621679210654 b6989586621679210656 c6989586621679210655 f6989586621679210653. (~>) ((~>) a6989586621679210654 (f6989586621679210653 b6989586621679210656)) ((~>) (a6989586621679210654, c6989586621679210655) (f6989586621679210653 (b6989586621679210656, c6989586621679210655)))
data L1Sym1 (a6989586621679214335 :: (~>) a6989586621679210654 (f6989586621679210653 b6989586621679210656)) :: forall c6989586621679210655. (~>) (a6989586621679210654, c6989586621679210655) (f6989586621679210653 (b6989586621679210656, c6989586621679210655))
type L1Sym2 (a6989586621679214335 :: (~>) a6989586621679210654 (f6989586621679210653 b6989586621679210656)) (a6989586621679214336 :: (a6989586621679210654, c6989586621679210655)) = L1 a6989586621679214335 a6989586621679214336
data L2Sym0 :: forall a6989586621679210650 b6989586621679210651 c6989586621679210652 f6989586621679210649. (~>) ((~>) b6989586621679210651 (f6989586621679210649 c6989586621679210652)) ((~>) (a6989586621679210650, b6989586621679210651) (f6989586621679210649 (a6989586621679210650, c6989586621679210652)))
data L2Sym1 (a6989586621679214320 :: (~>) b6989586621679210651 (f6989586621679210649 c6989586621679210652)) :: forall a6989586621679210650. (~>) (a6989586621679210650, b6989586621679210651) (f6989586621679210649 (a6989586621679210650, c6989586621679210652))
type L2Sym2 (a6989586621679214320 :: (~>) b6989586621679210651 (f6989586621679210649 c6989586621679210652)) (a6989586621679214321 :: (a6989586621679210650, b6989586621679210651)) = L2 a6989586621679214320 a6989586621679214321
type ZSym0 =  'Z
data SSym0 :: (~>) N N
type SSym1 (t6989586621679202515 :: N) =  'S t6989586621679202515
data IxListSym0 :: forall a6989586621679235039 f6989586621679235038. (~>) N ((~>) ((~>) a6989586621679235039 (f6989586621679235038 a6989586621679235039)) ((~>) [a6989586621679235039] (f6989586621679235038 [a6989586621679235039])))
data IxListSym1 (a6989586621679235090 :: N) :: forall a6989586621679235039 f6989586621679235038. (~>) ((~>) a6989586621679235039 (f6989586621679235038 a6989586621679235039)) ((~>) [a6989586621679235039] (f6989586621679235038 [a6989586621679235039]))
data IxListSym2 (a6989586621679235090 :: N) (a6989586621679235091 :: (~>) a6989586621679235039 (f6989586621679235038 a6989586621679235039)) :: (~>) [a6989586621679235039] (f6989586621679235038 [a6989586621679235039])
type IxListSym3 (a6989586621679235090 :: N) (a6989586621679235091 :: (~>) a6989586621679235039 (f6989586621679235038 a6989586621679235039)) (a6989586621679235092 :: [a6989586621679235039]) = IxList a6989586621679235090 a6989586621679235091 a6989586621679235092
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneLensSym0
instance forall (f6989586621679237283 :: * -> *) s6989586621679237286 a6989586621679237284 b6989586621679237285 t6989586621679237287 (a6989586621679237647 :: (a6989586621679237284 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679237284 b6989586621679237285 b6989586621679237285) Data.Singletons.Internal.~> (s6989586621679237286 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679237284 b6989586621679237285 t6989586621679237287)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym1 a6989586621679237647)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym1 d)
instance forall (f6989586621679237283 :: * -> *) s6989586621679237286 a6989586621679237284 b6989586621679237285 t6989586621679237287 (a6989586621679237648 :: (a6989586621679237284 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679237284 b6989586621679237285 b6989586621679237285) Data.Singletons.Internal.~> (s6989586621679237286 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679237284 b6989586621679237285 t6989586621679237287)) (a6989586621679237647 :: a6989586621679237284 Data.Singletons.Internal.~> f6989586621679237283 b6989586621679237285). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym2 a6989586621679237648 a6989586621679237647)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneTraversalSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneTraversalSym0
instance forall (f6989586621679237278 :: * -> *) s6989586621679237281 a6989586621679237279 b6989586621679237280 t6989586621679237282 (a6989586621679237630 :: (a6989586621679237279 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679237279 b6989586621679237280 b6989586621679237280) Data.Singletons.Internal.~> (s6989586621679237281 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679237279 b6989586621679237280 t6989586621679237282)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym1 a6989586621679237630)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym1 d)
instance forall (f6989586621679237278 :: * -> *) s6989586621679237281 a6989586621679237279 b6989586621679237280 t6989586621679237282 (a6989586621679237631 :: (a6989586621679237279 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679237279 b6989586621679237280 b6989586621679237280) Data.Singletons.Internal.~> (s6989586621679237281 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679237279 b6989586621679237280 t6989586621679237282)) (a6989586621679237630 :: a6989586621679237279 Data.Singletons.Internal.~> f6989586621679237278 b6989586621679237280). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym2 a6989586621679237631 a6989586621679237630)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679237656Scrutinee_6989586621679237299Sym0
instance forall k2 k3 t k4 k (l6989586621679237653 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679237656Scrutinee_6989586621679237299Sym1 l6989586621679237653)
instance forall k2 k3 t k4 k (f6989586621679237654 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)) (l6989586621679237653 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679237656Scrutinee_6989586621679237299Sym2 f6989586621679237654 l6989586621679237653)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679237657Sym0
instance forall k1 k2 k3 t k4 (l6989586621679237653 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679237657Sym1 l6989586621679237653)
instance forall k1 k2 t k3 k4 (f6989586621679237654 :: k4) (l6989586621679237653 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679237657Sym2 f6989586621679237654 l6989586621679237653)
instance forall k1 t k2 k3 k4 (x6989586621679237655 :: k4) (f6989586621679237654 :: k3) (l6989586621679237653 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679237657Sym3 x6989586621679237655 f6989586621679237654 l6989586621679237653)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679237639Sym0
instance forall k1 k2 k3 t k4 (l6989586621679237636 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679237639Sym1 l6989586621679237636)
instance forall k1 k2 t k3 k4 (f6989586621679237637 :: k4) (l6989586621679237636 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679237639Sym2 f6989586621679237637 l6989586621679237636)
instance forall k1 t k2 k3 k4 (xs6989586621679237638 :: k4) (f6989586621679237637 :: k3) (l6989586621679237636 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679237639Sym3 xs6989586621679237638 f6989586621679237637 l6989586621679237636)
instance forall (f6989586621679235038 :: * -> *) a6989586621679235039 (a6989586621679235091 :: Data.Type.Lens.N) (a6989586621679235090 :: a6989586621679235039 Data.Singletons.Internal.~> f6989586621679235038 a6989586621679235039). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym2 a6989586621679235091 a6989586621679235090)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym1 a6989586621679235090)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.IxListSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.IxListSym0
instance (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym1 d)
instance forall a (f :: * -> *) (d1 :: Data.Type.Lens.N) (d2 :: a Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679235099Sym0
instance forall k1 k2 k3 (f6989586621679235096 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679235099Sym1 f6989586621679235096)
instance forall k1 k2 k3 (x6989586621679235097 :: k3) (f6989586621679235096 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679235099Sym2 x6989586621679235097 f6989586621679235096)
instance forall k1 k2 k3 (xs6989586621679235098 :: k3) (x6989586621679235097 :: k2) (f6989586621679235096 :: [k1]). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679235099Sym3 xs6989586621679235098 x6989586621679235097 f6989586621679235096)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetSym0
instance forall a6989586621679210686 b6989586621679210687 s6989586621679210684 t6989586621679210685 (a6989586621679214513 :: (a6989586621679210686 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210687) Data.Singletons.Internal.~> (s6989586621679210684 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210685)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym1 a6989586621679214513)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym1 d)
instance forall a6989586621679210686 b6989586621679210687 s6989586621679210684 t6989586621679210685 (a6989586621679214514 :: (a6989586621679210686 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210687) Data.Singletons.Internal.~> (s6989586621679210684 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210685)) (a6989586621679214513 :: b6989586621679210687). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym2 a6989586621679214514 a6989586621679214513)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.OverSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.OverSym0
instance forall a6989586621679210690 b6989586621679210691 s6989586621679210688 t6989586621679210689 (a6989586621679214496 :: (a6989586621679210690 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210691) Data.Singletons.Internal.~> (s6989586621679210688 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210689)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym1 a6989586621679214496)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym1 d)
instance forall a6989586621679210690 b6989586621679210691 s6989586621679210688 t6989586621679210689 (a6989586621679214497 :: (a6989586621679210690 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210691) Data.Singletons.Internal.~> (s6989586621679210688 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210689)) (a6989586621679214496 :: a6989586621679210690 Data.Singletons.Internal.~> b6989586621679210691). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym2 a6989586621679214497 a6989586621679214496)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: a Data.Singletons.Internal.~> b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ViewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ViewSym0
instance forall a6989586621679210682 s6989586621679210683 (a6989586621679214483 :: (a6989586621679210682 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679210682 a6989586621679210682) Data.Singletons.Internal.~> (s6989586621679210683 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679210682 s6989586621679210683)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ViewSym1 a6989586621679214483)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const a a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const a s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ViewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetsSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetsSym0
instance forall a6989586621679210678 b6989586621679210679 s6989586621679210680 t6989586621679210681 (a6989586621679214455 :: (a6989586621679210678 Data.Singletons.Internal.~> b6989586621679210679) Data.Singletons.Internal.~> (s6989586621679210680 Data.Singletons.Internal.~> t6989586621679210681)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym1 a6989586621679214455)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym1 d)
instance forall a6989586621679210678 b6989586621679210679 s6989586621679210680 t6989586621679210681 (a6989586621679214456 :: (a6989586621679210678 Data.Singletons.Internal.~> b6989586621679210679) Data.Singletons.Internal.~> (s6989586621679210680 Data.Singletons.Internal.~> t6989586621679210681)) (a6989586621679214455 :: a6989586621679210678 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210679). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym2 a6989586621679214456 a6989586621679214455)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToSym0
instance forall r6989586621679210677 s6989586621679210675 a6989586621679210676 (a6989586621679214438 :: s6989586621679210675 Data.Singletons.Internal.~> a6989586621679210676). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym1 a6989586621679214438)
instance forall s a r (d :: s Data.Singletons.Internal.~> a). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym1 d)
instance forall r6989586621679210677 s6989586621679210675 a6989586621679210676 (a6989586621679214439 :: s6989586621679210675 Data.Singletons.Internal.~> a6989586621679210676) (a6989586621679214438 :: a6989586621679210676 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210677 a6989586621679210676). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym2 a6989586621679214439 a6989586621679214438)
instance forall s a r (d1 :: s Data.Singletons.Internal.~> a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.MkLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.MkLensSym0
instance forall b6989586621679210673 (f6989586621679210670 :: * -> *) t6989586621679210674 s6989586621679210671 a6989586621679210672 (a6989586621679214426 :: s6989586621679210671 Data.Singletons.Internal.~> a6989586621679210672). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym1 a6989586621679214426)
instance forall s a b t (f :: * -> *) (d :: s Data.Singletons.Internal.~> a). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym1 d)
instance forall (f6989586621679210670 :: * -> *) b6989586621679210673 t6989586621679210674 s6989586621679210671 a6989586621679210672 (a6989586621679214427 :: s6989586621679210671 Data.Singletons.Internal.~> a6989586621679210672) (a6989586621679214426 :: s6989586621679210671 Data.Singletons.Internal.~> (b6989586621679210673 Data.Singletons.Internal.~> t6989586621679210674)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym2 a6989586621679214427 a6989586621679214426)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym2 d1 d2)
instance forall (f6989586621679210670 :: * -> *) b6989586621679210673 t6989586621679210674 s6989586621679210671 a6989586621679210672 (a6989586621679214428 :: s6989586621679210671 Data.Singletons.Internal.~> a6989586621679210672) (a6989586621679214427 :: s6989586621679210671 Data.Singletons.Internal.~> (b6989586621679210673 Data.Singletons.Internal.~> t6989586621679210674)) (a6989586621679214426 :: a6989586621679210672 Data.Singletons.Internal.~> f6989586621679210670 b6989586621679210673). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym3 a6989586621679214428 a6989586621679214427 a6989586621679214426)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)) (d3 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2, Data.Singletons.Internal.SingI d3) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym3 d1 d2 d3)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToListOfSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToListOfSym0
instance forall a6989586621679210668 s6989586621679210669 (a6989586621679214406 :: (a6989586621679210668 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679210668] a6989586621679210668) Data.Singletons.Internal.~> (s6989586621679210669 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679210668] s6989586621679210669)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToListOfSym1 a6989586621679214406)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const [a] a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const [a] s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToListOfSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.UnsafePreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.UnsafePreviewSym0
instance forall a6989586621679210664 s6989586621679210665 (a6989586621679214393 :: (a6989586621679210664 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210664) a6989586621679210664) Data.Singletons.Internal.~> (s6989586621679210665 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210664) s6989586621679210665)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.UnsafePreviewSym1 a6989586621679214393)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.UnsafePreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214399Scrutinee_6989586621679210782Sym0
instance forall a6989586621679210666 k1 (l6989586621679214397 :: (a6989586621679210666 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210666) a6989586621679210666) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210666) k1)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214399Scrutinee_6989586621679210782Sym1 l6989586621679214397)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.PreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.PreviewSym0
instance forall a6989586621679210666 s6989586621679210667 (a6989586621679214380 :: (a6989586621679210666 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210666) a6989586621679210666) Data.Singletons.Internal.~> (s6989586621679210667 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210666) s6989586621679210667)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.PreviewSym1 a6989586621679214380)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.PreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldingSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldingSym0
instance forall r6989586621679210661 s6989586621679210662 (f6989586621679210660 :: * -> *) a6989586621679210663 (a6989586621679214363 :: s6989586621679210662 Data.Singletons.Internal.~> f6989586621679210660 a6989586621679210663). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym1 a6989586621679214363)
instance forall s (f :: * -> *) a r (d :: s Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym1 d)
instance forall r6989586621679210661 s6989586621679210662 (f6989586621679210660 :: * -> *) a6989586621679210663 (a6989586621679214364 :: s6989586621679210662 Data.Singletons.Internal.~> f6989586621679210660 a6989586621679210663) (a6989586621679214363 :: a6989586621679210663 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210661 a6989586621679210663). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym2 a6989586621679214364 a6989586621679214363)
instance forall s (f :: * -> *) a r (d1 :: s Data.Singletons.Internal.~> f a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldedSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldedSym0
instance forall (f6989586621679210657 :: * -> *) r6989586621679210658 a6989586621679210659 (a6989586621679214350 :: a6989586621679210659 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210658 a6989586621679210659). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldedSym1 a6989586621679214350)
instance forall a r (f :: * -> *) (d :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldedSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L1Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L1Sym0
instance forall c6989586621679210655 a6989586621679210654 (f6989586621679210653 :: * -> *) b6989586621679210656 (a6989586621679214335 :: a6989586621679210654 Data.Singletons.Internal.~> f6989586621679210653 b6989586621679210656). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L1Sym1 a6989586621679214335)
instance forall a (f :: * -> *) b c (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L1Sym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L2Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L2Sym0
instance forall a6989586621679210650 b6989586621679210651 (f6989586621679210649 :: * -> *) c6989586621679210652 (a6989586621679214320 :: b6989586621679210651 Data.Singletons.Internal.~> f6989586621679210649 c6989586621679210652). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L2Sym1 a6989586621679214320)
instance forall b (f :: * -> *) c a (d :: b Data.Singletons.Internal.~> f c). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L2Sym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214524Sym0
instance forall k1 k2 k3 k4 (l6989586621679214521 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214524Sym1 l6989586621679214521)
instance forall k1 k2 k3 k4 (y6989586621679214522 :: k4) (l6989586621679214521 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214524Sym2 y6989586621679214522 l6989586621679214521)
instance forall k1 k2 k3 k4 (a_69895866216792145196989586621679214523 :: k4) (y6989586621679214522 :: k3) (l6989586621679214521 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214524Sym3 a_69895866216792145196989586621679214523 y6989586621679214522 l6989586621679214521)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214505Scrutinee_6989586621679210750Sym0
instance forall a6989586621679919356 b6989586621679919354 k1 k (l6989586621679214502 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214505Scrutinee_6989586621679210750Sym1 l6989586621679214502)
instance forall a6989586621679919356 b6989586621679919354 k1 k (f6989586621679214503 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)) (l6989586621679214502 :: a6989586621679919356 Data.Singletons.Internal.~> b6989586621679919354). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214505Scrutinee_6989586621679210750Sym2 f6989586621679214503 l6989586621679214502)
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214489Scrutinee_6989586621679210755Sym0
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679214487 :: (Data.Singletons.Internal.TyFun a6989586621679095349 (Data.Functor.Const.Const a6989586621679095349 b6989586621679095350) -> *) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214489Scrutinee_6989586621679210755Sym1 l6989586621679214487)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214466Sym0
instance forall k1 k2 k3 k4 (f6989586621679214463 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214466Sym1 f6989586621679214463)
instance forall k1 k2 k3 k4 (g6989586621679214464 :: k4) (f6989586621679214463 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214466Sym2 g6989586621679214464 f6989586621679214463)
instance forall k1 k2 k3 k4 (a_69895866216792144616989586621679214465 :: k4) (g6989586621679214464 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3) (f6989586621679214463 :: k1). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214466Sym3 a_69895866216792144616989586621679214465 g6989586621679214464 f6989586621679214463)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214469Scrutinee_6989586621679210760Sym0
instance forall k1 k2 k3 k4 (f6989586621679214463 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214469Scrutinee_6989586621679210760Sym1 f6989586621679214463)
instance forall k1 k2 k3 k4 (g6989586621679214464 :: k4) (f6989586621679214463 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214469Scrutinee_6989586621679210760Sym2 g6989586621679214464 f6989586621679214463)
instance forall k1 k2 k3 k4 (x6989586621679214468 :: k4) (g6989586621679214464 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679214463 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214469Scrutinee_6989586621679210760Sym3 x6989586621679214468 g6989586621679214464 f6989586621679214463)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214447Scrutinee_6989586621679210763Sym0
instance forall k k2 k3 (f6989586621679214444 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214447Scrutinee_6989586621679210763Sym1 f6989586621679214444)
instance forall k k2 k3 (g6989586621679214445 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679214444 :: k3 Data.Singletons.Internal.~> k). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214447Scrutinee_6989586621679210763Sym2 g6989586621679214445 f6989586621679214444)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214412Scrutinee_6989586621679210768Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679214410 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679919356] b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214412Scrutinee_6989586621679210768Sym1 l6989586621679214410)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214413Sym0
instance forall k1 k2 k3 (l6989586621679214410 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214413Sym1 l6989586621679214410)
instance forall k1 k2 k3 (x6989586621679214411 :: k3) (l6989586621679214410 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214413Sym2 x6989586621679214411 l6989586621679214410)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214386Scrutinee_6989586621679210775Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679214384 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679919356) b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214386Scrutinee_6989586621679210775Sym1 l6989586621679214384)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214372Scrutinee_6989586621679210788Sym0
instance forall b6989586621680695205 (f6989586621680695203 :: * -> *) k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621679214369 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214372Scrutinee_6989586621679210788Sym1 f6989586621679214369)
instance forall (f6989586621680695203 :: * -> *) b6989586621680695205 k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (g6989586621679214370 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204) (f6989586621679214369 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214372Scrutinee_6989586621679210788Sym2 g6989586621679214370 f6989586621679214369)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214356Scrutinee_6989586621679210793Sym0
instance forall (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621680695203 :: * -> *) b6989586621680695205 (f6989586621679214354 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214356Scrutinee_6989586621679210793Sym1 f6989586621679214354)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214342Sym0
instance forall k2 k3 k4 k5 (f6989586621679214339 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214342Sym1 f6989586621679214339)
instance forall k2 k3 k4 k5 (x6989586621679214340 :: k5) (f6989586621679214339 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214342Sym2 x6989586621679214340 f6989586621679214339)
instance forall k2 k3 k4 k5 (y6989586621679214341 :: k5) (x6989586621679214340 :: k4) (f6989586621679214339 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214342Sym3 y6989586621679214341 x6989586621679214340 f6989586621679214339)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214327Sym0
instance forall k2 k3 k4 k5 (f6989586621679214324 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214327Sym1 f6989586621679214324)
instance forall k2 k3 k4 k5 (x6989586621679214325 :: k5) (f6989586621679214324 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214327Sym2 x6989586621679214325 f6989586621679214324)
instance forall k2 k3 k4 k5 (y6989586621679214326 :: k5) (x6989586621679214325 :: k4) (f6989586621679214324 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214327Sym3 y6989586621679214326 x6989586621679214325 f6989586621679214324)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ShowsPrec_6989586621679208339Sym0
instance Data.Singletons.Prelude.Show.PShow Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ShowsPrec_6989586621679208339Sym1 a6989586621679208336)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ShowsPrec_6989586621679208339Sym2 a6989586621679208337 a6989586621679208336)
instance Data.Singletons.Prelude.Show.SShow Data.Type.Lens.N => Data.Singletons.Prelude.Show.SShow Data.Type.Lens.N
instance Data.Singletons.Decide.SDecide Data.Type.Lens.N => Data.Singletons.Decide.SDecide Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Compare_6989586621679206559Sym0
instance Data.Singletons.Prelude.Ord.POrd Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Compare_6989586621679206559Sym1 a6989586621679206557)
instance Data.Singletons.Prelude.Ord.SOrd Data.Type.Lens.N => Data.Singletons.Prelude.Ord.SOrd Data.Type.Lens.N
instance Data.Singletons.Prelude.Eq.PEq Data.Type.Lens.N
instance Data.Singletons.Prelude.Eq.SEq Data.Type.Lens.N => Data.Singletons.Prelude.Eq.SEq Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.GettingSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym1 r6989586621679201101)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym2 s6989586621679201102 r6989586621679201101)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ASetterSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym1 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym2 t6989586621679201105 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym3 a6989586621679201106 t6989586621679201105 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLike'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym1 f6989586621679201108)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym2 s6989586621679201109 f6989586621679201108)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLikeSym0
instance forall k6989586621679201126 (f6989586621679201111 :: k6989586621679201126 -> *). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym1 f6989586621679201111)
instance forall k6989586621679201126 (s6989586621679201112 :: k6989586621679201126 -> *) f6989586621679201111. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym2 s6989586621679201112 f6989586621679201111)
instance forall k6989586621679201126 (t6989586621679201113 :: k6989586621679201126 -> *) s6989586621679201112 (f6989586621679201111 :: k6989586621679201126). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym3 t6989586621679201113 s6989586621679201112 f6989586621679201111)
instance forall k6989586621679201126 (a6989586621679201114 :: k6989586621679201126 -> *) t6989586621679201113 (s6989586621679201112 :: k6989586621679201126) f6989586621679201111. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym4 a6989586621679201114 t6989586621679201113 s6989586621679201112 f6989586621679201111)
instance Data.Singletons.Internal.SingKind Data.Type.Lens.N
instance Data.Singletons.Internal.SingI 'Data.Type.Lens.Z
instance Data.Singletons.Internal.SingI n => Data.Singletons.Internal.SingI ('Data.Type.Lens.S n)
instance Data.Singletons.Internal.SingI (Data.Singletons.Internal.TyCon1 'Data.Type.Lens.S)
instance GHC.Generics.Generic Data.Type.Lens.N
instance GHC.Read.Read Data.Type.Lens.N
instance GHC.Classes.Ord Data.Type.Lens.N
instance GHC.Classes.Eq Data.Type.Lens.N
instance GHC.Show.Show Data.Type.Lens.N


-- | See source for examples of using type-level lenses from
--   <a>Data.Type.Lens</a>.
module Data.Type.Lens.Example

-- | <pre>
--   &gt;&gt;&gt; :kind! SetExample
--   '( 'True, 6 )
--   </pre>
type SetExample = Set L1_  'True '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ViewExample
--   6
--   </pre>
type ViewExample = View L2_ '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ToExample
--   6
--   </pre>
type ToExample = View (To_ SndSym0) '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '( "hello", 'False )
--   </pre>
type OverExample = Over L2_ NotSym0 '("hello",  'True)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '[ 'False, 'True, 'True ]
--   </pre>
type TraversalExample = Over Traverse_ NotSym0 '[ 'True,  'False,  'False]

-- | <pre>
--   &gt;&gt;&gt; :kind! NestedExample
--   6
--   </pre>
type NestedExample = View (L2_ .@ L1_) '("hello", '(6,  'False))

-- | <pre>
--   &gt;&gt;&gt; :kind! FoldExample
--   '["hello", "world", "curry"]
--   </pre>
type FoldExample = ToListOf (Traverse_ .@ L1_) '['("hello",  'True), '("world",  'False), '("curry",  'False)]

-- | <pre>
--   &gt;&gt;&gt; :kind! UnsafeExample
--   Error "Failed indexing into empty traversal"
--   </pre>
type UnsafeExample = UnsafePreview Traverse_ '[]

-- | <pre>
--   &gt;&gt;&gt; :kind! IxExample
--   '["hello", "haskell", "curry"]
--   </pre>
type IxExample = Set (IxList_ ( 'S  'Z)) "haskell" '["hello", "world", "curry"]

-- | <pre>
--   &gt;&gt;&gt; :kind! CloneExample
--   "hello"
--   </pre>
type CloneExample = View (CloneLens_ L1_) '("hello", 6)
type SetExample' = '("hello", 6) & L1_ .~  'True
type ViewExample' = '("hello", 6) ^. L2_
type ToExample' = '("hello", 6) ^. To_ SndSym0
type OverExample' = '("hello",  'True) & L2_ %~ NotSym0
type TraversalExample' = '[ 'True,  'False,  'False] & Traverse_ %~ NotSym0
type NestedExample' = '("hello", '(6,  'False)) ^. L2_ .@ L1_
type FoldExample' = '['("hello",  'True), '("world",  'False), '("curry",  'False)] ^.. Traverse_ .@ L1_
type IxExample' = '["hello", "world", "curry"] & IxList_ ( 'S  'Z) .~ "haskell"
type UnsafeExample' = '[] ^?! Traverse_
type CloneExample' = '("hello", 6) ^. CloneLens_ L1_
