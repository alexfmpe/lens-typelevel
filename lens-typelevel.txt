-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Type-level lenses using singletons
--   
--   Have you ever wanted lenses, but at the TYPE LEVEL????
@package lens-typelevel
@version 0.1.0.0

module Data.Type.Lens.Internal

-- | A partially applied lens
data Context a b t
MkContext :: (b ~> t) -> a -> Context a b t

-- | A partially applied traversal
data Bazaar a b t
Done :: t -> Bazaar a b t
More :: a -> Bazaar a b (b ~> t) -> Bazaar a b t
type family UnBazaar (a_aEDS :: (~>) a_aEph (f_aEpg b_aEpi)) (a_aEDT :: Bazaar a_aEph b_aEpi t_aEpj) :: f_aEpg t_aEpj
sUnBazaar :: forall f_aEpg a_aEph b_aEpi t_aEpj (t_aEEG :: (~>) a_aEph (f_aEpg b_aEpi)) (t_aEEH :: Bazaar a_aEph b_aEpi t_aEpj). SApplicative f_aEpg => Sing t_aEEG -> Sing t_aEEH -> Sing (Apply (Apply UnBazaarSym0 t_aEEG) t_aEEH :: f_aEpg t_aEpj)

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
type MkContextSym0 = TyCon2  'MkContext
type MkContextSym1 f = TyCon1 ( 'MkContext f)
type MkContextSym2 f x =  'MkContext f x
type DoneSym0 = TyCon1  'Done
type DoneSym1 x =  'Done x
type MoreSym0 = TyCon2  'More
type MoreSym1 x = TyCon1 ( 'More x)
type MoreSym2 x b =  'More x b
data UnBazaarSym0 :: forall a6989586621679165119 b6989586621679165120 f6989586621679165118 t6989586621679165121. (~>) ((~>) a6989586621679165119 (f6989586621679165118 b6989586621679165120)) ((~>) (Bazaar a6989586621679165119 b6989586621679165120 t6989586621679165121) (f6989586621679165118 t6989586621679165121))
data UnBazaarSym1 (a6989586621679166024 :: (~>) a6989586621679165119 (f6989586621679165118 b6989586621679165120)) :: forall t6989586621679165121. (~>) (Bazaar a6989586621679165119 b6989586621679165120 t6989586621679165121) (f6989586621679165118 t6989586621679165121)
type UnBazaarSym2 (a6989586621679166024 :: (~>) a6989586621679165119 (f6989586621679165118 b6989586621679165120)) (a6989586621679166025 :: Bazaar a6989586621679165119 b6989586621679165120 t6989586621679165121) = UnBazaar a6989586621679166024 a6989586621679166025
instance forall a6989586621679165125 b6989586621679165126 t6989586621679165122 r6989586621679165123 s6989586621679165124 (a6989586621679166047 :: t6989586621679165122 Data.Singletons.Internal.~> (r6989586621679165123 Data.Singletons.Internal.~> s6989586621679165124)) (a6989586621679166046 :: Data.Type.Lens.Internal.Bazaar a6989586621679165125 b6989586621679165126 t6989586621679165122). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym2 a6989586621679166047 a6989586621679166046)
instance forall a6989586621679165125 b6989586621679165126 t6989586621679165122 r6989586621679165123 s6989586621679165124 (a6989586621679166046 :: t6989586621679165122 Data.Singletons.Internal.~> (r6989586621679165123 Data.Singletons.Internal.~> s6989586621679165124)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym1 a6989586621679166046)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.LiftA2BazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.LiftA2BazaarSym0
instance forall t r s a b (d :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym1 d)
instance forall t r s a b (d1 :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)) (d2 :: Data.Type.Lens.Internal.Bazaar a b t). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym2 d1 d2)
instance Data.Singletons.Prelude.Monad.Internal.PApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance forall a6989586621679165132 b6989586621679165133 t6989586621679165130 q6989586621679165131 (a6989586621679166037 :: t6989586621679165130 Data.Singletons.Internal.~> q6989586621679165131). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapBazaarSym1 a6989586621679166037)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapBazaarSym0
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapBazaarSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.PureBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.PureBazaarSym0
instance forall t6989586621679165121 a6989586621679165119 (f6989586621679165118 :: * -> *) b6989586621679165120 (a6989586621679166024 :: a6989586621679165119 Data.Singletons.Internal.~> f6989586621679165118 b6989586621679165120). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.UnBazaarSym1 a6989586621679166024)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.UnBazaarSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.Internal.UnBazaarSym0
instance forall a (f :: * -> *) b t (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.UnBazaarSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.Lambda_6989586621679166059Sym0
instance forall k2 k3 k4 k5 k6 k7 k8 (f6989586621679166055 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166059Sym1 f6989586621679166055)
instance forall k2 k3 k4 k5 k6 k7 k8 (x6989586621679166056 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (f6989586621679166055 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166059Sym2 x6989586621679166056 f6989586621679166055)
instance forall k2 k3 k4 k5 k6 k7 k8 (b6989586621679166057 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (x6989586621679166056 :: k5) (f6989586621679166055 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166059Sym3 b6989586621679166057 x6989586621679166056 f6989586621679166055)
instance forall k2 k3 k4 k5 k6 k7 k8 (c6989586621679166058 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (b6989586621679166057 :: k5) (x6989586621679166056 :: k4) (f6989586621679166055 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166059Sym4 c6989586621679166058 b6989586621679166057 x6989586621679166056 f6989586621679166055)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166064 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (c6989586621679166058 :: k5) (b6989586621679166057 :: k4) (x6989586621679166056 :: k3) (f6989586621679166055 :: k2 Data.Singletons.Internal.~> k6). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166059Sym5 t6989586621679166064 c6989586621679166058 b6989586621679166057 x6989586621679166056 f6989586621679166055)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166065 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (t6989586621679166064 :: k5) (c6989586621679166058 :: k4) (b6989586621679166057 :: k3) (x6989586621679166056 :: k2 Data.Singletons.Internal.~> k6) (f6989586621679166055 :: k7). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166059Sym6 t6989586621679166065 t6989586621679166064 c6989586621679166058 b6989586621679166057 x6989586621679166056 f6989586621679166055)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.Prelude.Monad.Internal.SApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapContextSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapContextSym0
instance forall a6989586621679159061 b6989586621679159062 t6989586621679159059 q6989586621679159060 (a6989586621679159106 :: t6989586621679159059 Data.Singletons.Internal.~> q6989586621679159060). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapContextSym1 a6989586621679159106)
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapContextSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Context a b)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Context a b)


-- | Lenses and optics for manipulating DataKind-based types, powered by
--   <i>singletons</i> defunctionalization.
--   
--   See <a>Data.Type.Lens.Examples</a> for example usage and syntax.
--   
--   For the most part, you should be able to use them just like you'd use
--   the functions from the <i>lens</i> or <i>microlens</i> libraries; just
--   remember to capitalize names like <a>Over</a> and <a>Set</a>, since
--   they are type families.
--   
--   Note that the ways of "creating" a lens or optic (<a>Sets_</a>,
--   <a>Traverse_</a>, <a>To_</a>, <a>MkLens_</a>, etc. are all suffixed
--   with <tt>_</tt> for convenience, to reserve the underscoreless
--   identifiers for the fully applied type family as per <i>singletons</i>
--   library convention.
module Data.Type.Lens

-- | The general shape of optics in this library. ("van Laarhoven")
--   
--   For different levels of polymorphism on <tt>f</tt>, you get different
--   types of optics:
--   
--   <ul>
--   <li>If <tt>f</tt> can be any <a>Functor</a>, you have a Lens (see
--   <a>ALens</a>)</li>
--   <li>If <tt>f</tt> is only <a>Identity</a>, you have a setter (see
--   <a>ASetter</a>)</li>
--   <li>If <tt>f</tt> is only <tt><a>Const</a> R</tt> for a specific
--   <tt>R</tt>, you have a getter of <tt>R</tt> (see <a>Getting</a>)</li>
--   <li>If <tt>f</tt> can be <tt><a>Const</a> r</tt> for any <a>Monoid</a>
--   <tt>r</tt>, you have a Fold.</li>
--   <li>If <tt>f</tt> can be any <a>Applicative</a>, you have a Traversal
--   (see <a>ATraversal</a>)</li>
--   </ul>
--   
--   Normal lens libraries implement the constraints for lenses, folds, and
--   traversals using RankN types, but we don't do that here to avoid
--   working with RankN kinds.
type LensLike f s t a b = (a -> f b) -> (s -> f t)

-- | A <a>LensLike</a> that does not change any types.
type LensLike' f s a = LensLike f s s a a

-- | A settable "lens". Usable with <a>Over</a> (<a>%~</a>), constructable
--   with <a>To</a> or any of the general lens constructors.
--   
--   See <a>LensLike</a> for more information.
type ASetter s t a b = LensLike Identity s t a b
type family Over (a_aPyk :: (~>) ((~>) a_aOr6 (Identity b_aOr7)) ((~>) s_aOr4 (Identity t_aOr5))) (a_aPyl :: (~>) a_aOr6 b_aOr7) (a_aPym :: s_aOr4) :: t_aOr5

-- | Infix application of <a>Over</a>
type l %~ f = OverSym2 l f
infixr 4 %~
sOver :: forall s_aOr4 t_aOr5 a_aOr6 b_aOr7 (t_aPA7 :: (~>) ((~>) a_aOr6 (Identity b_aOr7)) ((~>) s_aOr4 (Identity t_aOr5))) (t_aPA8 :: (~>) a_aOr6 b_aOr7) (t_aPA9 :: s_aOr4). Sing t_aPA7 -> Sing t_aPA8 -> Sing t_aPA9 -> Sing (Apply (Apply (Apply OverSym0 t_aPA7) t_aPA8) t_aPA9 :: t_aOr5)
type family Set (a_aPyB :: (~>) ((~>) a_aOr2 (Identity b_aOr3)) ((~>) s_aOr0 (Identity t_aOr1))) (a_aPyC :: b_aOr3) (a_aPyD :: s_aOr0) :: t_aOr1

-- | Infix application of <a>Set</a>
type l .~ x = SetSym2 l x
infixr 4 .~
sSet :: forall s_aOr0 t_aOr1 a_aOr2 b_aOr3 (t_aPAd :: (~>) ((~>) a_aOr2 (Identity b_aOr3)) ((~>) s_aOr0 (Identity t_aOr1))) (t_aPAe :: b_aOr3) (t_aPAf :: s_aOr0). Sing t_aPAd -> Sing t_aPAe -> Sing t_aPAf -> Sing (Apply (Apply (Apply SetSym0 t_aPAd) t_aPAe) t_aPAf :: t_aOr1)

-- | Create a Setter from a setting function.
--   
--   <pre>
--   <a>Sets_</a> :: ((a ~&gt; b) ~&gt; (s ~&gt; t)) -&gt; <a>ASetter</a> s t a b
--   </pre>
type Sets_ f = SetsSym1 f
type family Sets (a_aPxF :: (~>) ((~>) a_aOqU b_aOqV) ((~>) s_aOqW t_aOqX)) (a_aPxG :: (~>) a_aOqU (Identity b_aOqV)) (a_aPxH :: s_aOqW) :: Identity t_aOqX
sSets :: forall a_aOqU b_aOqV s_aOqW t_aOqX (t_aPzX :: (~>) ((~>) a_aOqU b_aOqV) ((~>) s_aOqW t_aOqX)) (t_aPzY :: (~>) a_aOqU (Identity b_aOqV)) (t_aPzZ :: s_aOqW). Sing t_aPzX -> Sing t_aPzY -> Sing t_aPzZ -> Sing (Apply (Apply (Apply SetsSym0 t_aPzX) t_aPzY) t_aPzZ :: Identity t_aOqX)

-- | A retrieving "lens". If <tt>r</tt> is fixed to a type, it's a Getter
--   for that type. If <tt>r</tt> is polymorphic over all <a>Monoid</a>,
--   then it's a Fold over <tt>a</tt>s.
--   
--   As a Getter, usable with <a>View</a> (<a>^.</a>); as a Fold, usable
--   with <a>ToListOf</a> (<a>^..</a>), <a>Preview</a> (<a>^?</a>), etc.
--   
--   Normal lens libraries implement the constraints for folds using RankN
--   types, but we don't do that here to avoid working with RankN kinds.
--   
--   See <a>LensLike</a> for more information.
type Getting r s a = LensLike (Const r) s s a a
type family View (a_aPy7 :: (~>) ((~>) a_aOqY ((Const a_aOqY :: Type -> Type) a_aOqY)) ((~>) s_aOqZ ((Const a_aOqY :: Type -> Type) s_aOqZ))) (a_aPy8 :: s_aOqZ) :: a_aOqY

-- | Infix application of <a>View</a>
type x ^. l = View l x
infixl 8 ^.
sView :: forall a_aOqY s_aOqZ (t_aPA3 :: (~>) ((~>) a_aOqY ((Const a_aOqY :: Type -> Type) a_aOqY)) ((~>) s_aOqZ ((Const a_aOqY :: Type -> Type) s_aOqZ))) (t_aPA4 :: s_aOqZ). Sing t_aPA3 -> Sing t_aPA4 -> Sing (Apply (Apply ViewSym0 t_aPA3) t_aPA4 :: a_aOqY)

-- | Create a Getter from a getting function.
--   
--   <pre>
--   <a>To_</a> :: (a ~&gt; b) -&gt; <a>Getting</a> b a b
--   </pre>
type To_ f = ToSym1 f
type family To (a_aPxo :: (~>) s_aOqR a_aOqS) (a_aPxp :: (~>) a_aOqS ((Const r_aOqT :: Type -> Type) a_aOqS)) (a_aPxq :: s_aOqR) :: (Const r_aOqT :: Type -> Type) s_aOqR
sTo :: forall s_aOqR a_aOqS r_aOqT (t_aPzR :: (~>) s_aOqR a_aOqS) (t_aPzS :: (~>) a_aOqS ((Const r_aOqT :: Type -> Type) a_aOqS)) (t_aPzT :: s_aOqR). Sing t_aPzR -> Sing t_aPzS -> Sing t_aPzT -> Sing (Apply (Apply (Apply ToSym0 t_aPzR) t_aPzS) t_aPzT :: (Const r_aOqT :: Type -> Type) s_aOqR)

-- | If a function expects an <a>ALens</a>, it can be given any Lens (a
--   <tt><a>LensLike</a> f</tt> that works for any <a>Functor</a> f).
--   
--   You can use an <a>ALens</a> as a normal lens by using
--   <a>CloneLens_</a>.
type ALens s t a b = LensLike (Context a b) s t a b

-- | Create a Lens from a setter and a getter.
--   
--   <pre>
--   <a>MkLens_</a>
--       :: <a>Functor</a> f
--       =&gt; (s ~&gt; a)
--       -&gt; (s ~&gt; b ~&gt; t)
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
type MkLens_ f g = MkLensSym2 f g
type family MkLens (a_aPxc :: (~>) s_aOqN a_aOqO) (a_aPxd :: (~>) s_aOqN ((~>) b_aOqP t_aOqQ)) (a_aPxe :: (~>) a_aOqO (f_aOqM b_aOqP)) (a_aPxf :: s_aOqN) :: f_aOqM t_aOqQ
sMkLens :: forall f_aOqM s_aOqN a_aOqO b_aOqP t_aOqQ (t_aPzJ :: (~>) s_aOqN a_aOqO) (t_aPzK :: (~>) s_aOqN ((~>) b_aOqP t_aOqQ)) (t_aPzL :: (~>) a_aOqO (f_aOqM b_aOqP)) (t_aPzM :: s_aOqN). SFunctor f_aOqM => Sing t_aPzJ -> Sing t_aPzK -> Sing t_aPzL -> Sing t_aPzM -> Sing (Apply (Apply (Apply (Apply MkLensSym0 t_aPzJ) t_aPzK) t_aPzL) t_aPzM :: f_aOqM t_aOqQ)

-- | <a>Clone</a> a polymorphic lens so it can be used as more than one
--   type of thing (getter or setter).
--   
--   <pre>
--   <a>CloneLens_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Context a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a lens and uses it in more
--   than one way; if you have it take an <a>ALens</a>, you can then use
--   <a>CloneLens_</a> to use it as a getter or setter.
type CloneLens_ l = CloneLensSym1 l
type family CloneLens (a_aPwM :: (~>) ((~>) a_aOqI (Context a_aOqI b_aOqJ b_aOqJ)) ((~>) s_aOqK (Context a_aOqI b_aOqJ t_aOqL))) (a_aPwN :: (~>) a_aOqI (f_aOqH b_aOqJ)) (a_aPwO :: s_aOqK) :: f_aOqH t_aOqL
sCloneLens :: forall f_aOqH a_aOqI b_aOqJ s_aOqK t_aOqL (t_aPzD :: (~>) ((~>) a_aOqI (Context a_aOqI b_aOqJ b_aOqJ)) ((~>) s_aOqK (Context a_aOqI b_aOqJ t_aOqL))) (t_aPzE :: (~>) a_aOqI (f_aOqH b_aOqJ)) (t_aPzF :: s_aOqK). SFunctor f_aOqH => Sing t_aPzD -> Sing t_aPzE -> Sing t_aPzF -> Sing (Apply (Apply (Apply CloneLensSym0 t_aPzD) t_aPzE) t_aPzF :: f_aOqH t_aOqL)

-- | If a function expects an <a>ATraversal</a>, it can be given any
--   Traversal (a <tt><a>LensLike</a> f</tt> that works for any
--   <a>Applicative</a> f).
--   
--   You can use an <a>ATraversal</a> as a normal traversal by using
--   <a>CloneTraversal_</a>.
type ATraversal s t a b = LensLike (Bazaar a b) s t a b
type family Preview (a_aPw2 :: (~>) ((~>) a_aOqD ((Const (First a_aOqD) :: Type -> Type) a_aOqD)) ((~>) s_aOqE ((Const (First a_aOqD) :: Type -> Type) s_aOqE))) (a_aPw3 :: s_aOqE) :: Maybe a_aOqD

-- | Infix application of <a>Preview</a>
type x ^? l = Preview l x
infixl 8 ^?
sPreview :: forall a_aOqD s_aOqE (t_aPzr :: (~>) ((~>) a_aOqD ((Const (First a_aOqD) :: Type -> Type) a_aOqD)) ((~>) s_aOqE ((Const (First a_aOqD) :: Type -> Type) s_aOqE))) (t_aPzs :: s_aOqE). Sing t_aPzr -> Sing t_aPzs -> Sing (Apply (Apply PreviewSym0 t_aPzr) t_aPzs :: Maybe a_aOqD)
type family ToListOf (a_aPws :: (~>) ((~>) a_aOqF ((Const [a_aOqF] :: Type -> Type) a_aOqF)) ((~>) s_aOqG ((Const [a_aOqF] :: Type -> Type) s_aOqG))) (a_aPwt :: s_aOqG) :: [a_aOqF]

-- | Infix application of <a>ToListOf</a>
type x ^.. l = ToListOf l x
infixl 8 ^..
sToListOf :: forall a_aOqF s_aOqG (t_aPzz :: (~>) ((~>) a_aOqF ((Const [a_aOqF] :: Type -> Type) a_aOqF)) ((~>) s_aOqG ((Const [a_aOqF] :: Type -> Type) s_aOqG))) (t_aPzA :: s_aOqG). Sing t_aPzz -> Sing t_aPzA -> Sing (Apply (Apply ToListOfSym0 t_aPzz) t_aPzA :: [a_aOqF])
type family UnsafePreview (a_aPwf :: (~>) ((~>) a_aOqB ((Const (First a_aOqB) :: Type -> Type) a_aOqB)) ((~>) s_aOqC ((Const (First a_aOqB) :: Type -> Type) s_aOqC))) (a_aPwg :: s_aOqC) :: a_aOqB

-- | Infix application of <a>UnsafePreview</a>
type x ^?! l = UnsafePreview l x
infixl 8 ^?!
sUnsafePreview :: forall a_aOqB s_aOqC (t_aPzv :: (~>) ((~>) a_aOqB ((Const (First a_aOqB) :: Type -> Type) a_aOqB)) ((~>) s_aOqC ((Const (First a_aOqB) :: Type -> Type) s_aOqC))) (t_aPzw :: s_aOqC). Sing t_aPzv -> Sing t_aPzw -> Sing (Apply (Apply UnsafePreviewSym0 t_aPzv) t_aPzw :: a_aOqB)

-- | Create a Fold from a "folding function":
--   
--   <pre>
--   <a>Folding_</a>
--       :: (<a>Foldable</a> f, <a>Monoid</a> r)
--       =&gt; (s ~&gt; f a)
--       -&gt; <a>Getting</a> r s a
--   </pre>
type Folding_ f = FoldingSym1 f
type family Folding (a_aPvL :: (~>) s_aOqz (f_aOqx a_aOqA)) (a_aPvM :: (~>) a_aOqA ((Const r_aOqy :: Type -> Type) a_aOqA)) (a_aPvN :: s_aOqz) :: (Const r_aOqy :: Type -> Type) s_aOqz
sFolding :: forall f_aOqx r_aOqy s_aOqz a_aOqA (t_aPzl :: (~>) s_aOqz (f_aOqx a_aOqA)) (t_aPzm :: (~>) a_aOqA ((Const r_aOqy :: Type -> Type) a_aOqA)) (t_aPzn :: s_aOqz). (SFoldable f_aOqx, SMonoid r_aOqy) => Sing t_aPzl -> Sing t_aPzm -> Sing t_aPzn -> Sing (Apply (Apply (Apply FoldingSym0 t_aPzl) t_aPzm) t_aPzn :: (Const r_aOqy :: Type -> Type) s_aOqz)

-- | The canonical Fold for any instance of <a>Foldable</a>.
--   
--   <pre>
--   <a>Folded_</a>
--       :: <a>Monoid</a> r
--       =&gt; <a>Getting</a> r (t a) a
--   </pre>
type Folded_ = FoldedSym0
type family Folded (a_aPvy :: (~>) a_aOqw ((Const r_aOqv :: Type -> Type) a_aOqw)) (a_aPvz :: f_aOqu a_aOqw) :: (Const r_aOqv :: Type -> Type) (f_aOqu a_aOqw)
sFolded :: forall f_aOqu r_aOqv a_aOqw (t_aPzh :: (~>) a_aOqw ((Const r_aOqv :: Type -> Type) a_aOqw)) (t_aPzi :: f_aOqu a_aOqw). (SFoldable f_aOqu, SMonoid r_aOqv) => Sing t_aPzh -> Sing t_aPzi -> Sing (Apply (Apply FoldedSym0 t_aPzh) t_aPzi :: (Const r_aOqv :: Type -> Type) (f_aOqu a_aOqw))

-- | The canonical Traversal for any instance of <a>Traversable</a>.
--   
--   <pre>
--   <a>Traverse_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>LensLike</a> f (t a) (t b) a b
--   </pre>
type Traverse_ = TraverseSym0
type family Traverse (arg :: a ~> f b) (arg1 :: t a) :: f t b
sTraverse :: (STraversable t, SApplicative f) => Sing t1 -> Sing t2 -> Sing (Apply (Apply (TraverseSym0 :: TyFun (a ~> f b) (t a ~> f (t b)) -> Type) t1) t2)

-- | <a>Clone</a> a polymorphic traversal so it can be used as more than
--   one type of thing (fold, traversal, getter, setter...).
--   
--   <pre>
--   <a>CloneTraversal_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Bazaar a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a traversal and uses it in
--   more than one way; if you have it take an <a>ATraversal</a>, you can
--   then use <a>CloneTraversal_</a> to use it as a fold or traversal or
--   anything else.
type CloneTraversal_ l = CloneTraversalSym1 l
type family CloneTraversal (a_aPvh :: (~>) ((~>) a_aOqq (Bazaar a_aOqq b_aOqr b_aOqr)) ((~>) s_aOqs (Bazaar a_aOqq b_aOqr t_aOqt))) (a_aPvi :: (~>) a_aOqq (f_aOqp b_aOqr)) (a_aPvj :: s_aOqs) :: f_aOqp t_aOqt
sCloneTraversal :: forall f_aOqp a_aOqq b_aOqr s_aOqs t_aOqt (t_aPzb :: (~>) ((~>) a_aOqq (Bazaar a_aOqq b_aOqr b_aOqr)) ((~>) s_aOqs (Bazaar a_aOqq b_aOqr t_aOqt))) (t_aPzc :: (~>) a_aOqq (f_aOqp b_aOqr)) (t_aPzd :: s_aOqs). SApplicative f_aOqp => Sing t_aPzb -> Sing t_aPzc -> Sing t_aPzd -> Sing (Apply (Apply (Apply CloneTraversalSym0 t_aPzb) t_aPzc) t_aPzd :: f_aOqp t_aOqt)

-- | Lens into the first field of a tuple
type L1_ = L1Sym0
type family L1 (a_aPv2 :: (~>) a_aOqm (f_aOql b_aOqo)) (a_aPv3 :: (a_aOqm, c_aOqn)) :: f_aOql (b_aOqo, c_aOqn)
sL1 :: forall f_aOql a_aOqm c_aOqn b_aOqo (t_aPz7 :: (~>) a_aOqm (f_aOql b_aOqo)) (t_aPz8 :: (a_aOqm, c_aOqn)). SFunctor f_aOql => Sing t_aPz7 -> Sing t_aPz8 -> Sing (Apply (Apply L1Sym0 t_aPz7) t_aPz8 :: f_aOql (b_aOqo, c_aOqn))

-- | Lens into the second field of a tuple
type L2_ = L2Sym0
type family L2 (a_aPuN :: (~>) b_aOqj (f_aOqh c_aOqk)) (a_aPuO :: (a_aOqi, b_aOqj)) :: f_aOqh (a_aOqi, c_aOqk)
sL2 :: forall f_aOqh a_aOqi b_aOqj c_aOqk (t_aPz3 :: (~>) b_aOqj (f_aOqh c_aOqk)) (t_aPz4 :: (a_aOqi, b_aOqj)). SFunctor f_aOqh => Sing t_aPz3 -> Sing t_aPz4 -> Sing (Apply (Apply L2Sym0 t_aPz3) t_aPz4 :: f_aOqh (a_aOqi, c_aOqk))

-- | Peano nats, used for implementation of list index traversals in a
--   termination-sane way.
data N
Z :: N
S :: N -> N
type SN = (Sing :: N -> Type)

-- | <tt><a>IxList</a> i</tt> is a Traversal into the i-th item into a
--   list. Defined in terms of <a>N</a> to allow for sane termination
--   guaruntees.
--   
--   <pre>
--   <a>IxList_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>N</a>
--       -&gt; <a>LensLike'</a> f [a] a
--   </pre>
type IxList_ i = IxListSym1 i
type family IxList (a_aPus :: N) (a_aPut :: (~>) a_aOqg (f_aOqf a_aOqg)) (a_aPuu :: [a_aOqg]) :: f_aOqf [a_aOqg]
sIxList :: forall f_aOqf a_aOqg (t_aPyX :: N) (t_aPyY :: (~>) a_aOqg (f_aOqf a_aOqg)) (t_aPyZ :: [a_aOqg]). SApplicative f_aOqf => Sing t_aPyX -> Sing t_aPyY -> Sing t_aPyZ -> Sing (Apply (Apply (Apply IxListSym0 t_aPyX) t_aPyY) t_aPyZ :: f_aOqf [a_aOqg])

-- | Shorter name for type-level function composition
type f .@ g = f .@#@$$$ g
infixr 9 .@

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
data ASetterSym0 s6989586621679199035
data ASetterSym1 (s6989586621679199035 :: Type) t6989586621679199036
data ASetterSym2 (s6989586621679199035 :: Type) (t6989586621679199036 :: Type) a6989586621679199037
data ASetterSym3 (s6989586621679199035 :: Type) (t6989586621679199036 :: Type) (a6989586621679199037 :: Type) b6989586621679199038
type ASetterSym4 (s6989586621679199035 :: Type) (t6989586621679199036 :: Type) (a6989586621679199037 :: Type) (b6989586621679199038 :: Type) = ASetter s6989586621679199035 t6989586621679199036 a6989586621679199037 b6989586621679199038
data OverSym0 :: forall a6989586621679203672 b6989586621679203673 s6989586621679203670 t6989586621679203671. (~>) ((~>) ((~>) a6989586621679203672 (Identity b6989586621679203673)) ((~>) s6989586621679203670 (Identity t6989586621679203671))) ((~>) ((~>) a6989586621679203672 b6989586621679203673) ((~>) s6989586621679203670 t6989586621679203671))
data OverSym1 (a6989586621679207964 :: (~>) ((~>) a6989586621679203672 (Identity b6989586621679203673)) ((~>) s6989586621679203670 (Identity t6989586621679203671))) :: (~>) ((~>) a6989586621679203672 b6989586621679203673) ((~>) s6989586621679203670 t6989586621679203671)
data OverSym2 (a6989586621679207964 :: (~>) ((~>) a6989586621679203672 (Identity b6989586621679203673)) ((~>) s6989586621679203670 (Identity t6989586621679203671))) (a6989586621679207965 :: (~>) a6989586621679203672 b6989586621679203673) :: (~>) s6989586621679203670 t6989586621679203671
type OverSym3 (a6989586621679207964 :: (~>) ((~>) a6989586621679203672 (Identity b6989586621679203673)) ((~>) s6989586621679203670 (Identity t6989586621679203671))) (a6989586621679207965 :: (~>) a6989586621679203672 b6989586621679203673) (a6989586621679207966 :: s6989586621679203670) = Over a6989586621679207964 a6989586621679207965 a6989586621679207966
data SetSym0 :: forall a6989586621679203668 b6989586621679203669 s6989586621679203666 t6989586621679203667. (~>) ((~>) ((~>) a6989586621679203668 (Identity b6989586621679203669)) ((~>) s6989586621679203666 (Identity t6989586621679203667))) ((~>) b6989586621679203669 ((~>) s6989586621679203666 t6989586621679203667))
data SetSym1 (a6989586621679207981 :: (~>) ((~>) a6989586621679203668 (Identity b6989586621679203669)) ((~>) s6989586621679203666 (Identity t6989586621679203667))) :: (~>) b6989586621679203669 ((~>) s6989586621679203666 t6989586621679203667)
data SetSym2 (a6989586621679207981 :: (~>) ((~>) a6989586621679203668 (Identity b6989586621679203669)) ((~>) s6989586621679203666 (Identity t6989586621679203667))) (a6989586621679207982 :: b6989586621679203669) :: (~>) s6989586621679203666 t6989586621679203667
type SetSym3 (a6989586621679207981 :: (~>) ((~>) a6989586621679203668 (Identity b6989586621679203669)) ((~>) s6989586621679203666 (Identity t6989586621679203667))) (a6989586621679207982 :: b6989586621679203669) (a6989586621679207983 :: s6989586621679203666) = Set a6989586621679207981 a6989586621679207982 a6989586621679207983
data SetsSym0 :: forall a6989586621679203660 b6989586621679203661 s6989586621679203662 t6989586621679203663. (~>) ((~>) ((~>) a6989586621679203660 b6989586621679203661) ((~>) s6989586621679203662 t6989586621679203663)) ((~>) ((~>) a6989586621679203660 (Identity b6989586621679203661)) ((~>) s6989586621679203662 (Identity t6989586621679203663)))
data SetsSym1 (a6989586621679207923 :: (~>) ((~>) a6989586621679203660 b6989586621679203661) ((~>) s6989586621679203662 t6989586621679203663)) :: (~>) ((~>) a6989586621679203660 (Identity b6989586621679203661)) ((~>) s6989586621679203662 (Identity t6989586621679203663))
data SetsSym2 (a6989586621679207923 :: (~>) ((~>) a6989586621679203660 b6989586621679203661) ((~>) s6989586621679203662 t6989586621679203663)) (a6989586621679207924 :: (~>) a6989586621679203660 (Identity b6989586621679203661)) :: (~>) s6989586621679203662 (Identity t6989586621679203663)
type SetsSym3 (a6989586621679207923 :: (~>) ((~>) a6989586621679203660 b6989586621679203661) ((~>) s6989586621679203662 t6989586621679203663)) (a6989586621679207924 :: (~>) a6989586621679203660 (Identity b6989586621679203661)) (a6989586621679207925 :: s6989586621679203662) = Sets a6989586621679207923 a6989586621679207924 a6989586621679207925
data GettingSym0 r6989586621679199032
data GettingSym1 (r6989586621679199032 :: Type) s6989586621679199033
data GettingSym2 (r6989586621679199032 :: Type) (s6989586621679199033 :: Type) a6989586621679199034
type GettingSym3 (r6989586621679199032 :: Type) (s6989586621679199033 :: Type) (a6989586621679199034 :: Type) = Getting r6989586621679199032 s6989586621679199033 a6989586621679199034
data ViewSym0 :: forall a6989586621679203664 s6989586621679203665. (~>) ((~>) ((~>) a6989586621679203664 ((Const a6989586621679203664 :: Type -> Type) a6989586621679203664)) ((~>) s6989586621679203665 ((Const a6989586621679203664 :: Type -> Type) s6989586621679203665))) ((~>) s6989586621679203665 a6989586621679203664)
data ViewSym1 (a6989586621679207951 :: (~>) ((~>) a6989586621679203664 ((Const a6989586621679203664 :: Type -> Type) a6989586621679203664)) ((~>) s6989586621679203665 ((Const a6989586621679203664 :: Type -> Type) s6989586621679203665))) :: (~>) s6989586621679203665 a6989586621679203664
type ViewSym2 (a6989586621679207951 :: (~>) ((~>) a6989586621679203664 ((Const a6989586621679203664 :: Type -> Type) a6989586621679203664)) ((~>) s6989586621679203665 ((Const a6989586621679203664 :: Type -> Type) s6989586621679203665))) (a6989586621679207952 :: s6989586621679203665) = View a6989586621679207951 a6989586621679207952
data ToSym0 :: forall a6989586621679203658 r6989586621679203659 s6989586621679203657. (~>) ((~>) s6989586621679203657 a6989586621679203658) ((~>) ((~>) a6989586621679203658 ((Const r6989586621679203659 :: Type -> Type) a6989586621679203658)) ((~>) s6989586621679203657 ((Const r6989586621679203659 :: Type -> Type) s6989586621679203657)))
data ToSym1 (a6989586621679207906 :: (~>) s6989586621679203657 a6989586621679203658) :: forall r6989586621679203659. (~>) ((~>) a6989586621679203658 ((Const r6989586621679203659 :: Type -> Type) a6989586621679203658)) ((~>) s6989586621679203657 ((Const r6989586621679203659 :: Type -> Type) s6989586621679203657))
data ToSym2 (a6989586621679207906 :: (~>) s6989586621679203657 a6989586621679203658) (a6989586621679207907 :: (~>) a6989586621679203658 ((Const r6989586621679203659 :: Type -> Type) a6989586621679203658)) :: (~>) s6989586621679203657 ((Const r6989586621679203659 :: Type -> Type) s6989586621679203657)
type ToSym3 (a6989586621679207906 :: (~>) s6989586621679203657 a6989586621679203658) (a6989586621679207907 :: (~>) a6989586621679203658 ((Const r6989586621679203659 :: Type -> Type) a6989586621679203658)) (a6989586621679207908 :: s6989586621679203657) = To a6989586621679207906 a6989586621679207907 a6989586621679207908
data ToListOfSym0 :: forall a6989586621679203645 s6989586621679203646. (~>) ((~>) ((~>) a6989586621679203645 ((Const [a6989586621679203645] :: Type -> Type) a6989586621679203645)) ((~>) s6989586621679203646 ((Const [a6989586621679203645] :: Type -> Type) s6989586621679203646))) ((~>) s6989586621679203646 [a6989586621679203645])
data ToListOfSym1 (a6989586621679207848 :: (~>) ((~>) a6989586621679203645 ((Const [a6989586621679203645] :: Type -> Type) a6989586621679203645)) ((~>) s6989586621679203646 ((Const [a6989586621679203645] :: Type -> Type) s6989586621679203646))) :: (~>) s6989586621679203646 [a6989586621679203645]
type ToListOfSym2 (a6989586621679207848 :: (~>) ((~>) a6989586621679203645 ((Const [a6989586621679203645] :: Type -> Type) a6989586621679203645)) ((~>) s6989586621679203646 ((Const [a6989586621679203645] :: Type -> Type) s6989586621679203646))) (a6989586621679207849 :: s6989586621679203646) = ToListOf a6989586621679207848 a6989586621679207849
data LensLikeSym0 f6989586621679199042
data LensLikeSym1 (f6989586621679199042 :: k6989586621679199057 -> Type) s6989586621679199043
data LensLikeSym2 (f6989586621679199042 :: k6989586621679199057 -> Type) (s6989586621679199043 :: Type) t6989586621679199044
data LensLikeSym3 (f6989586621679199042 :: k6989586621679199057 -> Type) (s6989586621679199043 :: Type) (t6989586621679199044 :: k6989586621679199057) a6989586621679199045
data LensLikeSym4 (f6989586621679199042 :: k6989586621679199057 -> Type) (s6989586621679199043 :: Type) (t6989586621679199044 :: k6989586621679199057) (a6989586621679199045 :: Type) b6989586621679199046
type LensLikeSym5 (f6989586621679199042 :: k6989586621679199057 -> Type) (s6989586621679199043 :: Type) (t6989586621679199044 :: k6989586621679199057) (a6989586621679199045 :: Type) (b6989586621679199046 :: k6989586621679199057) = LensLike f6989586621679199042 s6989586621679199043 t6989586621679199044 a6989586621679199045 b6989586621679199046
data LensLike'Sym0 f6989586621679199039
data LensLike'Sym1 (f6989586621679199039 :: Type -> Type) s6989586621679199040
data LensLike'Sym2 (f6989586621679199039 :: Type -> Type) (s6989586621679199040 :: Type) a6989586621679199041
type LensLike'Sym3 (f6989586621679199039 :: Type -> Type) (s6989586621679199040 :: Type) (a6989586621679199041 :: Type) = LensLike' f6989586621679199039 s6989586621679199040 a6989586621679199041
data MkLensSym0 :: forall a6989586621679203654 b6989586621679203655 f6989586621679203652 s6989586621679203653 t6989586621679203656. (~>) ((~>) s6989586621679203653 a6989586621679203654) ((~>) ((~>) s6989586621679203653 ((~>) b6989586621679203655 t6989586621679203656)) ((~>) ((~>) a6989586621679203654 (f6989586621679203652 b6989586621679203655)) ((~>) s6989586621679203653 (f6989586621679203652 t6989586621679203656))))
data MkLensSym1 (a6989586621679207894 :: (~>) s6989586621679203653 a6989586621679203654) :: forall b6989586621679203655 f6989586621679203652 t6989586621679203656. (~>) ((~>) s6989586621679203653 ((~>) b6989586621679203655 t6989586621679203656)) ((~>) ((~>) a6989586621679203654 (f6989586621679203652 b6989586621679203655)) ((~>) s6989586621679203653 (f6989586621679203652 t6989586621679203656)))
data MkLensSym2 (a6989586621679207894 :: (~>) s6989586621679203653 a6989586621679203654) (a6989586621679207895 :: (~>) s6989586621679203653 ((~>) b6989586621679203655 t6989586621679203656)) :: forall f6989586621679203652. (~>) ((~>) a6989586621679203654 (f6989586621679203652 b6989586621679203655)) ((~>) s6989586621679203653 (f6989586621679203652 t6989586621679203656))
data MkLensSym3 (a6989586621679207894 :: (~>) s6989586621679203653 a6989586621679203654) (a6989586621679207895 :: (~>) s6989586621679203653 ((~>) b6989586621679203655 t6989586621679203656)) (a6989586621679207896 :: (~>) a6989586621679203654 (f6989586621679203652 b6989586621679203655)) :: (~>) s6989586621679203653 (f6989586621679203652 t6989586621679203656)
type MkLensSym4 (a6989586621679207894 :: (~>) s6989586621679203653 a6989586621679203654) (a6989586621679207895 :: (~>) s6989586621679203653 ((~>) b6989586621679203655 t6989586621679203656)) (a6989586621679207896 :: (~>) a6989586621679203654 (f6989586621679203652 b6989586621679203655)) (a6989586621679207897 :: s6989586621679203653) = MkLens a6989586621679207894 a6989586621679207895 a6989586621679207896 a6989586621679207897
data CloneLensSym0 :: forall a6989586621679203648 b6989586621679203649 f6989586621679203647 s6989586621679203650 t6989586621679203651. (~>) ((~>) ((~>) a6989586621679203648 (Context a6989586621679203648 b6989586621679203649 b6989586621679203649)) ((~>) s6989586621679203650 (Context a6989586621679203648 b6989586621679203649 t6989586621679203651))) ((~>) ((~>) a6989586621679203648 (f6989586621679203647 b6989586621679203649)) ((~>) s6989586621679203650 (f6989586621679203647 t6989586621679203651)))
data CloneLensSym1 (a6989586621679207868 :: (~>) ((~>) a6989586621679203648 (Context a6989586621679203648 b6989586621679203649 b6989586621679203649)) ((~>) s6989586621679203650 (Context a6989586621679203648 b6989586621679203649 t6989586621679203651))) :: forall f6989586621679203647. (~>) ((~>) a6989586621679203648 (f6989586621679203647 b6989586621679203649)) ((~>) s6989586621679203650 (f6989586621679203647 t6989586621679203651))
data CloneLensSym2 (a6989586621679207868 :: (~>) ((~>) a6989586621679203648 (Context a6989586621679203648 b6989586621679203649 b6989586621679203649)) ((~>) s6989586621679203650 (Context a6989586621679203648 b6989586621679203649 t6989586621679203651))) (a6989586621679207869 :: (~>) a6989586621679203648 (f6989586621679203647 b6989586621679203649)) :: (~>) s6989586621679203650 (f6989586621679203647 t6989586621679203651)
type CloneLensSym3 (a6989586621679207868 :: (~>) ((~>) a6989586621679203648 (Context a6989586621679203648 b6989586621679203649 b6989586621679203649)) ((~>) s6989586621679203650 (Context a6989586621679203648 b6989586621679203649 t6989586621679203651))) (a6989586621679207869 :: (~>) a6989586621679203648 (f6989586621679203647 b6989586621679203649)) (a6989586621679207870 :: s6989586621679203650) = CloneLens a6989586621679207868 a6989586621679207869 a6989586621679207870
data FoldingSym0 :: forall a6989586621679203640 f6989586621679203637 r6989586621679203638 s6989586621679203639. (~>) ((~>) s6989586621679203639 (f6989586621679203637 a6989586621679203640)) ((~>) ((~>) a6989586621679203640 ((Const r6989586621679203638 :: Type -> Type) a6989586621679203640)) ((~>) s6989586621679203639 ((Const r6989586621679203638 :: Type -> Type) s6989586621679203639)))
data FoldingSym1 (a6989586621679207805 :: (~>) s6989586621679203639 (f6989586621679203637 a6989586621679203640)) :: forall r6989586621679203638. (~>) ((~>) a6989586621679203640 ((Const r6989586621679203638 :: Type -> Type) a6989586621679203640)) ((~>) s6989586621679203639 ((Const r6989586621679203638 :: Type -> Type) s6989586621679203639))
data FoldingSym2 (a6989586621679207805 :: (~>) s6989586621679203639 (f6989586621679203637 a6989586621679203640)) (a6989586621679207806 :: (~>) a6989586621679203640 ((Const r6989586621679203638 :: Type -> Type) a6989586621679203640)) :: (~>) s6989586621679203639 ((Const r6989586621679203638 :: Type -> Type) s6989586621679203639)
type FoldingSym3 (a6989586621679207805 :: (~>) s6989586621679203639 (f6989586621679203637 a6989586621679203640)) (a6989586621679207806 :: (~>) a6989586621679203640 ((Const r6989586621679203638 :: Type -> Type) a6989586621679203640)) (a6989586621679207807 :: s6989586621679203639) = Folding a6989586621679207805 a6989586621679207806 a6989586621679207807
data FoldedSym0 :: forall a6989586621679203636 f6989586621679203634 r6989586621679203635. (~>) ((~>) a6989586621679203636 ((Const r6989586621679203635 :: Type -> Type) a6989586621679203636)) ((~>) (f6989586621679203634 a6989586621679203636) ((Const r6989586621679203635 :: Type -> Type) (f6989586621679203634 a6989586621679203636)))
data FoldedSym1 (a6989586621679207792 :: (~>) a6989586621679203636 ((Const r6989586621679203635 :: Type -> Type) a6989586621679203636)) :: forall f6989586621679203634. (~>) (f6989586621679203634 a6989586621679203636) ((Const r6989586621679203635 :: Type -> Type) (f6989586621679203634 a6989586621679203636))
type FoldedSym2 (a6989586621679207792 :: (~>) a6989586621679203636 ((Const r6989586621679203635 :: Type -> Type) a6989586621679203636)) (a6989586621679207793 :: f6989586621679203634 a6989586621679203636) = Folded a6989586621679207792 a6989586621679207793
data L1Sym0 :: forall a6989586621679203626 b6989586621679203628 c6989586621679203627 f6989586621679203625. (~>) ((~>) a6989586621679203626 (f6989586621679203625 b6989586621679203628)) ((~>) (a6989586621679203626, c6989586621679203627) (f6989586621679203625 (b6989586621679203628, c6989586621679203627)))
data L1Sym1 (a6989586621679207760 :: (~>) a6989586621679203626 (f6989586621679203625 b6989586621679203628)) :: forall c6989586621679203627. (~>) (a6989586621679203626, c6989586621679203627) (f6989586621679203625 (b6989586621679203628, c6989586621679203627))
type L1Sym2 (a6989586621679207760 :: (~>) a6989586621679203626 (f6989586621679203625 b6989586621679203628)) (a6989586621679207761 :: (a6989586621679203626, c6989586621679203627)) = L1 a6989586621679207760 a6989586621679207761
data L2Sym0 :: forall a6989586621679203622 b6989586621679203623 c6989586621679203624 f6989586621679203621. (~>) ((~>) b6989586621679203623 (f6989586621679203621 c6989586621679203624)) ((~>) (a6989586621679203622, b6989586621679203623) (f6989586621679203621 (a6989586621679203622, c6989586621679203624)))
data L2Sym1 (a6989586621679207745 :: (~>) b6989586621679203623 (f6989586621679203621 c6989586621679203624)) :: forall a6989586621679203622. (~>) (a6989586621679203622, b6989586621679203623) (f6989586621679203621 (a6989586621679203622, c6989586621679203624))
type L2Sym2 (a6989586621679207745 :: (~>) b6989586621679203623 (f6989586621679203621 c6989586621679203624)) (a6989586621679207746 :: (a6989586621679203622, b6989586621679203623)) = L2 a6989586621679207745 a6989586621679207746
type ZSym0 =  'Z
data SSym0 :: (~>) N N
type SSym1 (t6989586621679199281 :: N) =  'S t6989586621679199281
data IxListSym0 :: forall a6989586621679203620 f6989586621679203619. (~>) N ((~>) ((~>) a6989586621679203620 (f6989586621679203619 a6989586621679203620)) ((~>) [a6989586621679203620] (f6989586621679203619 [a6989586621679203620])))
data IxListSym1 (a6989586621679207724 :: N) :: forall a6989586621679203620 f6989586621679203619. (~>) ((~>) a6989586621679203620 (f6989586621679203619 a6989586621679203620)) ((~>) [a6989586621679203620] (f6989586621679203619 [a6989586621679203620]))
data IxListSym2 (a6989586621679207724 :: N) (a6989586621679207725 :: (~>) a6989586621679203620 (f6989586621679203619 a6989586621679203620)) :: (~>) [a6989586621679203620] (f6989586621679203619 [a6989586621679203620])
type IxListSym3 (a6989586621679207724 :: N) (a6989586621679207725 :: (~>) a6989586621679203620 (f6989586621679203619 a6989586621679203620)) (a6989586621679207726 :: [a6989586621679203620]) = IxList a6989586621679207724 a6989586621679207725 a6989586621679207726
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetSym0
instance forall a6989586621679203668 b6989586621679203669 s6989586621679203666 t6989586621679203667 (a6989586621679207981 :: (a6989586621679203668 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679203669) Data.Singletons.Internal.~> (s6989586621679203666 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679203667)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym1 a6989586621679207981)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym1 d)
instance forall a6989586621679203668 b6989586621679203669 s6989586621679203666 t6989586621679203667 (a6989586621679207982 :: (a6989586621679203668 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679203669) Data.Singletons.Internal.~> (s6989586621679203666 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679203667)) (a6989586621679207981 :: b6989586621679203669). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym2 a6989586621679207982 a6989586621679207981)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.OverSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.OverSym0
instance forall a6989586621679203672 b6989586621679203673 s6989586621679203670 t6989586621679203671 (a6989586621679207964 :: (a6989586621679203672 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679203673) Data.Singletons.Internal.~> (s6989586621679203670 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679203671)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym1 a6989586621679207964)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym1 d)
instance forall a6989586621679203672 b6989586621679203673 s6989586621679203670 t6989586621679203671 (a6989586621679207965 :: (a6989586621679203672 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679203673) Data.Singletons.Internal.~> (s6989586621679203670 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679203671)) (a6989586621679207964 :: a6989586621679203672 Data.Singletons.Internal.~> b6989586621679203673). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym2 a6989586621679207965 a6989586621679207964)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: a Data.Singletons.Internal.~> b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ViewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ViewSym0
instance forall a6989586621679203664 s6989586621679203665 (a6989586621679207951 :: (a6989586621679203664 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679203664 a6989586621679203664) Data.Singletons.Internal.~> (s6989586621679203665 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679203664 s6989586621679203665)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ViewSym1 a6989586621679207951)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const a a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const a s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ViewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetsSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetsSym0
instance forall a6989586621679203660 b6989586621679203661 s6989586621679203662 t6989586621679203663 (a6989586621679207923 :: (a6989586621679203660 Data.Singletons.Internal.~> b6989586621679203661) Data.Singletons.Internal.~> (s6989586621679203662 Data.Singletons.Internal.~> t6989586621679203663)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym1 a6989586621679207923)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym1 d)
instance forall a6989586621679203660 b6989586621679203661 s6989586621679203662 t6989586621679203663 (a6989586621679207924 :: (a6989586621679203660 Data.Singletons.Internal.~> b6989586621679203661) Data.Singletons.Internal.~> (s6989586621679203662 Data.Singletons.Internal.~> t6989586621679203663)) (a6989586621679207923 :: a6989586621679203660 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679203661). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym2 a6989586621679207924 a6989586621679207923)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToSym0
instance forall r6989586621679203659 s6989586621679203657 a6989586621679203658 (a6989586621679207906 :: s6989586621679203657 Data.Singletons.Internal.~> a6989586621679203658). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym1 a6989586621679207906)
instance forall s a r (d :: s Data.Singletons.Internal.~> a). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym1 d)
instance forall r6989586621679203659 s6989586621679203657 a6989586621679203658 (a6989586621679207907 :: s6989586621679203657 Data.Singletons.Internal.~> a6989586621679203658) (a6989586621679207906 :: a6989586621679203658 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679203659 a6989586621679203658). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym2 a6989586621679207907 a6989586621679207906)
instance forall s a r (d1 :: s Data.Singletons.Internal.~> a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.MkLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.MkLensSym0
instance forall b6989586621679203655 (f6989586621679203652 :: * -> *) t6989586621679203656 s6989586621679203653 a6989586621679203654 (a6989586621679207894 :: s6989586621679203653 Data.Singletons.Internal.~> a6989586621679203654). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym1 a6989586621679207894)
instance forall s a b t (f :: * -> *) (d :: s Data.Singletons.Internal.~> a). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym1 d)
instance forall (f6989586621679203652 :: * -> *) b6989586621679203655 t6989586621679203656 s6989586621679203653 a6989586621679203654 (a6989586621679207895 :: s6989586621679203653 Data.Singletons.Internal.~> a6989586621679203654) (a6989586621679207894 :: s6989586621679203653 Data.Singletons.Internal.~> (b6989586621679203655 Data.Singletons.Internal.~> t6989586621679203656)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym2 a6989586621679207895 a6989586621679207894)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym2 d1 d2)
instance forall (f6989586621679203652 :: * -> *) b6989586621679203655 t6989586621679203656 s6989586621679203653 a6989586621679203654 (a6989586621679207896 :: s6989586621679203653 Data.Singletons.Internal.~> a6989586621679203654) (a6989586621679207895 :: s6989586621679203653 Data.Singletons.Internal.~> (b6989586621679203655 Data.Singletons.Internal.~> t6989586621679203656)) (a6989586621679207894 :: a6989586621679203654 Data.Singletons.Internal.~> f6989586621679203652 b6989586621679203655). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym3 a6989586621679207896 a6989586621679207895 a6989586621679207894)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)) (d3 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2, Data.Singletons.Internal.SingI d3) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym3 d1 d2 d3)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneLensSym0
instance forall (f6989586621679203647 :: * -> *) s6989586621679203650 a6989586621679203648 b6989586621679203649 t6989586621679203651 (a6989586621679207868 :: (a6989586621679203648 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679203648 b6989586621679203649 b6989586621679203649) Data.Singletons.Internal.~> (s6989586621679203650 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679203648 b6989586621679203649 t6989586621679203651)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym1 a6989586621679207868)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym1 d)
instance forall (f6989586621679203647 :: * -> *) s6989586621679203650 a6989586621679203648 b6989586621679203649 t6989586621679203651 (a6989586621679207869 :: (a6989586621679203648 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679203648 b6989586621679203649 b6989586621679203649) Data.Singletons.Internal.~> (s6989586621679203650 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679203648 b6989586621679203649 t6989586621679203651)) (a6989586621679207868 :: a6989586621679203648 Data.Singletons.Internal.~> f6989586621679203647 b6989586621679203649). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym2 a6989586621679207869 a6989586621679207868)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToListOfSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToListOfSym0
instance forall a6989586621679203645 s6989586621679203646 (a6989586621679207848 :: (a6989586621679203645 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679203645] a6989586621679203645) Data.Singletons.Internal.~> (s6989586621679203646 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679203645] s6989586621679203646)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToListOfSym1 a6989586621679207848)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const [a] a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const [a] s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToListOfSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.UnsafePreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.UnsafePreviewSym0
instance forall a6989586621679203641 s6989586621679203642 (a6989586621679207835 :: (a6989586621679203641 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679203641) a6989586621679203641) Data.Singletons.Internal.~> (s6989586621679203642 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679203641) s6989586621679203642)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.UnsafePreviewSym1 a6989586621679207835)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.UnsafePreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207841Scrutinee_6989586621679203788Sym0
instance forall a6989586621679203643 k1 (l6989586621679207839 :: (a6989586621679203643 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679203643) a6989586621679203643) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679203643) k1)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207841Scrutinee_6989586621679203788Sym1 l6989586621679207839)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.PreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.PreviewSym0
instance forall a6989586621679203643 s6989586621679203644 (a6989586621679207822 :: (a6989586621679203643 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679203643) a6989586621679203643) Data.Singletons.Internal.~> (s6989586621679203644 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679203643) s6989586621679203644)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.PreviewSym1 a6989586621679207822)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.PreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldingSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldingSym0
instance forall r6989586621679203638 s6989586621679203639 (f6989586621679203637 :: * -> *) a6989586621679203640 (a6989586621679207805 :: s6989586621679203639 Data.Singletons.Internal.~> f6989586621679203637 a6989586621679203640). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym1 a6989586621679207805)
instance forall s (f :: * -> *) a r (d :: s Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym1 d)
instance forall r6989586621679203638 s6989586621679203639 (f6989586621679203637 :: * -> *) a6989586621679203640 (a6989586621679207806 :: s6989586621679203639 Data.Singletons.Internal.~> f6989586621679203637 a6989586621679203640) (a6989586621679207805 :: a6989586621679203640 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679203638 a6989586621679203640). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym2 a6989586621679207806 a6989586621679207805)
instance forall s (f :: * -> *) a r (d1 :: s Data.Singletons.Internal.~> f a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldedSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldedSym0
instance forall (f6989586621679203634 :: * -> *) r6989586621679203635 a6989586621679203636 (a6989586621679207792 :: a6989586621679203636 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679203635 a6989586621679203636). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldedSym1 a6989586621679207792)
instance forall a r (f :: * -> *) (d :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldedSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneTraversalSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneTraversalSym0
instance forall (f6989586621679203629 :: * -> *) s6989586621679203632 a6989586621679203630 b6989586621679203631 t6989586621679203633 (a6989586621679207775 :: (a6989586621679203630 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679203630 b6989586621679203631 b6989586621679203631) Data.Singletons.Internal.~> (s6989586621679203632 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679203630 b6989586621679203631 t6989586621679203633)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym1 a6989586621679207775)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym1 d)
instance forall (f6989586621679203629 :: * -> *) s6989586621679203632 a6989586621679203630 b6989586621679203631 t6989586621679203633 (a6989586621679207776 :: (a6989586621679203630 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679203630 b6989586621679203631 b6989586621679203631) Data.Singletons.Internal.~> (s6989586621679203632 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679203630 b6989586621679203631 t6989586621679203633)) (a6989586621679207775 :: a6989586621679203630 Data.Singletons.Internal.~> f6989586621679203629 b6989586621679203631). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym2 a6989586621679207776 a6989586621679207775)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L1Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L1Sym0
instance forall c6989586621679203627 a6989586621679203626 (f6989586621679203625 :: * -> *) b6989586621679203628 (a6989586621679207760 :: a6989586621679203626 Data.Singletons.Internal.~> f6989586621679203625 b6989586621679203628). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L1Sym1 a6989586621679207760)
instance forall a (f :: * -> *) b c (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L1Sym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L2Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L2Sym0
instance forall a6989586621679203622 b6989586621679203623 (f6989586621679203621 :: * -> *) c6989586621679203624 (a6989586621679207745 :: b6989586621679203623 Data.Singletons.Internal.~> f6989586621679203621 c6989586621679203624). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L2Sym1 a6989586621679207745)
instance forall b (f :: * -> *) c a (d :: b Data.Singletons.Internal.~> f c). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L2Sym1 d)
instance forall (f6989586621679203619 :: * -> *) a6989586621679203620 (a6989586621679207725 :: Data.Type.Lens.N) (a6989586621679207724 :: a6989586621679203620 Data.Singletons.Internal.~> f6989586621679203619 a6989586621679203620). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym2 a6989586621679207725 a6989586621679207724)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym1 a6989586621679207724)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.IxListSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.IxListSym0
instance (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym1 d)
instance forall a (f :: * -> *) (d1 :: Data.Type.Lens.N) (d2 :: a Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679207992Sym0
instance forall k1 k2 k3 k4 (l6989586621679207989 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207992Sym1 l6989586621679207989)
instance forall k1 k2 k3 k4 (y6989586621679207990 :: k4) (l6989586621679207989 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207992Sym2 y6989586621679207990 l6989586621679207989)
instance forall k1 k2 k3 k4 (a_69895866216792079876989586621679207991 :: k4) (y6989586621679207990 :: k3) (l6989586621679207989 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207992Sym3 a_69895866216792079876989586621679207991 y6989586621679207990 l6989586621679207989)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207973Scrutinee_6989586621679203751Sym0
instance forall a6989586621679919356 b6989586621679919354 k1 k (l6989586621679207970 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207973Scrutinee_6989586621679203751Sym1 l6989586621679207970)
instance forall a6989586621679919356 b6989586621679919354 k1 k (f6989586621679207971 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)) (l6989586621679207970 :: a6989586621679919356 Data.Singletons.Internal.~> b6989586621679919354). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207973Scrutinee_6989586621679203751Sym2 f6989586621679207971 l6989586621679207970)
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207957Scrutinee_6989586621679203756Sym0
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679207955 :: (Data.Singletons.Internal.TyFun a6989586621679095349 (Data.Functor.Const.Const a6989586621679095349 b6989586621679095350) -> *) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207957Scrutinee_6989586621679203756Sym1 l6989586621679207955)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679207934Sym0
instance forall k1 k2 k3 k4 (f6989586621679207931 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207934Sym1 f6989586621679207931)
instance forall k1 k2 k3 k4 (g6989586621679207932 :: k4) (f6989586621679207931 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207934Sym2 g6989586621679207932 f6989586621679207931)
instance forall k1 k2 k3 k4 (a_69895866216792079296989586621679207933 :: k4) (g6989586621679207932 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3) (f6989586621679207931 :: k1). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207934Sym3 a_69895866216792079296989586621679207933 g6989586621679207932 f6989586621679207931)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207937Scrutinee_6989586621679203761Sym0
instance forall k1 k2 k3 k4 (f6989586621679207931 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207937Scrutinee_6989586621679203761Sym1 f6989586621679207931)
instance forall k1 k2 k3 k4 (g6989586621679207932 :: k4) (f6989586621679207931 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207937Scrutinee_6989586621679203761Sym2 g6989586621679207932 f6989586621679207931)
instance forall k1 k2 k3 k4 (x6989586621679207936 :: k4) (g6989586621679207932 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679207931 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207937Scrutinee_6989586621679203761Sym3 x6989586621679207936 g6989586621679207932 f6989586621679207931)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207915Scrutinee_6989586621679203764Sym0
instance forall k k2 k3 (f6989586621679207912 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207915Scrutinee_6989586621679203764Sym1 f6989586621679207912)
instance forall k k2 k3 (g6989586621679207913 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679207912 :: k3 Data.Singletons.Internal.~> k). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207915Scrutinee_6989586621679203764Sym2 g6989586621679207913 f6989586621679207912)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207877Scrutinee_6989586621679203769Sym0
instance forall k2 k3 t k4 k (l6989586621679207874 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207877Scrutinee_6989586621679203769Sym1 l6989586621679207874)
instance forall k2 k3 t k4 k (f6989586621679207875 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)) (l6989586621679207874 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207877Scrutinee_6989586621679203769Sym2 f6989586621679207875 l6989586621679207874)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679207878Sym0
instance forall k1 k2 k3 t k4 (l6989586621679207874 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207878Sym1 l6989586621679207874)
instance forall k1 k2 t k3 k4 (f6989586621679207875 :: k4) (l6989586621679207874 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207878Sym2 f6989586621679207875 l6989586621679207874)
instance forall k1 t k2 k3 k4 (x6989586621679207876 :: k4) (f6989586621679207875 :: k3) (l6989586621679207874 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207878Sym3 x6989586621679207876 f6989586621679207875 l6989586621679207874)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207854Scrutinee_6989586621679203774Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679207852 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679919356] b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207854Scrutinee_6989586621679203774Sym1 l6989586621679207852)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679207855Sym0
instance forall k1 k2 k3 (l6989586621679207852 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207855Sym1 l6989586621679207852)
instance forall k1 k2 k3 (x6989586621679207853 :: k3) (l6989586621679207852 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207855Sym2 x6989586621679207853 l6989586621679207852)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207828Scrutinee_6989586621679203781Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679207826 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679919356) b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207828Scrutinee_6989586621679203781Sym1 l6989586621679207826)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207814Scrutinee_6989586621679203794Sym0
instance forall b6989586621680695205 (f6989586621680695203 :: * -> *) k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621679207811 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207814Scrutinee_6989586621679203794Sym1 f6989586621679207811)
instance forall (f6989586621680695203 :: * -> *) b6989586621680695205 k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (g6989586621679207812 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204) (f6989586621679207811 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207814Scrutinee_6989586621679203794Sym2 g6989586621679207812 f6989586621679207811)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679207798Scrutinee_6989586621679203799Sym0
instance forall (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621680695203 :: * -> *) b6989586621680695205 (f6989586621679207796 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679207798Scrutinee_6989586621679203799Sym1 f6989586621679207796)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679207784Sym0
instance forall k1 k2 k3 t k4 (l6989586621679207781 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207784Sym1 l6989586621679207781)
instance forall k1 k2 t k3 k4 (f6989586621679207782 :: k4) (l6989586621679207781 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207784Sym2 f6989586621679207782 l6989586621679207781)
instance forall k1 t k2 k3 k4 (xs6989586621679207783 :: k4) (f6989586621679207782 :: k3) (l6989586621679207781 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207784Sym3 xs6989586621679207783 f6989586621679207782 l6989586621679207781)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679207767Sym0
instance forall k2 k3 k4 k5 (f6989586621679207764 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207767Sym1 f6989586621679207764)
instance forall k2 k3 k4 k5 (x6989586621679207765 :: k5) (f6989586621679207764 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207767Sym2 x6989586621679207765 f6989586621679207764)
instance forall k2 k3 k4 k5 (y6989586621679207766 :: k5) (x6989586621679207765 :: k4) (f6989586621679207764 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207767Sym3 y6989586621679207766 x6989586621679207765 f6989586621679207764)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679207752Sym0
instance forall k2 k3 k4 k5 (f6989586621679207749 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207752Sym1 f6989586621679207749)
instance forall k2 k3 k4 k5 (x6989586621679207750 :: k5) (f6989586621679207749 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207752Sym2 x6989586621679207750 f6989586621679207749)
instance forall k2 k3 k4 k5 (y6989586621679207751 :: k5) (x6989586621679207750 :: k4) (f6989586621679207749 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207752Sym3 y6989586621679207751 x6989586621679207750 f6989586621679207749)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679207733Sym0
instance forall k1 k2 k3 (f6989586621679207730 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207733Sym1 f6989586621679207730)
instance forall k1 k2 k3 (x6989586621679207731 :: k3) (f6989586621679207730 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207733Sym2 x6989586621679207731 f6989586621679207730)
instance forall k1 k2 k3 (xs6989586621679207732 :: k3) (x6989586621679207731 :: k2) (f6989586621679207730 :: [k1]). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679207733Sym3 xs6989586621679207732 x6989586621679207731 f6989586621679207730)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.GettingSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym1 r6989586621679199032)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym2 s6989586621679199033 r6989586621679199032)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ASetterSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym1 s6989586621679199035)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym2 t6989586621679199036 s6989586621679199035)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym3 a6989586621679199037 t6989586621679199036 s6989586621679199035)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLike'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym1 f6989586621679199039)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym2 s6989586621679199040 f6989586621679199039)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLikeSym0
instance forall k6989586621679199057 (f6989586621679199042 :: k6989586621679199057 -> *). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym1 f6989586621679199042)
instance forall k6989586621679199057 (s6989586621679199043 :: k6989586621679199057 -> *) f6989586621679199042. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym2 s6989586621679199043 f6989586621679199042)
instance forall k6989586621679199057 (t6989586621679199044 :: k6989586621679199057 -> *) s6989586621679199043 (f6989586621679199042 :: k6989586621679199057). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym3 t6989586621679199044 s6989586621679199043 f6989586621679199042)
instance forall k6989586621679199057 (a6989586621679199045 :: k6989586621679199057 -> *) t6989586621679199044 (s6989586621679199043 :: k6989586621679199057) f6989586621679199042. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym4 a6989586621679199045 t6989586621679199044 s6989586621679199043 f6989586621679199042)
instance Data.Singletons.Internal.SingKind Data.Type.Lens.N
instance Data.Singletons.Internal.SingI 'Data.Type.Lens.Z
instance Data.Singletons.Internal.SingI n => Data.Singletons.Internal.SingI ('Data.Type.Lens.S n)
instance Data.Singletons.Internal.SingI (Data.Singletons.Internal.TyCon1 'Data.Type.Lens.S)


-- | See source for examples of using type-level lenses from
--   <a>Data.Type.Lens</a>.
module Data.Type.Lens.Example

-- | <pre>
--   &gt;&gt;&gt; :kind! SetExample
--   '( 'True, 6 )
--   </pre>
type SetExample = Set L1_  'True '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ViewExample
--   6
--   </pre>
type ViewExample = View L2_ '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ToExample
--   6
--   </pre>
type ToExample = View (To_ SndSym0) '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '( "hello", 'False )
--   </pre>
type OverExample = Over L2_ NotSym0 '("hello",  'True)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '[ 'False, 'True, 'True ]
--   </pre>
type TraversalExample = Over Traverse_ NotSym0 '[ 'True,  'False,  'False]

-- | <pre>
--   &gt;&gt;&gt; :kind! NestedExample
--   6
--   </pre>
type NestedExample = View (L2_ .@ L1_) '("hello", '(6,  'False))

-- | <pre>
--   &gt;&gt;&gt; :kind! FoldExample
--   '["hello", "world", "curry"]
--   </pre>
type FoldExample = ToListOf (Traverse_ .@ L1_) '['("hello",  'True), '("world",  'False), '("curry",  'False)]

-- | <pre>
--   &gt;&gt;&gt; :kind! UnsafeExample
--   Error "Failed indexing into empty traversal"
--   </pre>
type UnsafeExample = UnsafePreview Traverse_ '[]

-- | <pre>
--   &gt;&gt;&gt; :kind! IxExample
--   '["hello", "haskell", "curry"]
--   </pre>
type IxExample = Set (IxList_ ( 'S  'Z)) "haskell" '["hello", "world", "curry"]

-- | <pre>
--   &gt;&gt;&gt; :kind! CloneExample
--   "hello"
--   </pre>
type CloneExample = View (CloneLens_ L1_) '("hello", 6)
type SetExample' = '("hello", 6) & L1_ .~  'True
type ViewExample' = '("hello", 6) ^. L2_
type ToExample' = '("hello", 6) ^. To_ SndSym0
type OverExample' = '("hello",  'True) & L2_ %~ NotSym0
type TraversalExample' = '[ 'True,  'False,  'False] & Traverse_ %~ NotSym0
type NestedExample' = '("hello", '(6,  'False)) ^. L2_ .@ L1_
type FoldExample' = '['("hello",  'True), '("world",  'False), '("curry",  'False)] ^.. Traverse_ .@ L1_
type IxExample' = '["hello", "world", "curry"] & IxList_ ( 'S  'Z) .~ "haskell"
type UnsafeExample' = '[] ^?! Traverse_
type CloneExample' = '("hello", 6) ^. CloneLens_ L1_
