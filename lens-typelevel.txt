-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Type-level lenses using singletons
--   
--   Type-level lenses using singletons and its defunctionalization system,
--   implemented using the same van Laarhoven encoding as the <i>lens</i>
--   package. See README for more information.
@package lens-typelevel
@version 0.1.1.0

module Data.Type.Lens.Internal

-- | A partially applied lens
data Context a b t
MkContext :: (b ~> t) -> a -> Context a b t

-- | A partially applied traversal
data Bazaar a b t
Done :: t -> Bazaar a b t
More :: a -> Bazaar a b (b ~> t) -> Bazaar a b t
type family UnBazaar (a_aEDy :: (~>) a_aEoX (f_aEoW b_aEoY)) (a_aEDz :: Bazaar a_aEoX b_aEoY t_aEoZ) :: f_aEoW t_aEoZ
sUnBazaar :: forall f_aEoW a_aEoX b_aEoY t_aEoZ (t_aEEm :: (~>) a_aEoX (f_aEoW b_aEoY)) (t_aEEn :: Bazaar a_aEoX b_aEoY t_aEoZ). SApplicative f_aEoW => Sing t_aEEm -> Sing t_aEEn -> Sing (Apply (Apply UnBazaarSym0 t_aEEm) t_aEEn :: f_aEoW t_aEoZ)

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
type MkContextSym0 = TyCon2  'MkContext
type MkContextSym1 f = TyCon1 ( 'MkContext f)
type MkContextSym2 f x =  'MkContext f x
type DoneSym0 = TyCon1  'Done
type DoneSym1 x =  'Done x
type MoreSym0 = TyCon2  'More
type MoreSym1 x = TyCon1 ( 'More x)
type MoreSym2 x b =  'More x b
data UnBazaarSym0 :: forall a6989586621679165099 b6989586621679165100 f6989586621679165098 t6989586621679165101. (~>) ((~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) ((~>) (Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) (f6989586621679165098 t6989586621679165101))
data UnBazaarSym1 (a6989586621679166004 :: (~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) :: forall t6989586621679165101. (~>) (Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) (f6989586621679165098 t6989586621679165101)
type UnBazaarSym2 (a6989586621679166004 :: (~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) (a6989586621679166005 :: Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) = UnBazaar a6989586621679166004 a6989586621679166005
instance forall a6989586621679165105 b6989586621679165106 t6989586621679165102 r6989586621679165103 s6989586621679165104 (a6989586621679166027 :: t6989586621679165102 Data.Singletons.Internal.~> (r6989586621679165103 Data.Singletons.Internal.~> s6989586621679165104)) (a6989586621679166026 :: Data.Type.Lens.Internal.Bazaar a6989586621679165105 b6989586621679165106 t6989586621679165102). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym2 a6989586621679166027 a6989586621679166026)
instance forall a6989586621679165105 b6989586621679165106 t6989586621679165102 r6989586621679165103 s6989586621679165104 (a6989586621679166026 :: t6989586621679165102 Data.Singletons.Internal.~> (r6989586621679165103 Data.Singletons.Internal.~> s6989586621679165104)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym1 a6989586621679166026)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.LiftA2BazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.LiftA2BazaarSym0
instance forall t r s a b (d :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym1 d)
instance forall t r s a b (d1 :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)) (d2 :: Data.Type.Lens.Internal.Bazaar a b t). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym2 d1 d2)
instance Data.Singletons.Prelude.Monad.Internal.PApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance forall a6989586621679165112 b6989586621679165113 t6989586621679165110 q6989586621679165111 (a6989586621679166017 :: t6989586621679165110 Data.Singletons.Internal.~> q6989586621679165111). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapBazaarSym1 a6989586621679166017)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapBazaarSym0
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapBazaarSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.PureBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.PureBazaarSym0
instance forall t6989586621679165101 a6989586621679165099 (f6989586621679165098 :: * -> *) b6989586621679165100 (a6989586621679166004 :: a6989586621679165099 Data.Singletons.Internal.~> f6989586621679165098 b6989586621679165100). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.UnBazaarSym1 a6989586621679166004)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.UnBazaarSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.Internal.UnBazaarSym0
instance forall a (f :: * -> *) b t (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.UnBazaarSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.Lambda_6989586621679166039Sym0
instance forall k2 k3 k4 k5 k6 k7 k8 (f6989586621679166035 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym1 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (x6989586621679166036 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (f6989586621679166035 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym2 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (b6989586621679166037 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (x6989586621679166036 :: k5) (f6989586621679166035 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym3 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (c6989586621679166038 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (b6989586621679166037 :: k5) (x6989586621679166036 :: k4) (f6989586621679166035 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym4 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166044 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (c6989586621679166038 :: k5) (b6989586621679166037 :: k4) (x6989586621679166036 :: k3) (f6989586621679166035 :: k2 Data.Singletons.Internal.~> k6). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym5 t6989586621679166044 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166045 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (t6989586621679166044 :: k5) (c6989586621679166038 :: k4) (b6989586621679166037 :: k3) (x6989586621679166036 :: k2 Data.Singletons.Internal.~> k6) (f6989586621679166035 :: k7). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym6 t6989586621679166045 t6989586621679166044 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.Prelude.Monad.Internal.SApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapContextSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapContextSym0
instance forall a6989586621679159061 b6989586621679159062 t6989586621679159059 q6989586621679159060 (a6989586621679159106 :: t6989586621679159059 Data.Singletons.Internal.~> q6989586621679159060). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapContextSym1 a6989586621679159106)
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapContextSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Context a b)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Context a b)


-- | Lenses and optics for manipulating DataKind-based types, powered by
--   <i>singletons</i> defunctionalization.
--   
--   See <a>Data.Type.Lens.Examples</a> for example usage and syntax.
--   
--   For the most part, you should be able to use them just like you'd use
--   the functions from the <i>lens</i> or <i>microlens</i> libraries; just
--   remember to capitalize names like <a>Over</a> and <a>Set</a>, since
--   they are type families.
--   
--   Note that the ways of "creating" a lens or optic (<a>Sets_</a>,
--   <a>Traverse_</a>, <a>To_</a>, <a>MkLens_</a>, etc. are all suffixed
--   with <tt>_</tt> for convenience, to reserve the underscoreless
--   identifiers for the fully applied type family as per <i>singletons</i>
--   library convention.
--   
--   There are two main ways to define optics.
--   
--   First, you can write them by hand using <a>singletonsOnly</a>:
--   
--   <pre>
--   $(singletonsOnly [d|
--     l1 :: Functor f =&gt; LensLike (a, c) (b, c) a b
--     l1 f (x, y) = (x' -&gt; (x', y)) <a>$</a> f x
--   
--     l1Alt :: Functor f =&gt; LensLike (a, c) (b, c) a b
--     l1Alt = mkLens fst ((_, y) x -&gt; (x', y))
--   
--     getFirst :: Getting a (a, b) a
--     getFirst = to fst
--     |])
--   </pre>
--   
--   This creates the <i>type families</i> <tt>L1</tt>, <tt>L1Alt</tt>, and
--   <tt>GetFirst</tt>; however, these aren't lenses, because they aren't
--   partially applied. The lactual lenses are <tt>L1Sym0</tt>,
--   <tt>L1AltSym0</tt>, and <tt>GetFirstSym0</tt>. As a convention, it is
--   recommend to alias the <i>actual</i> lenses with an underscore suffix:
--   
--   <pre>
--   -- L1_       :: Functor f =&gt; LensLike f (a, c) (b, c) a b
--   type L1_       = L1Sym0
--   
--   -- L1Alt_    :: Functor f =&gt; LensLike f (a, c) (b, c) a b
--   type L1Alt     = L1AltSym0
--   
--   -- GetFirst_ :: Getting a (a, b) a
--   type GetFirst_ = GetFirstSym0
--   </pre>
--   
--   The number after the <tt>Sym</tt> is determined by how many arguments
--   you need to apply to your function before you get to the actual lens.
--   For example, <a>IxList</a> requires one argument (the index) to get to
--   the actual traversal, so the definition in the library is:
--   
--   <pre>
--   type IxList_ i = IxListSym1 i
--   </pre>
--   
--   Second, you can write them directly at the type level using
--   combinators like <a>MkLens_</a> and <a>To_</a>:
--   
--   <pre>
--   type GetFirst_ = <a>To_</a> <tt>FstSym0</tt>
--   </pre>
--   
--   (<tt>FstSym0</tt> is the promotion of <a>fst</a> from
--   <a>Data.Singletons.Prelude.Tuple</a>)
module Data.Type.Lens

-- | The general shape of optics in this library. ("van Laarhoven")
--   
--   For different levels of polymorphism on <tt>f</tt>, you get different
--   types of optics:
--   
--   <ul>
--   <li>If <tt>f</tt> can be any <a>Functor</a>, you have a Lens (see
--   <a>ALens</a>)</li>
--   <li>If <tt>f</tt> is only <a>Identity</a>, you have a setter (see
--   <a>ASetter</a>)</li>
--   <li>If <tt>f</tt> is only <tt><a>Const</a> R</tt> for a specific
--   <tt>R</tt>, you have a getter of <tt>R</tt> (see <a>Getting</a>)</li>
--   <li>If <tt>f</tt> can be <tt><a>Const</a> r</tt> for any <a>Monoid</a>
--   <tt>r</tt>, you have a Fold.</li>
--   <li>If <tt>f</tt> can be any <a>Applicative</a>, you have a Traversal
--   (see <a>ATraversal</a>)</li>
--   </ul>
--   
--   Normal lens libraries implement the constraints for lenses, folds, and
--   traversals using RankN types, but we don't do that here to avoid
--   working with RankN kinds.
type LensLike f s t a b = (a -> f b) -> (s -> f t)

-- | A <a>LensLike</a> that does not change any types.
type LensLike' f s a = LensLike f s s a a

-- | A settable "lens". Usable with <a>Over</a> (<a>%~</a>), constructable
--   with <a>To</a> or any of the general lens constructors.
--   
--   See <a>LensLike</a> for more information.
type ASetter s t a b = LensLike Identity s t a b
type family Over (a_aRqZ :: (~>) ((~>) a_aQlo (Identity b_aQlp)) ((~>) s_aQlm (Identity t_aQln))) (a_aRr0 :: (~>) a_aQlo b_aQlp) (a_aRr1 :: s_aQlm) :: t_aQln

-- | Infix application of <a>Over</a>
type l %~ f = OverSym2 l f
infixr 4 %~
sOver :: forall s_aQlm t_aQln a_aQlo b_aQlp (t_aRsG :: (~>) ((~>) a_aQlo (Identity b_aQlp)) ((~>) s_aQlm (Identity t_aQln))) (t_aRsH :: (~>) a_aQlo b_aQlp) (t_aRsI :: s_aQlm). Sing t_aRsG -> Sing t_aRsH -> Sing t_aRsI -> Sing (Apply (Apply (Apply OverSym0 t_aRsG) t_aRsH) t_aRsI :: t_aQln)
type family Set (a_aRrg :: (~>) ((~>) a_aQlk (Identity b_aQll)) ((~>) s_aQli (Identity t_aQlj))) (a_aRrh :: b_aQll) (a_aRri :: s_aQli) :: t_aQlj

-- | Infix application of <a>Set</a>
type l .~ x = SetSym2 l x
infixr 4 .~
sSet :: forall s_aQli t_aQlj a_aQlk b_aQll (t_aRsM :: (~>) ((~>) a_aQlk (Identity b_aQll)) ((~>) s_aQli (Identity t_aQlj))) (t_aRsN :: b_aQll) (t_aRsO :: s_aQli). Sing t_aRsM -> Sing t_aRsN -> Sing t_aRsO -> Sing (Apply (Apply (Apply SetSym0 t_aRsM) t_aRsN) t_aRsO :: t_aQlj)

-- | Create a Setter from a setting function.
--   
--   <pre>
--   <a>Sets_</a> :: ((a ~&gt; b) ~&gt; (s ~&gt; t)) -&gt; <a>ASetter</a> s t a b
--   </pre>
type Sets_ f = SetsSym1 f
type family Sets (a_aRqk :: (~>) ((~>) a_aQlc b_aQld) ((~>) s_aQle t_aQlf)) (a_aRql :: (~>) a_aQlc (Identity b_aQld)) (a_aRqm :: s_aQle) :: Identity t_aQlf
sSets :: forall a_aQlc b_aQld s_aQle t_aQlf (t_aRsw :: (~>) ((~>) a_aQlc b_aQld) ((~>) s_aQle t_aQlf)) (t_aRsx :: (~>) a_aQlc (Identity b_aQld)) (t_aRsy :: s_aQle). Sing t_aRsw -> Sing t_aRsx -> Sing t_aRsy -> Sing (Apply (Apply (Apply SetsSym0 t_aRsw) t_aRsx) t_aRsy :: Identity t_aQlf)

-- | A retrieving "lens". If <tt>r</tt> is fixed to a type, it's a Getter
--   for that type. If <tt>r</tt> is polymorphic over all <a>Monoid</a>,
--   then it's a Fold over <tt>a</tt>s.
--   
--   As a Getter, usable with <a>View</a> (<a>^.</a>); as a Fold, usable
--   with <a>ToListOf</a> (<a>^..</a>), <a>Preview</a> (<a>^?</a>), etc.
--   
--   Normal lens libraries implement the constraints for folds using RankN
--   types, but we don't do that here to avoid working with RankN kinds.
--   
--   See <a>LensLike</a> for more information.
type Getting r s a = LensLike (Const r) s s a a
type family View (a_aRqM :: (~>) ((~>) a_aQlg ((Const a_aQlg :: Type -> Type) a_aQlg)) ((~>) s_aQlh ((Const a_aQlg :: Type -> Type) s_aQlh))) (a_aRqN :: s_aQlh) :: a_aQlg

-- | Infix application of <a>View</a>
type x ^. l = View l x
infixl 8 ^.
sView :: forall a_aQlg s_aQlh (t_aRsC :: (~>) ((~>) a_aQlg ((Const a_aQlg :: Type -> Type) a_aQlg)) ((~>) s_aQlh ((Const a_aQlg :: Type -> Type) s_aQlh))) (t_aRsD :: s_aQlh). Sing t_aRsC -> Sing t_aRsD -> Sing (Apply (Apply ViewSym0 t_aRsC) t_aRsD :: a_aQlg)

-- | Create a Getter from a getting function.
--   
--   <pre>
--   <a>To_</a> :: (a ~&gt; b) -&gt; <a>Getting</a> b a b
--   </pre>
type To_ f = ToSym1 f
type family To (a_aRq3 :: (~>) s_aQl9 a_aQla) (a_aRq4 :: (~>) a_aQla ((Const r_aQlb :: Type -> Type) a_aQla)) (a_aRq5 :: s_aQl9) :: (Const r_aQlb :: Type -> Type) s_aQl9
sTo :: forall s_aQl9 a_aQla r_aQlb (t_aRsq :: (~>) s_aQl9 a_aQla) (t_aRsr :: (~>) a_aQla ((Const r_aQlb :: Type -> Type) a_aQla)) (t_aRss :: s_aQl9). Sing t_aRsq -> Sing t_aRsr -> Sing t_aRss -> Sing (Apply (Apply (Apply ToSym0 t_aRsq) t_aRsr) t_aRss :: (Const r_aQlb :: Type -> Type) s_aQl9)

-- | If a function expects an <a>ALens</a>, it can be given any Lens (a
--   <tt><a>LensLike</a> f</tt> that works for any <a>Functor</a> f).
--   
--   You can use an <a>ALens</a> as a normal lens by using
--   <a>CloneLens_</a>.
type ALens s t a b = LensLike (Context a b) s t a b

-- | Create a Lens from a setter and a getter.
--   
--   <pre>
--   <a>MkLens_</a>
--       :: <a>Functor</a> f
--       =&gt; (s ~&gt; a)
--       -&gt; (s ~&gt; b ~&gt; t)
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
type MkLens_ f g = MkLensSym2 f g
type family MkLens (a_aRpR :: (~>) s_aQl5 a_aQl6) (a_aRpS :: (~>) s_aQl5 ((~>) b_aQl7 t_aQl8)) (a_aRpT :: (~>) a_aQl6 (f_aQl4 b_aQl7)) (a_aRpU :: s_aQl5) :: f_aQl4 t_aQl8
sMkLens :: forall f_aQl4 s_aQl5 a_aQl6 b_aQl7 t_aQl8 (t_aRsi :: (~>) s_aQl5 a_aQl6) (t_aRsj :: (~>) s_aQl5 ((~>) b_aQl7 t_aQl8)) (t_aRsk :: (~>) a_aQl6 (f_aQl4 b_aQl7)) (t_aRsl :: s_aQl5). SFunctor f_aQl4 => Sing t_aRsi -> Sing t_aRsj -> Sing t_aRsk -> Sing t_aRsl -> Sing (Apply (Apply (Apply (Apply MkLensSym0 t_aRsi) t_aRsj) t_aRsk) t_aRsl :: f_aQl4 t_aQl8)

-- | <a>Clone</a> a polymorphic lens so it can be used as more than one
--   type of thing (getter or setter).
--   
--   <pre>
--   <a>CloneLens_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Context a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a lens and uses it in more
--   than one way; if you have it take an <a>ALens</a>, you can then use
--   <a>CloneLens_</a> to use it as a getter or setter.
type CloneLens_ l = CloneLensSym1 l
type family CloneLens (a_aRod :: (~>) ((~>) a_aQkN (Context a_aQkN b_aQkO b_aQkO)) ((~>) s_aQkP (Context a_aQkN b_aQkO t_aQkQ))) (a_aRoe :: (~>) a_aQkN (f_aQkM b_aQkO)) (a_aRof :: s_aQkP) :: f_aQkM t_aQkQ

-- | If a function expects an <a>ATraversal</a>, it can be given any
--   Traversal (a <tt><a>LensLike</a> f</tt> that works for any
--   <a>Applicative</a> f).
--   
--   You can use an <a>ATraversal</a> as a normal traversal by using
--   <a>CloneTraversal_</a>.
type ATraversal s t a b = LensLike (Bazaar a b) s t a b
type family Preview (a_aRp7 :: (~>) ((~>) a_aQl0 ((Const (First a_aQl0) :: Type -> Type) a_aQl0)) ((~>) s_aQl1 ((Const (First a_aQl0) :: Type -> Type) s_aQl1))) (a_aRp8 :: s_aQl1) :: Maybe a_aQl0

-- | Infix application of <a>Preview</a>
type x ^? l = Preview l x
infixl 8 ^?
sPreview :: forall a_aQl0 s_aQl1 (t_aRs6 :: (~>) ((~>) a_aQl0 ((Const (First a_aQl0) :: Type -> Type) a_aQl0)) ((~>) s_aQl1 ((Const (First a_aQl0) :: Type -> Type) s_aQl1))) (t_aRs7 :: s_aQl1). Sing t_aRs6 -> Sing t_aRs7 -> Sing (Apply (Apply PreviewSym0 t_aRs6) t_aRs7 :: Maybe a_aQl0)
type family ToListOf (a_aRpx :: (~>) ((~>) a_aQl2 ((Const [a_aQl2] :: Type -> Type) a_aQl2)) ((~>) s_aQl3 ((Const [a_aQl2] :: Type -> Type) s_aQl3))) (a_aRpy :: s_aQl3) :: [a_aQl2]

-- | Infix application of <a>ToListOf</a>
type x ^.. l = ToListOf l x
infixl 8 ^..
sToListOf :: forall a_aQl2 s_aQl3 (t_aRse :: (~>) ((~>) a_aQl2 ((Const [a_aQl2] :: Type -> Type) a_aQl2)) ((~>) s_aQl3 ((Const [a_aQl2] :: Type -> Type) s_aQl3))) (t_aRsf :: s_aQl3). Sing t_aRse -> Sing t_aRsf -> Sing (Apply (Apply ToListOfSym0 t_aRse) t_aRsf :: [a_aQl2])
type family UnsafePreview (a_aRpk :: (~>) ((~>) a_aQkY ((Const (First a_aQkY) :: Type -> Type) a_aQkY)) ((~>) s_aQkZ ((Const (First a_aQkY) :: Type -> Type) s_aQkZ))) (a_aRpl :: s_aQkZ) :: a_aQkY

-- | Infix application of <a>UnsafePreview</a>
type x ^?! l = UnsafePreview l x
infixl 8 ^?!
sUnsafePreview :: forall a_aQkY s_aQkZ (t_aRsa :: (~>) ((~>) a_aQkY ((Const (First a_aQkY) :: Type -> Type) a_aQkY)) ((~>) s_aQkZ ((Const (First a_aQkY) :: Type -> Type) s_aQkZ))) (t_aRsb :: s_aQkZ). Sing t_aRsa -> Sing t_aRsb -> Sing (Apply (Apply UnsafePreviewSym0 t_aRsa) t_aRsb :: a_aQkY)

-- | Create a Fold from a "folding function":
--   
--   <pre>
--   <a>Folding_</a>
--       :: (<a>Foldable</a> f, <a>Monoid</a> r)
--       =&gt; (s ~&gt; f a)
--       -&gt; <a>Getting</a> r s a
--   </pre>
type Folding_ f = FoldingSym1 f
type family Folding (a_aRoQ :: (~>) s_aQkW (f_aQkU a_aQkX)) (a_aRoR :: (~>) a_aQkX ((Const r_aQkV :: Type -> Type) a_aQkX)) (a_aRoS :: s_aQkW) :: (Const r_aQkV :: Type -> Type) s_aQkW
sFolding :: forall f_aQkU r_aQkV s_aQkW a_aQkX (t_aRs0 :: (~>) s_aQkW (f_aQkU a_aQkX)) (t_aRs1 :: (~>) a_aQkX ((Const r_aQkV :: Type -> Type) a_aQkX)) (t_aRs2 :: s_aQkW). (SFoldable f_aQkU, SMonoid r_aQkV) => Sing t_aRs0 -> Sing t_aRs1 -> Sing t_aRs2 -> Sing (Apply (Apply (Apply FoldingSym0 t_aRs0) t_aRs1) t_aRs2 :: (Const r_aQkV :: Type -> Type) s_aQkW)

-- | The canonical Fold for any instance of <a>Foldable</a>.
--   
--   <pre>
--   <a>Folded_</a>
--       :: <a>Monoid</a> r
--       =&gt; <a>Getting</a> r (t a) a
--   </pre>
type Folded_ = FoldedSym0
type family Folded (a_aRoD :: (~>) a_aQkT ((Const r_aQkS :: Type -> Type) a_aQkT)) (a_aRoE :: f_aQkR a_aQkT) :: (Const r_aQkS :: Type -> Type) (f_aQkR a_aQkT)
sFolded :: forall f_aQkR r_aQkS a_aQkT (t_aRrW :: (~>) a_aQkT ((Const r_aQkS :: Type -> Type) a_aQkT)) (t_aRrX :: f_aQkR a_aQkT). (SFoldable f_aQkR, SMonoid r_aQkS) => Sing t_aRrW -> Sing t_aRrX -> Sing (Apply (Apply FoldedSym0 t_aRrW) t_aRrX :: (Const r_aQkS :: Type -> Type) (f_aQkR a_aQkT))

-- | The canonical Traversal for any instance of <a>Traversable</a>.
--   
--   <pre>
--   <a>Traverse_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>LensLike</a> f (t a) (t b) a b
--   </pre>
type Traverse_ = TraverseSym0
type family Traverse (arg :: a ~> f b) (arg1 :: t a) :: f t b
sTraverse :: (STraversable t, SApplicative f) => Sing t1 -> Sing t2 -> Sing (Apply (Apply (TraverseSym0 :: TyFun (a ~> f b) (t a ~> f (t b)) -> Type) t1) t2)

-- | <a>Clone</a> a polymorphic traversal so it can be used as more than
--   one type of thing (fold, traversal, getter, setter...).
--   
--   <pre>
--   <a>CloneTraversal_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Bazaar a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a traversal and uses it in
--   more than one way; if you have it take an <a>ATraversal</a>, you can
--   then use <a>CloneTraversal_</a> to use it as a fold or traversal or
--   anything else.
type CloneTraversal_ l = CloneTraversalSym1 l
type family CloneTraversal (a_aRnW :: (~>) ((~>) a_aQkI (Bazaar a_aQkI b_aQkJ b_aQkJ)) ((~>) s_aQkK (Bazaar a_aQkI b_aQkJ t_aQkL))) (a_aRnX :: (~>) a_aQkI (f_aQkH b_aQkJ)) (a_aRnY :: s_aQkK) :: f_aQkH t_aQkL
sCloneTraversal :: forall f_aQkH a_aQkI b_aQkJ s_aQkK t_aQkL (t_aRrK :: (~>) ((~>) a_aQkI (Bazaar a_aQkI b_aQkJ b_aQkJ)) ((~>) s_aQkK (Bazaar a_aQkI b_aQkJ t_aQkL))) (t_aRrL :: (~>) a_aQkI (f_aQkH b_aQkJ)) (t_aRrM :: s_aQkK). SApplicative f_aQkH => Sing t_aRrK -> Sing t_aRrL -> Sing t_aRrM -> Sing (Apply (Apply (Apply CloneTraversalSym0 t_aRrK) t_aRrL) t_aRrM :: f_aQkH t_aQkL)

-- | Lens into the first field of a tuple
type L1_ = L1Sym0
type family L1 (a_aRnH :: (~>) a_aQkE (f_aQkD b_aQkG)) (a_aRnI :: (a_aQkE, c_aQkF)) :: f_aQkD (b_aQkG, c_aQkF)
sL1 :: forall f_aQkD a_aQkE c_aQkF b_aQkG (t_aRrG :: (~>) a_aQkE (f_aQkD b_aQkG)) (t_aRrH :: (a_aQkE, c_aQkF)). SFunctor f_aQkD => Sing t_aRrG -> Sing t_aRrH -> Sing (Apply (Apply L1Sym0 t_aRrG) t_aRrH :: f_aQkD (b_aQkG, c_aQkF))

-- | Lens into the second field of a tuple
type L2_ = L2Sym0
type family L2 (a_aRns :: (~>) b_aQkB (f_aQkz c_aQkC)) (a_aRnt :: (a_aQkA, b_aQkB)) :: f_aQkz (a_aQkA, c_aQkC)
sL2 :: forall f_aQkz a_aQkA b_aQkB c_aQkC (t_aRrC :: (~>) b_aQkB (f_aQkz c_aQkC)) (t_aRrD :: (a_aQkA, b_aQkB)). SFunctor f_aQkz => Sing t_aRrC -> Sing t_aRrD -> Sing (Apply (Apply L2Sym0 t_aRrC) t_aRrD :: f_aQkz (a_aQkA, c_aQkC))

-- | Peano nats, used for implementation of list index traversals in a
--   termination-sane way.
data N
Z :: N
S :: N -> N
type SN = (Sing :: N -> Type)

-- | <tt><a>IxList</a> i</tt> is a Traversal into the i-th item into a
--   list. Defined in terms of <a>N</a> to allow for sane termination
--   guaruntees.
--   
--   <pre>
--   <a>IxList_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>N</a>
--       -&gt; <a>LensLike'</a> f [a] a
--   </pre>
type IxList_ i = IxListSym1 i
type family IxList (a_aY4i :: N) (a_aY4j :: (~>) a_aY3t (f_aY3s a_aY3t)) (a_aY4k :: [a_aY3t]) :: f_aY3s [a_aY3t]
sIxList :: forall f_aY3s a_aY3t (t_aY4D :: N) (t_aY4E :: (~>) a_aY3t (f_aY3s a_aY3t)) (t_aY4F :: [a_aY3t]). SApplicative f_aY3s => Sing t_aY4D -> Sing t_aY4E -> Sing t_aY4F -> Sing (Apply (Apply (Apply IxListSym0 t_aY4D) t_aY4E) t_aY4F :: f_aY3s [a_aY3t])
ixList :: Applicative f_aY3s => N -> LensLike' f_aY3s [a_aY3t] a_aY3t

-- | Shorter name for type-level function composition
type f .@ g = f .@#@$$$ g
infixr 9 .@

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
data ASetterSym0 s6989586621679201104
data ASetterSym1 (s6989586621679201104 :: Type) t6989586621679201105
data ASetterSym2 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) a6989586621679201106
data ASetterSym3 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) (a6989586621679201106 :: Type) b6989586621679201107
type ASetterSym4 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) (a6989586621679201106 :: Type) (b6989586621679201107 :: Type) = ASetter s6989586621679201104 t6989586621679201105 a6989586621679201106 b6989586621679201107
data OverSym0 :: forall a6989586621679211006 b6989586621679211007 s6989586621679211004 t6989586621679211005. (~>) ((~>) ((~>) a6989586621679211006 (Identity b6989586621679211007)) ((~>) s6989586621679211004 (Identity t6989586621679211005))) ((~>) ((~>) a6989586621679211006 b6989586621679211007) ((~>) s6989586621679211004 t6989586621679211005))
data OverSym1 (a6989586621679215197 :: (~>) ((~>) a6989586621679211006 (Identity b6989586621679211007)) ((~>) s6989586621679211004 (Identity t6989586621679211005))) :: (~>) ((~>) a6989586621679211006 b6989586621679211007) ((~>) s6989586621679211004 t6989586621679211005)
data OverSym2 (a6989586621679215197 :: (~>) ((~>) a6989586621679211006 (Identity b6989586621679211007)) ((~>) s6989586621679211004 (Identity t6989586621679211005))) (a6989586621679215198 :: (~>) a6989586621679211006 b6989586621679211007) :: (~>) s6989586621679211004 t6989586621679211005
type OverSym3 (a6989586621679215197 :: (~>) ((~>) a6989586621679211006 (Identity b6989586621679211007)) ((~>) s6989586621679211004 (Identity t6989586621679211005))) (a6989586621679215198 :: (~>) a6989586621679211006 b6989586621679211007) (a6989586621679215199 :: s6989586621679211004) = Over a6989586621679215197 a6989586621679215198 a6989586621679215199
data SetSym0 :: forall a6989586621679211002 b6989586621679211003 s6989586621679211000 t6989586621679211001. (~>) ((~>) ((~>) a6989586621679211002 (Identity b6989586621679211003)) ((~>) s6989586621679211000 (Identity t6989586621679211001))) ((~>) b6989586621679211003 ((~>) s6989586621679211000 t6989586621679211001))
data SetSym1 (a6989586621679215214 :: (~>) ((~>) a6989586621679211002 (Identity b6989586621679211003)) ((~>) s6989586621679211000 (Identity t6989586621679211001))) :: (~>) b6989586621679211003 ((~>) s6989586621679211000 t6989586621679211001)
data SetSym2 (a6989586621679215214 :: (~>) ((~>) a6989586621679211002 (Identity b6989586621679211003)) ((~>) s6989586621679211000 (Identity t6989586621679211001))) (a6989586621679215215 :: b6989586621679211003) :: (~>) s6989586621679211000 t6989586621679211001
type SetSym3 (a6989586621679215214 :: (~>) ((~>) a6989586621679211002 (Identity b6989586621679211003)) ((~>) s6989586621679211000 (Identity t6989586621679211001))) (a6989586621679215215 :: b6989586621679211003) (a6989586621679215216 :: s6989586621679211000) = Set a6989586621679215214 a6989586621679215215 a6989586621679215216
data SetsSym0 :: forall a6989586621679210994 b6989586621679210995 s6989586621679210996 t6989586621679210997. (~>) ((~>) ((~>) a6989586621679210994 b6989586621679210995) ((~>) s6989586621679210996 t6989586621679210997)) ((~>) ((~>) a6989586621679210994 (Identity b6989586621679210995)) ((~>) s6989586621679210996 (Identity t6989586621679210997)))
data SetsSym1 (a6989586621679215156 :: (~>) ((~>) a6989586621679210994 b6989586621679210995) ((~>) s6989586621679210996 t6989586621679210997)) :: (~>) ((~>) a6989586621679210994 (Identity b6989586621679210995)) ((~>) s6989586621679210996 (Identity t6989586621679210997))
data SetsSym2 (a6989586621679215156 :: (~>) ((~>) a6989586621679210994 b6989586621679210995) ((~>) s6989586621679210996 t6989586621679210997)) (a6989586621679215157 :: (~>) a6989586621679210994 (Identity b6989586621679210995)) :: (~>) s6989586621679210996 (Identity t6989586621679210997)
type SetsSym3 (a6989586621679215156 :: (~>) ((~>) a6989586621679210994 b6989586621679210995) ((~>) s6989586621679210996 t6989586621679210997)) (a6989586621679215157 :: (~>) a6989586621679210994 (Identity b6989586621679210995)) (a6989586621679215158 :: s6989586621679210996) = Sets a6989586621679215156 a6989586621679215157 a6989586621679215158
data GettingSym0 r6989586621679201101
data GettingSym1 (r6989586621679201101 :: Type) s6989586621679201102
data GettingSym2 (r6989586621679201101 :: Type) (s6989586621679201102 :: Type) a6989586621679201103
type GettingSym3 (r6989586621679201101 :: Type) (s6989586621679201102 :: Type) (a6989586621679201103 :: Type) = Getting r6989586621679201101 s6989586621679201102 a6989586621679201103
data ViewSym0 :: forall a6989586621679210998 s6989586621679210999. (~>) ((~>) ((~>) a6989586621679210998 ((Const a6989586621679210998 :: Type -> Type) a6989586621679210998)) ((~>) s6989586621679210999 ((Const a6989586621679210998 :: Type -> Type) s6989586621679210999))) ((~>) s6989586621679210999 a6989586621679210998)
data ViewSym1 (a6989586621679215184 :: (~>) ((~>) a6989586621679210998 ((Const a6989586621679210998 :: Type -> Type) a6989586621679210998)) ((~>) s6989586621679210999 ((Const a6989586621679210998 :: Type -> Type) s6989586621679210999))) :: (~>) s6989586621679210999 a6989586621679210998
type ViewSym2 (a6989586621679215184 :: (~>) ((~>) a6989586621679210998 ((Const a6989586621679210998 :: Type -> Type) a6989586621679210998)) ((~>) s6989586621679210999 ((Const a6989586621679210998 :: Type -> Type) s6989586621679210999))) (a6989586621679215185 :: s6989586621679210999) = View a6989586621679215184 a6989586621679215185
data ToSym0 :: forall a6989586621679210992 r6989586621679210993 s6989586621679210991. (~>) ((~>) s6989586621679210991 a6989586621679210992) ((~>) ((~>) a6989586621679210992 ((Const r6989586621679210993 :: Type -> Type) a6989586621679210992)) ((~>) s6989586621679210991 ((Const r6989586621679210993 :: Type -> Type) s6989586621679210991)))
data ToSym1 (a6989586621679215139 :: (~>) s6989586621679210991 a6989586621679210992) :: forall r6989586621679210993. (~>) ((~>) a6989586621679210992 ((Const r6989586621679210993 :: Type -> Type) a6989586621679210992)) ((~>) s6989586621679210991 ((Const r6989586621679210993 :: Type -> Type) s6989586621679210991))
data ToSym2 (a6989586621679215139 :: (~>) s6989586621679210991 a6989586621679210992) (a6989586621679215140 :: (~>) a6989586621679210992 ((Const r6989586621679210993 :: Type -> Type) a6989586621679210992)) :: (~>) s6989586621679210991 ((Const r6989586621679210993 :: Type -> Type) s6989586621679210991)
type ToSym3 (a6989586621679215139 :: (~>) s6989586621679210991 a6989586621679210992) (a6989586621679215140 :: (~>) a6989586621679210992 ((Const r6989586621679210993 :: Type -> Type) a6989586621679210992)) (a6989586621679215141 :: s6989586621679210991) = To a6989586621679215139 a6989586621679215140 a6989586621679215141
data ToListOfSym0 :: forall a6989586621679210984 s6989586621679210985. (~>) ((~>) ((~>) a6989586621679210984 ((Const [a6989586621679210984] :: Type -> Type) a6989586621679210984)) ((~>) s6989586621679210985 ((Const [a6989586621679210984] :: Type -> Type) s6989586621679210985))) ((~>) s6989586621679210985 [a6989586621679210984])
data ToListOfSym1 (a6989586621679215107 :: (~>) ((~>) a6989586621679210984 ((Const [a6989586621679210984] :: Type -> Type) a6989586621679210984)) ((~>) s6989586621679210985 ((Const [a6989586621679210984] :: Type -> Type) s6989586621679210985))) :: (~>) s6989586621679210985 [a6989586621679210984]
type ToListOfSym2 (a6989586621679215107 :: (~>) ((~>) a6989586621679210984 ((Const [a6989586621679210984] :: Type -> Type) a6989586621679210984)) ((~>) s6989586621679210985 ((Const [a6989586621679210984] :: Type -> Type) s6989586621679210985))) (a6989586621679215108 :: s6989586621679210985) = ToListOf a6989586621679215107 a6989586621679215108
data LensLikeSym0 f6989586621679201111
data LensLikeSym1 (f6989586621679201111 :: k6989586621679201126 -> Type) s6989586621679201112
data LensLikeSym2 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) t6989586621679201113
data LensLikeSym3 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) a6989586621679201114
data LensLikeSym4 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) (a6989586621679201114 :: Type) b6989586621679201115
type LensLikeSym5 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) (a6989586621679201114 :: Type) (b6989586621679201115 :: k6989586621679201126) = LensLike f6989586621679201111 s6989586621679201112 t6989586621679201113 a6989586621679201114 b6989586621679201115
data LensLike'Sym0 f6989586621679201108
data LensLike'Sym1 (f6989586621679201108 :: Type -> Type) s6989586621679201109
data LensLike'Sym2 (f6989586621679201108 :: Type -> Type) (s6989586621679201109 :: Type) a6989586621679201110
type LensLike'Sym3 (f6989586621679201108 :: Type -> Type) (s6989586621679201109 :: Type) (a6989586621679201110 :: Type) = LensLike' f6989586621679201108 s6989586621679201109 a6989586621679201110
data MkLensSym0 :: forall a6989586621679210988 b6989586621679210989 f6989586621679210986 s6989586621679210987 t6989586621679210990. (~>) ((~>) s6989586621679210987 a6989586621679210988) ((~>) ((~>) s6989586621679210987 ((~>) b6989586621679210989 t6989586621679210990)) ((~>) ((~>) a6989586621679210988 (f6989586621679210986 b6989586621679210989)) ((~>) s6989586621679210987 (f6989586621679210986 t6989586621679210990))))
data MkLensSym1 (a6989586621679215127 :: (~>) s6989586621679210987 a6989586621679210988) :: forall b6989586621679210989 f6989586621679210986 t6989586621679210990. (~>) ((~>) s6989586621679210987 ((~>) b6989586621679210989 t6989586621679210990)) ((~>) ((~>) a6989586621679210988 (f6989586621679210986 b6989586621679210989)) ((~>) s6989586621679210987 (f6989586621679210986 t6989586621679210990)))
data MkLensSym2 (a6989586621679215127 :: (~>) s6989586621679210987 a6989586621679210988) (a6989586621679215128 :: (~>) s6989586621679210987 ((~>) b6989586621679210989 t6989586621679210990)) :: forall f6989586621679210986. (~>) ((~>) a6989586621679210988 (f6989586621679210986 b6989586621679210989)) ((~>) s6989586621679210987 (f6989586621679210986 t6989586621679210990))
data MkLensSym3 (a6989586621679215127 :: (~>) s6989586621679210987 a6989586621679210988) (a6989586621679215128 :: (~>) s6989586621679210987 ((~>) b6989586621679210989 t6989586621679210990)) (a6989586621679215129 :: (~>) a6989586621679210988 (f6989586621679210986 b6989586621679210989)) :: (~>) s6989586621679210987 (f6989586621679210986 t6989586621679210990)
type MkLensSym4 (a6989586621679215127 :: (~>) s6989586621679210987 a6989586621679210988) (a6989586621679215128 :: (~>) s6989586621679210987 ((~>) b6989586621679210989 t6989586621679210990)) (a6989586621679215129 :: (~>) a6989586621679210988 (f6989586621679210986 b6989586621679210989)) (a6989586621679215130 :: s6989586621679210987) = MkLens a6989586621679215127 a6989586621679215128 a6989586621679215129 a6989586621679215130
data CloneLensSym0 :: forall a6989586621679210969 b6989586621679210970 f6989586621679210968 s6989586621679210971 t6989586621679210972. (~>) ((~>) ((~>) a6989586621679210969 (Context a6989586621679210969 b6989586621679210970 b6989586621679210970)) ((~>) s6989586621679210971 (Context a6989586621679210969 b6989586621679210970 t6989586621679210972))) ((~>) ((~>) a6989586621679210969 (f6989586621679210968 b6989586621679210970)) ((~>) s6989586621679210971 (f6989586621679210968 t6989586621679210972)))
data CloneLensSym1 (a6989586621679215025 :: (~>) ((~>) a6989586621679210969 (Context a6989586621679210969 b6989586621679210970 b6989586621679210970)) ((~>) s6989586621679210971 (Context a6989586621679210969 b6989586621679210970 t6989586621679210972))) :: forall f6989586621679210968. (~>) ((~>) a6989586621679210969 (f6989586621679210968 b6989586621679210970)) ((~>) s6989586621679210971 (f6989586621679210968 t6989586621679210972))
data CloneLensSym2 (a6989586621679215025 :: (~>) ((~>) a6989586621679210969 (Context a6989586621679210969 b6989586621679210970 b6989586621679210970)) ((~>) s6989586621679210971 (Context a6989586621679210969 b6989586621679210970 t6989586621679210972))) (a6989586621679215026 :: (~>) a6989586621679210969 (f6989586621679210968 b6989586621679210970)) :: (~>) s6989586621679210971 (f6989586621679210968 t6989586621679210972)
type CloneLensSym3 (a6989586621679215025 :: (~>) ((~>) a6989586621679210969 (Context a6989586621679210969 b6989586621679210970 b6989586621679210970)) ((~>) s6989586621679210971 (Context a6989586621679210969 b6989586621679210970 t6989586621679210972))) (a6989586621679215026 :: (~>) a6989586621679210969 (f6989586621679210968 b6989586621679210970)) (a6989586621679215027 :: s6989586621679210971) = CloneLens a6989586621679215025 a6989586621679215026 a6989586621679215027
data FoldingSym0 :: forall a6989586621679210979 f6989586621679210976 r6989586621679210977 s6989586621679210978. (~>) ((~>) s6989586621679210978 (f6989586621679210976 a6989586621679210979)) ((~>) ((~>) a6989586621679210979 ((Const r6989586621679210977 :: Type -> Type) a6989586621679210979)) ((~>) s6989586621679210978 ((Const r6989586621679210977 :: Type -> Type) s6989586621679210978)))
data FoldingSym1 (a6989586621679215064 :: (~>) s6989586621679210978 (f6989586621679210976 a6989586621679210979)) :: forall r6989586621679210977. (~>) ((~>) a6989586621679210979 ((Const r6989586621679210977 :: Type -> Type) a6989586621679210979)) ((~>) s6989586621679210978 ((Const r6989586621679210977 :: Type -> Type) s6989586621679210978))
data FoldingSym2 (a6989586621679215064 :: (~>) s6989586621679210978 (f6989586621679210976 a6989586621679210979)) (a6989586621679215065 :: (~>) a6989586621679210979 ((Const r6989586621679210977 :: Type -> Type) a6989586621679210979)) :: (~>) s6989586621679210978 ((Const r6989586621679210977 :: Type -> Type) s6989586621679210978)
type FoldingSym3 (a6989586621679215064 :: (~>) s6989586621679210978 (f6989586621679210976 a6989586621679210979)) (a6989586621679215065 :: (~>) a6989586621679210979 ((Const r6989586621679210977 :: Type -> Type) a6989586621679210979)) (a6989586621679215066 :: s6989586621679210978) = Folding a6989586621679215064 a6989586621679215065 a6989586621679215066
data FoldedSym0 :: forall a6989586621679210975 f6989586621679210973 r6989586621679210974. (~>) ((~>) a6989586621679210975 ((Const r6989586621679210974 :: Type -> Type) a6989586621679210975)) ((~>) (f6989586621679210973 a6989586621679210975) ((Const r6989586621679210974 :: Type -> Type) (f6989586621679210973 a6989586621679210975)))
data FoldedSym1 (a6989586621679215051 :: (~>) a6989586621679210975 ((Const r6989586621679210974 :: Type -> Type) a6989586621679210975)) :: forall f6989586621679210973. (~>) (f6989586621679210973 a6989586621679210975) ((Const r6989586621679210974 :: Type -> Type) (f6989586621679210973 a6989586621679210975))
type FoldedSym2 (a6989586621679215051 :: (~>) a6989586621679210975 ((Const r6989586621679210974 :: Type -> Type) a6989586621679210975)) (a6989586621679215052 :: f6989586621679210973 a6989586621679210975) = Folded a6989586621679215051 a6989586621679215052
data L1Sym0 :: forall a6989586621679210960 b6989586621679210962 c6989586621679210961 f6989586621679210959. (~>) ((~>) a6989586621679210960 (f6989586621679210959 b6989586621679210962)) ((~>) (a6989586621679210960, c6989586621679210961) (f6989586621679210959 (b6989586621679210962, c6989586621679210961)))
data L1Sym1 (a6989586621679214993 :: (~>) a6989586621679210960 (f6989586621679210959 b6989586621679210962)) :: forall c6989586621679210961. (~>) (a6989586621679210960, c6989586621679210961) (f6989586621679210959 (b6989586621679210962, c6989586621679210961))
type L1Sym2 (a6989586621679214993 :: (~>) a6989586621679210960 (f6989586621679210959 b6989586621679210962)) (a6989586621679214994 :: (a6989586621679210960, c6989586621679210961)) = L1 a6989586621679214993 a6989586621679214994
data L2Sym0 :: forall a6989586621679210956 b6989586621679210957 c6989586621679210958 f6989586621679210955. (~>) ((~>) b6989586621679210957 (f6989586621679210955 c6989586621679210958)) ((~>) (a6989586621679210956, b6989586621679210957) (f6989586621679210955 (a6989586621679210956, c6989586621679210958)))
data L2Sym1 (a6989586621679214978 :: (~>) b6989586621679210957 (f6989586621679210955 c6989586621679210958)) :: forall a6989586621679210956. (~>) (a6989586621679210956, b6989586621679210957) (f6989586621679210955 (a6989586621679210956, c6989586621679210958))
type L2Sym2 (a6989586621679214978 :: (~>) b6989586621679210957 (f6989586621679210955 c6989586621679210958)) (a6989586621679214979 :: (a6989586621679210956, b6989586621679210957)) = L2 a6989586621679214978 a6989586621679214979
type ZSym0 =  'Z
data SSym0 :: (~>) N N
type SSym1 (t6989586621679202515 :: N) =  'S t6989586621679202515
data IxListSym0 :: forall a6989586621679240647 f6989586621679240646. (~>) N ((~>) ((~>) a6989586621679240647 (f6989586621679240646 a6989586621679240647)) ((~>) [a6989586621679240647] (f6989586621679240646 [a6989586621679240647])))
data IxListSym1 (a6989586621679240698 :: N) :: forall a6989586621679240647 f6989586621679240646. (~>) ((~>) a6989586621679240647 (f6989586621679240646 a6989586621679240647)) ((~>) [a6989586621679240647] (f6989586621679240646 [a6989586621679240647]))
data IxListSym2 (a6989586621679240698 :: N) (a6989586621679240699 :: (~>) a6989586621679240647 (f6989586621679240646 a6989586621679240647)) :: (~>) [a6989586621679240647] (f6989586621679240646 [a6989586621679240647])
type IxListSym3 (a6989586621679240698 :: N) (a6989586621679240699 :: (~>) a6989586621679240647 (f6989586621679240646 a6989586621679240647)) (a6989586621679240700 :: [a6989586621679240647]) = IxList a6989586621679240698 a6989586621679240699 a6989586621679240700
instance forall (f6989586621679240646 :: * -> *) a6989586621679240647 (a6989586621679240699 :: Data.Type.Lens.N) (a6989586621679240698 :: a6989586621679240647 Data.Singletons.Internal.~> f6989586621679240646 a6989586621679240647). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym2 a6989586621679240699 a6989586621679240698)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym1 a6989586621679240698)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.IxListSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.IxListSym0
instance (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym1 d)
instance forall a (f :: * -> *) (d1 :: Data.Type.Lens.N) (d2 :: a Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679240707Sym0
instance forall k1 k2 k3 (f6989586621679240704 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679240707Sym1 f6989586621679240704)
instance forall k1 k2 k3 (x6989586621679240705 :: k3) (f6989586621679240704 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679240707Sym2 x6989586621679240705 f6989586621679240704)
instance forall k1 k2 k3 (xs6989586621679240706 :: k3) (x6989586621679240705 :: k2) (f6989586621679240704 :: [k1]). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679240707Sym3 xs6989586621679240706 x6989586621679240705 f6989586621679240704)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetSym0
instance forall a6989586621679211002 b6989586621679211003 s6989586621679211000 t6989586621679211001 (a6989586621679215214 :: (a6989586621679211002 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679211003) Data.Singletons.Internal.~> (s6989586621679211000 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679211001)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym1 a6989586621679215214)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym1 d)
instance forall a6989586621679211002 b6989586621679211003 s6989586621679211000 t6989586621679211001 (a6989586621679215215 :: (a6989586621679211002 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679211003) Data.Singletons.Internal.~> (s6989586621679211000 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679211001)) (a6989586621679215214 :: b6989586621679211003). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym2 a6989586621679215215 a6989586621679215214)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.OverSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.OverSym0
instance forall a6989586621679211006 b6989586621679211007 s6989586621679211004 t6989586621679211005 (a6989586621679215197 :: (a6989586621679211006 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679211007) Data.Singletons.Internal.~> (s6989586621679211004 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679211005)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym1 a6989586621679215197)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym1 d)
instance forall a6989586621679211006 b6989586621679211007 s6989586621679211004 t6989586621679211005 (a6989586621679215198 :: (a6989586621679211006 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679211007) Data.Singletons.Internal.~> (s6989586621679211004 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679211005)) (a6989586621679215197 :: a6989586621679211006 Data.Singletons.Internal.~> b6989586621679211007). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym2 a6989586621679215198 a6989586621679215197)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: a Data.Singletons.Internal.~> b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ViewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ViewSym0
instance forall a6989586621679210998 s6989586621679210999 (a6989586621679215184 :: (a6989586621679210998 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679210998 a6989586621679210998) Data.Singletons.Internal.~> (s6989586621679210999 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679210998 s6989586621679210999)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ViewSym1 a6989586621679215184)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const a a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const a s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ViewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetsSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetsSym0
instance forall a6989586621679210994 b6989586621679210995 s6989586621679210996 t6989586621679210997 (a6989586621679215156 :: (a6989586621679210994 Data.Singletons.Internal.~> b6989586621679210995) Data.Singletons.Internal.~> (s6989586621679210996 Data.Singletons.Internal.~> t6989586621679210997)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym1 a6989586621679215156)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym1 d)
instance forall a6989586621679210994 b6989586621679210995 s6989586621679210996 t6989586621679210997 (a6989586621679215157 :: (a6989586621679210994 Data.Singletons.Internal.~> b6989586621679210995) Data.Singletons.Internal.~> (s6989586621679210996 Data.Singletons.Internal.~> t6989586621679210997)) (a6989586621679215156 :: a6989586621679210994 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210995). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym2 a6989586621679215157 a6989586621679215156)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToSym0
instance forall r6989586621679210993 s6989586621679210991 a6989586621679210992 (a6989586621679215139 :: s6989586621679210991 Data.Singletons.Internal.~> a6989586621679210992). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym1 a6989586621679215139)
instance forall s a r (d :: s Data.Singletons.Internal.~> a). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym1 d)
instance forall r6989586621679210993 s6989586621679210991 a6989586621679210992 (a6989586621679215140 :: s6989586621679210991 Data.Singletons.Internal.~> a6989586621679210992) (a6989586621679215139 :: a6989586621679210992 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210993 a6989586621679210992). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym2 a6989586621679215140 a6989586621679215139)
instance forall s a r (d1 :: s Data.Singletons.Internal.~> a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.MkLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.MkLensSym0
instance forall b6989586621679210989 (f6989586621679210986 :: * -> *) t6989586621679210990 s6989586621679210987 a6989586621679210988 (a6989586621679215127 :: s6989586621679210987 Data.Singletons.Internal.~> a6989586621679210988). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym1 a6989586621679215127)
instance forall s a b t (f :: * -> *) (d :: s Data.Singletons.Internal.~> a). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym1 d)
instance forall (f6989586621679210986 :: * -> *) b6989586621679210989 t6989586621679210990 s6989586621679210987 a6989586621679210988 (a6989586621679215128 :: s6989586621679210987 Data.Singletons.Internal.~> a6989586621679210988) (a6989586621679215127 :: s6989586621679210987 Data.Singletons.Internal.~> (b6989586621679210989 Data.Singletons.Internal.~> t6989586621679210990)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym2 a6989586621679215128 a6989586621679215127)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym2 d1 d2)
instance forall (f6989586621679210986 :: * -> *) b6989586621679210989 t6989586621679210990 s6989586621679210987 a6989586621679210988 (a6989586621679215129 :: s6989586621679210987 Data.Singletons.Internal.~> a6989586621679210988) (a6989586621679215128 :: s6989586621679210987 Data.Singletons.Internal.~> (b6989586621679210989 Data.Singletons.Internal.~> t6989586621679210990)) (a6989586621679215127 :: a6989586621679210988 Data.Singletons.Internal.~> f6989586621679210986 b6989586621679210989). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym3 a6989586621679215129 a6989586621679215128 a6989586621679215127)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)) (d3 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2, Data.Singletons.Internal.SingI d3) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym3 d1 d2 d3)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToListOfSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToListOfSym0
instance forall a6989586621679210984 s6989586621679210985 (a6989586621679215107 :: (a6989586621679210984 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679210984] a6989586621679210984) Data.Singletons.Internal.~> (s6989586621679210985 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679210984] s6989586621679210985)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToListOfSym1 a6989586621679215107)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const [a] a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const [a] s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToListOfSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.UnsafePreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.UnsafePreviewSym0
instance forall a6989586621679210980 s6989586621679210981 (a6989586621679215094 :: (a6989586621679210980 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210980) a6989586621679210980) Data.Singletons.Internal.~> (s6989586621679210981 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210980) s6989586621679210981)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.UnsafePreviewSym1 a6989586621679215094)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.UnsafePreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215100Scrutinee_6989586621679211109Sym0
instance forall a6989586621679210982 k1 (l6989586621679215098 :: (a6989586621679210982 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210982) a6989586621679210982) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210982) k1)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215100Scrutinee_6989586621679211109Sym1 l6989586621679215098)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.PreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.PreviewSym0
instance forall a6989586621679210982 s6989586621679210983 (a6989586621679215081 :: (a6989586621679210982 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210982) a6989586621679210982) Data.Singletons.Internal.~> (s6989586621679210983 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210982) s6989586621679210983)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.PreviewSym1 a6989586621679215081)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.PreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldingSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldingSym0
instance forall r6989586621679210977 s6989586621679210978 (f6989586621679210976 :: * -> *) a6989586621679210979 (a6989586621679215064 :: s6989586621679210978 Data.Singletons.Internal.~> f6989586621679210976 a6989586621679210979). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym1 a6989586621679215064)
instance forall s (f :: * -> *) a r (d :: s Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym1 d)
instance forall r6989586621679210977 s6989586621679210978 (f6989586621679210976 :: * -> *) a6989586621679210979 (a6989586621679215065 :: s6989586621679210978 Data.Singletons.Internal.~> f6989586621679210976 a6989586621679210979) (a6989586621679215064 :: a6989586621679210979 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210977 a6989586621679210979). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym2 a6989586621679215065 a6989586621679215064)
instance forall s (f :: * -> *) a r (d1 :: s Data.Singletons.Internal.~> f a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldedSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldedSym0
instance forall (f6989586621679210973 :: * -> *) r6989586621679210974 a6989586621679210975 (a6989586621679215051 :: a6989586621679210975 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210974 a6989586621679210975). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldedSym1 a6989586621679215051)
instance forall a r (f :: * -> *) (d :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldedSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneLensSym0
instance forall (f6989586621679210968 :: * -> *) s6989586621679210971 a6989586621679210969 b6989586621679210970 t6989586621679210972 (a6989586621679215025 :: (a6989586621679210969 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679210969 b6989586621679210970 b6989586621679210970) Data.Singletons.Internal.~> (s6989586621679210971 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679210969 b6989586621679210970 t6989586621679210972)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym1 a6989586621679215025)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym1 d)
instance forall (f6989586621679210968 :: * -> *) s6989586621679210971 a6989586621679210969 b6989586621679210970 t6989586621679210972 (a6989586621679215026 :: (a6989586621679210969 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679210969 b6989586621679210970 b6989586621679210970) Data.Singletons.Internal.~> (s6989586621679210971 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679210969 b6989586621679210970 t6989586621679210972)) (a6989586621679215025 :: a6989586621679210969 Data.Singletons.Internal.~> f6989586621679210968 b6989586621679210970). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym2 a6989586621679215026 a6989586621679215025)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneTraversalSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneTraversalSym0
instance forall (f6989586621679210963 :: * -> *) s6989586621679210966 a6989586621679210964 b6989586621679210965 t6989586621679210967 (a6989586621679215008 :: (a6989586621679210964 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679210964 b6989586621679210965 b6989586621679210965) Data.Singletons.Internal.~> (s6989586621679210966 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679210964 b6989586621679210965 t6989586621679210967)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym1 a6989586621679215008)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym1 d)
instance forall (f6989586621679210963 :: * -> *) s6989586621679210966 a6989586621679210964 b6989586621679210965 t6989586621679210967 (a6989586621679215009 :: (a6989586621679210964 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679210964 b6989586621679210965 b6989586621679210965) Data.Singletons.Internal.~> (s6989586621679210966 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679210964 b6989586621679210965 t6989586621679210967)) (a6989586621679215008 :: a6989586621679210964 Data.Singletons.Internal.~> f6989586621679210963 b6989586621679210965). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym2 a6989586621679215009 a6989586621679215008)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L1Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L1Sym0
instance forall c6989586621679210961 a6989586621679210960 (f6989586621679210959 :: * -> *) b6989586621679210962 (a6989586621679214993 :: a6989586621679210960 Data.Singletons.Internal.~> f6989586621679210959 b6989586621679210962). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L1Sym1 a6989586621679214993)
instance forall a (f :: * -> *) b c (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L1Sym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L2Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L2Sym0
instance forall a6989586621679210956 b6989586621679210957 (f6989586621679210955 :: * -> *) c6989586621679210958 (a6989586621679214978 :: b6989586621679210957 Data.Singletons.Internal.~> f6989586621679210955 c6989586621679210958). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L2Sym1 a6989586621679214978)
instance forall b (f :: * -> *) c a (d :: b Data.Singletons.Internal.~> f c). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L2Sym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679215225Sym0
instance forall k1 k2 k3 k4 (l6989586621679215222 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215225Sym1 l6989586621679215222)
instance forall k1 k2 k3 k4 (y6989586621679215223 :: k4) (l6989586621679215222 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215225Sym2 y6989586621679215223 l6989586621679215222)
instance forall k1 k2 k3 k4 (a_69895866216792152206989586621679215224 :: k4) (y6989586621679215223 :: k3) (l6989586621679215222 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215225Sym3 a_69895866216792152206989586621679215224 y6989586621679215223 l6989586621679215222)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215206Scrutinee_6989586621679211077Sym0
instance forall a6989586621679919356 b6989586621679919354 k1 k (l6989586621679215203 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215206Scrutinee_6989586621679211077Sym1 l6989586621679215203)
instance forall a6989586621679919356 b6989586621679919354 k1 k (f6989586621679215204 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)) (l6989586621679215203 :: a6989586621679919356 Data.Singletons.Internal.~> b6989586621679919354). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215206Scrutinee_6989586621679211077Sym2 f6989586621679215204 l6989586621679215203)
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215190Scrutinee_6989586621679211082Sym0
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679215188 :: (Data.Singletons.Internal.TyFun a6989586621679095349 (Data.Functor.Const.Const a6989586621679095349 b6989586621679095350) -> *) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215190Scrutinee_6989586621679211082Sym1 l6989586621679215188)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679215167Sym0
instance forall k1 k2 k3 k4 (f6989586621679215164 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215167Sym1 f6989586621679215164)
instance forall k1 k2 k3 k4 (g6989586621679215165 :: k4) (f6989586621679215164 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215167Sym2 g6989586621679215165 f6989586621679215164)
instance forall k1 k2 k3 k4 (a_69895866216792151626989586621679215166 :: k4) (g6989586621679215165 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3) (f6989586621679215164 :: k1). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215167Sym3 a_69895866216792151626989586621679215166 g6989586621679215165 f6989586621679215164)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215170Scrutinee_6989586621679211087Sym0
instance forall k1 k2 k3 k4 (f6989586621679215164 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215170Scrutinee_6989586621679211087Sym1 f6989586621679215164)
instance forall k1 k2 k3 k4 (g6989586621679215165 :: k4) (f6989586621679215164 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215170Scrutinee_6989586621679211087Sym2 g6989586621679215165 f6989586621679215164)
instance forall k1 k2 k3 k4 (x6989586621679215169 :: k4) (g6989586621679215165 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679215164 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215170Scrutinee_6989586621679211087Sym3 x6989586621679215169 g6989586621679215165 f6989586621679215164)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215148Scrutinee_6989586621679211090Sym0
instance forall k k2 k3 (f6989586621679215145 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215148Scrutinee_6989586621679211090Sym1 f6989586621679215145)
instance forall k k2 k3 (g6989586621679215146 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679215145 :: k3 Data.Singletons.Internal.~> k). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215148Scrutinee_6989586621679211090Sym2 g6989586621679215146 f6989586621679215145)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215113Scrutinee_6989586621679211095Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679215111 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679919356] b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215113Scrutinee_6989586621679211095Sym1 l6989586621679215111)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679215114Sym0
instance forall k1 k2 k3 (l6989586621679215111 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215114Sym1 l6989586621679215111)
instance forall k1 k2 k3 (x6989586621679215112 :: k3) (l6989586621679215111 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215114Sym2 x6989586621679215112 l6989586621679215111)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215087Scrutinee_6989586621679211102Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679215085 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679919356) b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215087Scrutinee_6989586621679211102Sym1 l6989586621679215085)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215073Scrutinee_6989586621679211115Sym0
instance forall b6989586621680695205 (f6989586621680695203 :: * -> *) k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621679215070 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215073Scrutinee_6989586621679211115Sym1 f6989586621679215070)
instance forall (f6989586621680695203 :: * -> *) b6989586621680695205 k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (g6989586621679215071 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204) (f6989586621679215070 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215073Scrutinee_6989586621679211115Sym2 g6989586621679215071 f6989586621679215070)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215057Scrutinee_6989586621679211120Sym0
instance forall (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621680695203 :: * -> *) b6989586621680695205 (f6989586621679215055 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215057Scrutinee_6989586621679211120Sym1 f6989586621679215055)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679215034Scrutinee_6989586621679211125Sym0
instance forall k2 k3 t k4 k (l6989586621679215031 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215034Scrutinee_6989586621679211125Sym1 l6989586621679215031)
instance forall k2 k3 t k4 k (f6989586621679215032 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)) (l6989586621679215031 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679215034Scrutinee_6989586621679211125Sym2 f6989586621679215032 l6989586621679215031)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679215035Sym0
instance forall k1 k2 k3 t k4 (l6989586621679215031 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215035Sym1 l6989586621679215031)
instance forall k1 k2 t k3 k4 (f6989586621679215032 :: k4) (l6989586621679215031 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215035Sym2 f6989586621679215032 l6989586621679215031)
instance forall k1 t k2 k3 k4 (x6989586621679215033 :: k4) (f6989586621679215032 :: k3) (l6989586621679215031 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215035Sym3 x6989586621679215033 f6989586621679215032 l6989586621679215031)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679215017Sym0
instance forall k1 k2 k3 t k4 (l6989586621679215014 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215017Sym1 l6989586621679215014)
instance forall k1 k2 t k3 k4 (f6989586621679215015 :: k4) (l6989586621679215014 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215017Sym2 f6989586621679215015 l6989586621679215014)
instance forall k1 t k2 k3 k4 (xs6989586621679215016 :: k4) (f6989586621679215015 :: k3) (l6989586621679215014 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215017Sym3 xs6989586621679215016 f6989586621679215015 l6989586621679215014)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679215000Sym0
instance forall k2 k3 k4 k5 (f6989586621679214997 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215000Sym1 f6989586621679214997)
instance forall k2 k3 k4 k5 (x6989586621679214998 :: k5) (f6989586621679214997 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215000Sym2 x6989586621679214998 f6989586621679214997)
instance forall k2 k3 k4 k5 (y6989586621679214999 :: k5) (x6989586621679214998 :: k4) (f6989586621679214997 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679215000Sym3 y6989586621679214999 x6989586621679214998 f6989586621679214997)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214985Sym0
instance forall k2 k3 k4 k5 (f6989586621679214982 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214985Sym1 f6989586621679214982)
instance forall k2 k3 k4 k5 (x6989586621679214983 :: k5) (f6989586621679214982 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214985Sym2 x6989586621679214983 f6989586621679214982)
instance forall k2 k3 k4 k5 (y6989586621679214984 :: k5) (x6989586621679214983 :: k4) (f6989586621679214982 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214985Sym3 y6989586621679214984 x6989586621679214983 f6989586621679214982)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ShowsPrec_6989586621679208339Sym0
instance Data.Singletons.Prelude.Show.PShow Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ShowsPrec_6989586621679208339Sym1 a6989586621679208336)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ShowsPrec_6989586621679208339Sym2 a6989586621679208337 a6989586621679208336)
instance Data.Singletons.Prelude.Show.SShow Data.Type.Lens.N => Data.Singletons.Prelude.Show.SShow Data.Type.Lens.N
instance Data.Singletons.Decide.SDecide Data.Type.Lens.N => Data.Singletons.Decide.SDecide Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Compare_6989586621679206559Sym0
instance Data.Singletons.Prelude.Ord.POrd Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Compare_6989586621679206559Sym1 a6989586621679206557)
instance Data.Singletons.Prelude.Ord.SOrd Data.Type.Lens.N => Data.Singletons.Prelude.Ord.SOrd Data.Type.Lens.N
instance Data.Singletons.Prelude.Eq.PEq Data.Type.Lens.N
instance Data.Singletons.Prelude.Eq.SEq Data.Type.Lens.N => Data.Singletons.Prelude.Eq.SEq Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.GettingSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym1 r6989586621679201101)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym2 s6989586621679201102 r6989586621679201101)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ASetterSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym1 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym2 t6989586621679201105 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym3 a6989586621679201106 t6989586621679201105 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLike'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym1 f6989586621679201108)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym2 s6989586621679201109 f6989586621679201108)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLikeSym0
instance forall k6989586621679201126 (f6989586621679201111 :: k6989586621679201126 -> *). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym1 f6989586621679201111)
instance forall k6989586621679201126 (s6989586621679201112 :: k6989586621679201126 -> *) f6989586621679201111. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym2 s6989586621679201112 f6989586621679201111)
instance forall k6989586621679201126 (t6989586621679201113 :: k6989586621679201126 -> *) s6989586621679201112 (f6989586621679201111 :: k6989586621679201126). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym3 t6989586621679201113 s6989586621679201112 f6989586621679201111)
instance forall k6989586621679201126 (a6989586621679201114 :: k6989586621679201126 -> *) t6989586621679201113 (s6989586621679201112 :: k6989586621679201126) f6989586621679201111. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym4 a6989586621679201114 t6989586621679201113 s6989586621679201112 f6989586621679201111)
instance Data.Singletons.Internal.SingKind Data.Type.Lens.N
instance Data.Singletons.Internal.SingI 'Data.Type.Lens.Z
instance Data.Singletons.Internal.SingI n => Data.Singletons.Internal.SingI ('Data.Type.Lens.S n)
instance Data.Singletons.Internal.SingI (Data.Singletons.Internal.TyCon1 'Data.Type.Lens.S)
instance GHC.Generics.Generic Data.Type.Lens.N
instance GHC.Read.Read Data.Type.Lens.N
instance GHC.Classes.Ord Data.Type.Lens.N
instance GHC.Classes.Eq Data.Type.Lens.N
instance GHC.Show.Show Data.Type.Lens.N


-- | See source for examples of using type-level lenses from
--   <a>Data.Type.Lens</a>.
module Data.Type.Lens.Example

-- | <pre>
--   &gt;&gt;&gt; :kind! SetExample
--   '( 'True, 6 )
--   </pre>
type SetExample = Set L1_  'True '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ViewExample
--   6
--   </pre>
type ViewExample = View L2_ '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ToExample
--   6
--   </pre>
type ToExample = View (To_ SndSym0) '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '( "hello", 'False )
--   </pre>
type OverExample = Over L2_ NotSym0 '("hello",  'True)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '[ 'False, 'True, 'True ]
--   </pre>
type TraversalExample = Over Traverse_ NotSym0 '[ 'True,  'False,  'False]

-- | <pre>
--   &gt;&gt;&gt; :kind! NestedExample
--   6
--   </pre>
type NestedExample = View (L2_ .@ L1_) '("hello", '(6,  'False))

-- | <pre>
--   &gt;&gt;&gt; :kind! FoldExample
--   '["hello", "world", "curry"]
--   </pre>
type FoldExample = ToListOf (Traverse_ .@ L1_) '['("hello",  'True), '("world",  'False), '("curry",  'False)]

-- | <pre>
--   &gt;&gt;&gt; :kind! UnsafeExample
--   Error "Failed indexing into empty traversal"
--   </pre>
type UnsafeExample = UnsafePreview Traverse_ '[]

-- | <pre>
--   &gt;&gt;&gt; :kind! IxExample
--   '["hello", "haskell", "curry"]
--   </pre>
type IxExample = Set (IxList_ ( 'S  'Z)) "haskell" '["hello", "world", "curry"]

-- | <pre>
--   &gt;&gt;&gt; :kind! CloneExample
--   "hello"
--   </pre>
type CloneExample = View (CloneLens_ L1_) '("hello", 6)
type SetExample' = '("hello", 6) & L1_ .~  'True
type ViewExample' = '("hello", 6) ^. L2_
type ToExample' = '("hello", 6) ^. To_ SndSym0
type OverExample' = '("hello",  'True) & L2_ %~ NotSym0
type TraversalExample' = '[ 'True,  'False,  'False] & Traverse_ %~ NotSym0
type NestedExample' = '("hello", '(6,  'False)) ^. L2_ .@ L1_
type FoldExample' = '['("hello",  'True), '("world",  'False), '("curry",  'False)] ^.. Traverse_ .@ L1_
type IxExample' = '["hello", "world", "curry"] & IxList_ ( 'S  'Z) .~ "haskell"
type UnsafeExample' = '[] ^?! Traverse_
type CloneExample' = '("hello", 6) ^. CloneLens_ L1_
