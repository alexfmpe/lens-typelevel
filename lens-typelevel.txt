-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Type-level lenses using singletons
--   
--   Type-level lenses using singletons and its defunctionalization system,
--   implemented using the same van Laarhoven encoding as the <i>lens</i>
--   package. See README for more information.
@package lens-typelevel
@version 0.1.1.0

module Data.Type.Lens.Internal

-- | A partially applied lens
data Context a b t
MkContext :: (b ~> t) -> a -> Context a b t

-- | A partially applied traversal
data Bazaar a b t
Done :: t -> Bazaar a b t
More :: a -> Bazaar a b (b ~> t) -> Bazaar a b t
type family UnBazaar (a_aEDy :: (~>) a_aEoX (f_aEoW b_aEoY)) (a_aEDz :: Bazaar a_aEoX b_aEoY t_aEoZ) :: f_aEoW t_aEoZ
sUnBazaar :: forall f_aEoW a_aEoX b_aEoY t_aEoZ (t_aEEm :: (~>) a_aEoX (f_aEoW b_aEoY)) (t_aEEn :: Bazaar a_aEoX b_aEoY t_aEoZ). SApplicative f_aEoW => Sing t_aEEm -> Sing t_aEEn -> Sing (Apply (Apply UnBazaarSym0 t_aEEm) t_aEEn :: f_aEoW t_aEoZ)

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
type MkContextSym0 = TyCon2  'MkContext
type MkContextSym1 f = TyCon1 ( 'MkContext f)
type MkContextSym2 f x =  'MkContext f x
type DoneSym0 = TyCon1  'Done
type DoneSym1 x =  'Done x
type MoreSym0 = TyCon2  'More
type MoreSym1 x = TyCon1 ( 'More x)
type MoreSym2 x b =  'More x b
data UnBazaarSym0 :: forall a6989586621679165099 b6989586621679165100 f6989586621679165098 t6989586621679165101. (~>) ((~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) ((~>) (Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) (f6989586621679165098 t6989586621679165101))
data UnBazaarSym1 (a6989586621679166004 :: (~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) :: forall t6989586621679165101. (~>) (Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) (f6989586621679165098 t6989586621679165101)
type UnBazaarSym2 (a6989586621679166004 :: (~>) a6989586621679165099 (f6989586621679165098 b6989586621679165100)) (a6989586621679166005 :: Bazaar a6989586621679165099 b6989586621679165100 t6989586621679165101) = UnBazaar a6989586621679166004 a6989586621679166005
instance forall a6989586621679165105 b6989586621679165106 t6989586621679165102 r6989586621679165103 s6989586621679165104 (a6989586621679166027 :: t6989586621679165102 Data.Singletons.Internal.~> (r6989586621679165103 Data.Singletons.Internal.~> s6989586621679165104)) (a6989586621679166026 :: Data.Type.Lens.Internal.Bazaar a6989586621679165105 b6989586621679165106 t6989586621679165102). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym2 a6989586621679166027 a6989586621679166026)
instance forall a6989586621679165105 b6989586621679165106 t6989586621679165102 r6989586621679165103 s6989586621679165104 (a6989586621679166026 :: t6989586621679165102 Data.Singletons.Internal.~> (r6989586621679165103 Data.Singletons.Internal.~> s6989586621679165104)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.LiftA2BazaarSym1 a6989586621679166026)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.LiftA2BazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.LiftA2BazaarSym0
instance forall t r s a b (d :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym1 d)
instance forall t r s a b (d1 :: t Data.Singletons.Internal.~> (r Data.Singletons.Internal.~> s)) (d2 :: Data.Type.Lens.Internal.Bazaar a b t). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.LiftA2BazaarSym2 d1 d2)
instance Data.Singletons.Prelude.Monad.Internal.PApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance forall a6989586621679165112 b6989586621679165113 t6989586621679165110 q6989586621679165111 (a6989586621679166017 :: t6989586621679165110 Data.Singletons.Internal.~> q6989586621679165111). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapBazaarSym1 a6989586621679166017)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapBazaarSym0
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapBazaarSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.PureBazaarSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.PureBazaarSym0
instance forall t6989586621679165101 a6989586621679165099 (f6989586621679165098 :: * -> *) b6989586621679165100 (a6989586621679166004 :: a6989586621679165099 Data.Singletons.Internal.~> f6989586621679165098 b6989586621679165100). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.UnBazaarSym1 a6989586621679166004)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.UnBazaarSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.Internal.UnBazaarSym0
instance forall a (f :: * -> *) b t (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.UnBazaarSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.Lambda_6989586621679166039Sym0
instance forall k2 k3 k4 k5 k6 k7 k8 (f6989586621679166035 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym1 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (x6989586621679166036 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (f6989586621679166035 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym2 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (b6989586621679166037 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (x6989586621679166036 :: k5) (f6989586621679166035 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym3 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (c6989586621679166038 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (b6989586621679166037 :: k5) (x6989586621679166036 :: k4) (f6989586621679166035 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym4 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166044 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (c6989586621679166038 :: k5) (b6989586621679166037 :: k4) (x6989586621679166036 :: k3) (f6989586621679166035 :: k2 Data.Singletons.Internal.~> k6). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym5 t6989586621679166044 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance forall k2 k3 k4 k5 k6 k7 k8 (t6989586621679166045 :: k6 Data.Singletons.Internal.~> (k7 Data.Singletons.Internal.~> k8)) (t6989586621679166044 :: k5) (c6989586621679166038 :: k4) (b6989586621679166037 :: k3) (x6989586621679166036 :: k2 Data.Singletons.Internal.~> k6) (f6989586621679166035 :: k7). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.Lambda_6989586621679166039Sym6 t6989586621679166045 t6989586621679166044 c6989586621679166038 b6989586621679166037 x6989586621679166036 f6989586621679166035)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.Prelude.Monad.Internal.SApplicative (Data.Type.Lens.Internal.Bazaar a b)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Internal.FmapContextSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.Internal.FmapContextSym0
instance forall a6989586621679159061 b6989586621679159062 t6989586621679159059 q6989586621679159060 (a6989586621679159106 :: t6989586621679159059 Data.Singletons.Internal.~> q6989586621679159060). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Internal.FmapContextSym1 a6989586621679159106)
instance forall t q a b (d :: t Data.Singletons.Internal.~> q). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.Internal.FmapContextSym1 d)
instance Data.Singletons.Prelude.Monad.Internal.PFunctor (Data.Type.Lens.Internal.Context a b)
instance Data.Singletons.Prelude.Monad.Internal.SFunctor (Data.Type.Lens.Internal.Context a b)


-- | Lenses and optics for manipulating DataKind-based types, powered by
--   <i>singletons</i> defunctionalization.
--   
--   See <a>Data.Type.Lens.Examples</a> for example usage and syntax.
--   
--   For the most part, you should be able to use them just like you'd use
--   the functions from the <i>lens</i> or <i>microlens</i> libraries; just
--   remember to capitalize names like <a>Over</a> and <a>Set</a>, since
--   they are type families.
--   
--   Note that the ways of "creating" a lens or optic (<a>Sets_</a>,
--   <a>Traverse_</a>, <a>To_</a>, <a>MkLens_</a>, etc. are all suffixed
--   with <tt>_</tt> for convenience, to reserve the underscoreless
--   identifiers for the fully applied type family as per <i>singletons</i>
--   library convention.
module Data.Type.Lens

-- | The general shape of optics in this library. ("van Laarhoven")
--   
--   For different levels of polymorphism on <tt>f</tt>, you get different
--   types of optics:
--   
--   <ul>
--   <li>If <tt>f</tt> can be any <a>Functor</a>, you have a Lens (see
--   <a>ALens</a>)</li>
--   <li>If <tt>f</tt> is only <a>Identity</a>, you have a setter (see
--   <a>ASetter</a>)</li>
--   <li>If <tt>f</tt> is only <tt><a>Const</a> R</tt> for a specific
--   <tt>R</tt>, you have a getter of <tt>R</tt> (see <a>Getting</a>)</li>
--   <li>If <tt>f</tt> can be <tt><a>Const</a> r</tt> for any <a>Monoid</a>
--   <tt>r</tt>, you have a Fold.</li>
--   <li>If <tt>f</tt> can be any <a>Applicative</a>, you have a Traversal
--   (see <a>ATraversal</a>)</li>
--   </ul>
--   
--   Normal lens libraries implement the constraints for lenses, folds, and
--   traversals using RankN types, but we don't do that here to avoid
--   working with RankN kinds.
type LensLike f s t a b = (a -> f b) -> (s -> f t)

-- | A <a>LensLike</a> that does not change any types.
type LensLike' f s a = LensLike f s s a a

-- | A settable "lens". Usable with <a>Over</a> (<a>%~</a>), constructable
--   with <a>To</a> or any of the general lens constructors.
--   
--   See <a>LensLike</a> for more information.
type ASetter s t a b = LensLike Identity s t a b
type family Over (a_aRjJ :: (~>) ((~>) a_aQjc (Identity b_aQjd)) ((~>) s_aQja (Identity t_aQjb))) (a_aRjK :: (~>) a_aQjc b_aQjd) (a_aRjL :: s_aQja) :: t_aQjb

-- | Infix application of <a>Over</a>
type l %~ f = OverSym2 l f
infixr 4 %~
sOver :: forall s_aQja t_aQjb a_aQjc b_aQjd (t_aRlk :: (~>) ((~>) a_aQjc (Identity b_aQjd)) ((~>) s_aQja (Identity t_aQjb))) (t_aRll :: (~>) a_aQjc b_aQjd) (t_aRlm :: s_aQja). Sing t_aRlk -> Sing t_aRll -> Sing t_aRlm -> Sing (Apply (Apply (Apply OverSym0 t_aRlk) t_aRll) t_aRlm :: t_aQjb)
over :: ASetter s_aQja t_aQjb a_aQjc b_aQjd -> (a_aQjc -> b_aQjd) -> s_aQja -> t_aQjb
type family Set (a_aRk0 :: (~>) ((~>) a_aQj8 (Identity b_aQj9)) ((~>) s_aQj6 (Identity t_aQj7))) (a_aRk1 :: b_aQj9) (a_aRk2 :: s_aQj6) :: t_aQj7

-- | Infix application of <a>Set</a>
type l .~ x = SetSym2 l x
infixr 4 .~
sSet :: forall s_aQj6 t_aQj7 a_aQj8 b_aQj9 (t_aRlq :: (~>) ((~>) a_aQj8 (Identity b_aQj9)) ((~>) s_aQj6 (Identity t_aQj7))) (t_aRlr :: b_aQj9) (t_aRls :: s_aQj6). Sing t_aRlq -> Sing t_aRlr -> Sing t_aRls -> Sing (Apply (Apply (Apply SetSym0 t_aRlq) t_aRlr) t_aRls :: t_aQj7)
set :: ASetter s_aQj6 t_aQj7 a_aQj8 b_aQj9 -> b_aQj9 -> s_aQj6 -> t_aQj7

-- | Create a Setter from a setting function.
--   
--   <pre>
--   <a>Sets_</a> :: ((a ~&gt; b) ~&gt; (s ~&gt; t)) -&gt; <a>ASetter</a> s t a b
--   </pre>
type Sets_ f = SetsSym1 f
type family Sets (a_aRj4 :: (~>) ((~>) a_aQj0 b_aQj1) ((~>) s_aQj2 t_aQj3)) (a_aRj5 :: (~>) a_aQj0 (Identity b_aQj1)) (a_aRj6 :: s_aQj2) :: Identity t_aQj3
sSets :: forall a_aQj0 b_aQj1 s_aQj2 t_aQj3 (t_aRla :: (~>) ((~>) a_aQj0 b_aQj1) ((~>) s_aQj2 t_aQj3)) (t_aRlb :: (~>) a_aQj0 (Identity b_aQj1)) (t_aRlc :: s_aQj2). Sing t_aRla -> Sing t_aRlb -> Sing t_aRlc -> Sing (Apply (Apply (Apply SetsSym0 t_aRla) t_aRlb) t_aRlc :: Identity t_aQj3)
sets :: ((a_aQj0 -> b_aQj1) -> s_aQj2 -> t_aQj3) -> ASetter s_aQj2 t_aQj3 a_aQj0 b_aQj1

-- | A retrieving "lens". If <tt>r</tt> is fixed to a type, it's a Getter
--   for that type. If <tt>r</tt> is polymorphic over all <a>Monoid</a>,
--   then it's a Fold over <tt>a</tt>s.
--   
--   As a Getter, usable with <a>View</a> (<a>^.</a>); as a Fold, usable
--   with <a>ToListOf</a> (<a>^..</a>), <a>Preview</a> (<a>^?</a>), etc.
--   
--   Normal lens libraries implement the constraints for folds using RankN
--   types, but we don't do that here to avoid working with RankN kinds.
--   
--   See <a>LensLike</a> for more information.
type Getting r s a = LensLike (Const r) s s a a
type family View (a_aRjw :: (~>) ((~>) a_aQj4 ((Const a_aQj4 :: Type -> Type) a_aQj4)) ((~>) s_aQj5 ((Const a_aQj4 :: Type -> Type) s_aQj5))) (a_aRjx :: s_aQj5) :: a_aQj4

-- | Infix application of <a>View</a>
type x ^. l = View l x
infixl 8 ^.
sView :: forall a_aQj4 s_aQj5 (t_aRlg :: (~>) ((~>) a_aQj4 ((Const a_aQj4 :: Type -> Type) a_aQj4)) ((~>) s_aQj5 ((Const a_aQj4 :: Type -> Type) s_aQj5))) (t_aRlh :: s_aQj5). Sing t_aRlg -> Sing t_aRlh -> Sing (Apply (Apply ViewSym0 t_aRlg) t_aRlh :: a_aQj4)
view :: Getting a_aQj4 s_aQj5 a_aQj4 -> s_aQj5 -> a_aQj4

-- | Create a Getter from a getting function.
--   
--   <pre>
--   <a>To_</a> :: (a ~&gt; b) -&gt; <a>Getting</a> b a b
--   </pre>
type To_ f = ToSym1 f
type family To (a_aRiN :: (~>) s_aQiX a_aQiY) (a_aRiO :: (~>) a_aQiY ((Const r_aQiZ :: Type -> Type) a_aQiY)) (a_aRiP :: s_aQiX) :: (Const r_aQiZ :: Type -> Type) s_aQiX
sTo :: forall s_aQiX a_aQiY r_aQiZ (t_aRl4 :: (~>) s_aQiX a_aQiY) (t_aRl5 :: (~>) a_aQiY ((Const r_aQiZ :: Type -> Type) a_aQiY)) (t_aRl6 :: s_aQiX). Sing t_aRl4 -> Sing t_aRl5 -> Sing t_aRl6 -> Sing (Apply (Apply (Apply ToSym0 t_aRl4) t_aRl5) t_aRl6 :: (Const r_aQiZ :: Type -> Type) s_aQiX)
to :: (s_aQiX -> a_aQiY) -> Getting r_aQiZ s_aQiX a_aQiY

-- | If a function expects an <a>ALens</a>, it can be given any Lens (a
--   <tt><a>LensLike</a> f</tt> that works for any <a>Functor</a> f).
--   
--   You can use an <a>ALens</a> as a normal lens by using
--   <a>CloneLens_</a>.
type ALens s t a b = LensLike (Context a b) s t a b

-- | Create a Lens from a setter and a getter.
--   
--   <pre>
--   <a>MkLens_</a>
--       :: <a>Functor</a> f
--       =&gt; (s ~&gt; a)
--       -&gt; (s ~&gt; b ~&gt; t)
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
type MkLens_ f g = MkLensSym2 f g
type family MkLens (a_aRiB :: (~>) s_aQiT a_aQiU) (a_aRiC :: (~>) s_aQiT ((~>) b_aQiV t_aQiW)) (a_aRiD :: (~>) a_aQiU (f_aQiS b_aQiV)) (a_aRiE :: s_aQiT) :: f_aQiS t_aQiW
sMkLens :: forall f_aQiS s_aQiT a_aQiU b_aQiV t_aQiW (t_aRkW :: (~>) s_aQiT a_aQiU) (t_aRkX :: (~>) s_aQiT ((~>) b_aQiV t_aQiW)) (t_aRkY :: (~>) a_aQiU (f_aQiS b_aQiV)) (t_aRkZ :: s_aQiT). SFunctor f_aQiS => Sing t_aRkW -> Sing t_aRkX -> Sing t_aRkY -> Sing t_aRkZ -> Sing (Apply (Apply (Apply (Apply MkLensSym0 t_aRkW) t_aRkX) t_aRkY) t_aRkZ :: f_aQiS t_aQiW)
mkLens :: Functor f_aQiS => (s_aQiT -> a_aQiU) -> (s_aQiT -> b_aQiV -> t_aQiW) -> LensLike f_aQiS s_aQiT t_aQiW a_aQiU b_aQiV

-- | <a>Clone</a> a polymorphic lens so it can be used as more than one
--   type of thing (getter or setter).
--   
--   <pre>
--   <a>CloneLens_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Context a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a lens and uses it in more
--   than one way; if you have it take an <a>ALens</a>, you can then use
--   <a>CloneLens_</a> to use it as a getter or setter.
type CloneLens_ l = CloneLensSym1 l
type family CloneLens (a_aXph :: (~>) ((~>) a_aXjq (Context a_aXjq b_aXjr b_aXjr)) ((~>) s_aXjs (Context a_aXjq b_aXjr t_aXjt))) (a_aXpi :: (~>) a_aXjq (f_aXjp b_aXjr)) (a_aXpj :: s_aXjs) :: f_aXjp t_aXjt
sCloneLens :: forall f_aXjp a_aXjq b_aXjr s_aXjs t_aXjt (t_aXpN :: (~>) ((~>) a_aXjq (Context a_aXjq b_aXjr b_aXjr)) ((~>) s_aXjs (Context a_aXjq b_aXjr t_aXjt))) (t_aXpO :: (~>) a_aXjq (f_aXjp b_aXjr)) (t_aXpP :: s_aXjs). SFunctor f_aXjp => Sing t_aXpN -> Sing t_aXpO -> Sing t_aXpP -> Sing (Apply (Apply (Apply CloneLensSym0 t_aXpN) t_aXpO) t_aXpP :: f_aXjp t_aXjt)

-- | If a function expects an <a>ATraversal</a>, it can be given any
--   Traversal (a <tt><a>LensLike</a> f</tt> that works for any
--   <a>Applicative</a> f).
--   
--   You can use an <a>ATraversal</a> as a normal traversal by using
--   <a>CloneTraversal_</a>.
type ATraversal s t a b = LensLike (Bazaar a b) s t a b
type family Preview (a_aRhR :: (~>) ((~>) a_aQiO ((Const (First a_aQiO) :: Type -> Type) a_aQiO)) ((~>) s_aQiP ((Const (First a_aQiO) :: Type -> Type) s_aQiP))) (a_aRhS :: s_aQiP) :: Maybe a_aQiO

-- | Infix application of <a>Preview</a>
type x ^? l = Preview l x
infixl 8 ^?
sPreview :: forall a_aQiO s_aQiP (t_aRkK :: (~>) ((~>) a_aQiO ((Const (First a_aQiO) :: Type -> Type) a_aQiO)) ((~>) s_aQiP ((Const (First a_aQiO) :: Type -> Type) s_aQiP))) (t_aRkL :: s_aQiP). Sing t_aRkK -> Sing t_aRkL -> Sing (Apply (Apply PreviewSym0 t_aRkK) t_aRkL :: Maybe a_aQiO)
preview :: Getting (First a_aQiO) s_aQiP a_aQiO -> s_aQiP -> Maybe a_aQiO
type family ToListOf (a_aRih :: (~>) ((~>) a_aQiQ ((Const [a_aQiQ] :: Type -> Type) a_aQiQ)) ((~>) s_aQiR ((Const [a_aQiQ] :: Type -> Type) s_aQiR))) (a_aRii :: s_aQiR) :: [a_aQiQ]

-- | Infix application of <a>ToListOf</a>
type x ^.. l = ToListOf l x
infixl 8 ^..
sToListOf :: forall a_aQiQ s_aQiR (t_aRkS :: (~>) ((~>) a_aQiQ ((Const [a_aQiQ] :: Type -> Type) a_aQiQ)) ((~>) s_aQiR ((Const [a_aQiQ] :: Type -> Type) s_aQiR))) (t_aRkT :: s_aQiR). Sing t_aRkS -> Sing t_aRkT -> Sing (Apply (Apply ToListOfSym0 t_aRkS) t_aRkT :: [a_aQiQ])
toListOf :: Getting [a_aQiQ] s_aQiR a_aQiQ -> s_aQiR -> [a_aQiQ]
type family UnsafePreview (a_aRi4 :: (~>) ((~>) a_aQiM ((Const (First a_aQiM) :: Type -> Type) a_aQiM)) ((~>) s_aQiN ((Const (First a_aQiM) :: Type -> Type) s_aQiN))) (a_aRi5 :: s_aQiN) :: a_aQiM

-- | Infix application of <a>UnsafePreview</a>
type x ^?! l = UnsafePreview l x
infixl 8 ^?!
sUnsafePreview :: forall a_aQiM s_aQiN (t_aRkO :: (~>) ((~>) a_aQiM ((Const (First a_aQiM) :: Type -> Type) a_aQiM)) ((~>) s_aQiN ((Const (First a_aQiM) :: Type -> Type) s_aQiN))) (t_aRkP :: s_aQiN). Sing t_aRkO -> Sing t_aRkP -> Sing (Apply (Apply UnsafePreviewSym0 t_aRkO) t_aRkP :: a_aQiM)
unsafePreview :: Getting (First a_aQiM) s_aQiN a_aQiM -> s_aQiN -> a_aQiM

-- | Create a Fold from a "folding function":
--   
--   <pre>
--   <a>Folding_</a>
--       :: (<a>Foldable</a> f, <a>Monoid</a> r)
--       =&gt; (s ~&gt; f a)
--       -&gt; <a>Getting</a> r s a
--   </pre>
type Folding_ f = FoldingSym1 f
type family Folding (a_aRhA :: (~>) s_aQiK (f_aQiI a_aQiL)) (a_aRhB :: (~>) a_aQiL ((Const r_aQiJ :: Type -> Type) a_aQiL)) (a_aRhC :: s_aQiK) :: (Const r_aQiJ :: Type -> Type) s_aQiK
sFolding :: forall f_aQiI r_aQiJ s_aQiK a_aQiL (t_aRkE :: (~>) s_aQiK (f_aQiI a_aQiL)) (t_aRkF :: (~>) a_aQiL ((Const r_aQiJ :: Type -> Type) a_aQiL)) (t_aRkG :: s_aQiK). (SFoldable f_aQiI, SMonoid r_aQiJ) => Sing t_aRkE -> Sing t_aRkF -> Sing t_aRkG -> Sing (Apply (Apply (Apply FoldingSym0 t_aRkE) t_aRkF) t_aRkG :: (Const r_aQiJ :: Type -> Type) s_aQiK)
folding :: (Foldable f_aQiI, Monoid r_aQiJ) => (s_aQiK -> f_aQiI a_aQiL) -> Getting r_aQiJ s_aQiK a_aQiL

-- | The canonical Fold for any instance of <a>Foldable</a>.
--   
--   <pre>
--   <a>Folded_</a>
--       :: <a>Monoid</a> r
--       =&gt; <a>Getting</a> r (t a) a
--   </pre>
type Folded_ = FoldedSym0
type family Folded (a_aRhn :: (~>) a_aQiH ((Const r_aQiG :: Type -> Type) a_aQiH)) (a_aRho :: f_aQiF a_aQiH) :: (Const r_aQiG :: Type -> Type) (f_aQiF a_aQiH)
sFolded :: forall f_aQiF r_aQiG a_aQiH (t_aRkA :: (~>) a_aQiH ((Const r_aQiG :: Type -> Type) a_aQiH)) (t_aRkB :: f_aQiF a_aQiH). (SFoldable f_aQiF, SMonoid r_aQiG) => Sing t_aRkA -> Sing t_aRkB -> Sing (Apply (Apply FoldedSym0 t_aRkA) t_aRkB :: (Const r_aQiG :: Type -> Type) (f_aQiF a_aQiH))
folded :: (Foldable f_aQiF, Monoid r_aQiG) => Getting r_aQiG (f_aQiF a_aQiH) a_aQiH

-- | The canonical Traversal for any instance of <a>Traversable</a>.
--   
--   <pre>
--   <a>Traverse_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>LensLike</a> f (t a) (t b) a b
--   </pre>
type Traverse_ = TraverseSym0
type family Traverse (arg :: a ~> f b) (arg1 :: t a) :: f t b
sTraverse :: (STraversable t, SApplicative f) => Sing t1 -> Sing t2 -> Sing (Apply (Apply (TraverseSym0 :: TyFun (a ~> f b) (t a ~> f (t b)) -> Type) t1) t2)

-- | Map each element of a structure to an action, evaluate these actions
--   from left to right, and collect the results. For a version that
--   ignores the results see <a>traverse_</a>.
traverse :: (Traversable t, Applicative f) => (a -> f b) -> t a -> f (t b)

-- | <a>Clone</a> a polymorphic traversal so it can be used as more than
--   one type of thing (fold, traversal, getter, setter...).
--   
--   <pre>
--   <a>CloneTraversal_</a>
--       :: <a>Functor</a> f
--       =&gt; <a>LensLike</a> (Bazaar a b) s t a b
--       -&gt; <a>LensLike</a> f s t a b
--   </pre>
--   
--   Useful for writing a function that takes a traversal and uses it in
--   more than one way; if you have it take an <a>ATraversal</a>, you can
--   then use <a>CloneTraversal_</a> to use it as a fold or traversal or
--   anything else.
type CloneTraversal_ l = CloneTraversalSym1 l
type family CloneTraversal (a_aXp0 :: (~>) ((~>) a_aXjl (Bazaar a_aXjl b_aXjm b_aXjm)) ((~>) s_aXjn (Bazaar a_aXjl b_aXjm t_aXjo))) (a_aXp1 :: (~>) a_aXjl (f_aXjk b_aXjm)) (a_aXp2 :: s_aXjn) :: f_aXjk t_aXjo
sCloneTraversal :: forall f_aXjk a_aXjl b_aXjm s_aXjn t_aXjo (t_aXpH :: (~>) ((~>) a_aXjl (Bazaar a_aXjl b_aXjm b_aXjm)) ((~>) s_aXjn (Bazaar a_aXjl b_aXjm t_aXjo))) (t_aXpI :: (~>) a_aXjl (f_aXjk b_aXjm)) (t_aXpJ :: s_aXjn). SApplicative f_aXjk => Sing t_aXpH -> Sing t_aXpI -> Sing t_aXpJ -> Sing (Apply (Apply (Apply CloneTraversalSym0 t_aXpH) t_aXpI) t_aXpJ :: f_aXjk t_aXjo)

-- | Lens into the first field of a tuple
type L1_ = L1Sym0
type family L1 (a_aRh8 :: (~>) a_aQiC (f_aQiB b_aQiE)) (a_aRh9 :: (a_aQiC, c_aQiD)) :: f_aQiB (b_aQiE, c_aQiD)
sL1 :: forall f_aQiB a_aQiC c_aQiD b_aQiE (t_aRkw :: (~>) a_aQiC (f_aQiB b_aQiE)) (t_aRkx :: (a_aQiC, c_aQiD)). SFunctor f_aQiB => Sing t_aRkw -> Sing t_aRkx -> Sing (Apply (Apply L1Sym0 t_aRkw) t_aRkx :: f_aQiB (b_aQiE, c_aQiD))
l1 :: Functor f_aQiB => LensLike f_aQiB (a_aQiC, c_aQiD) (b_aQiE, c_aQiD) a_aQiC b_aQiE

-- | Lens into the second field of a tuple
type L2_ = L2Sym0
type family L2 (a_aRgT :: (~>) b_aQiz (f_aQix c_aQiA)) (a_aRgU :: (a_aQiy, b_aQiz)) :: f_aQix (a_aQiy, c_aQiA)
sL2 :: forall f_aQix a_aQiy b_aQiz c_aQiA (t_aRks :: (~>) b_aQiz (f_aQix c_aQiA)) (t_aRkt :: (a_aQiy, b_aQiz)). SFunctor f_aQix => Sing t_aRks -> Sing t_aRkt -> Sing (Apply (Apply L2Sym0 t_aRks) t_aRkt :: f_aQix (a_aQiy, c_aQiA))
l2 :: Functor f_aQix => LensLike f_aQix (a_aQiy, b_aQiz) (a_aQiy, c_aQiA) b_aQiz c_aQiA

-- | Peano nats, used for implementation of list index traversals in a
--   termination-sane way.
data N
Z :: N
S :: N -> N
type SN = (Sing :: N -> Type)

-- | <tt><a>IxList</a> i</tt> is a Traversal into the i-th item into a
--   list. Defined in terms of <a>N</a> to allow for sane termination
--   guaruntees.
--   
--   <pre>
--   <a>IxList_</a>
--       :: <a>Applicative</a> f
--       =&gt; <a>N</a>
--       -&gt; <a>LensLike'</a> f [a] a
--   </pre>
type IxList_ i = IxListSym1 i
type family IxList (a_aRgy :: N) (a_aRgz :: (~>) a_aQiw (f_aQiv a_aQiw)) (a_aRgA :: [a_aQiw]) :: f_aQiv [a_aQiw]
sIxList :: forall f_aQiv a_aQiw (t_aRkm :: N) (t_aRkn :: (~>) a_aQiw (f_aQiv a_aQiw)) (t_aRko :: [a_aQiw]). SApplicative f_aQiv => Sing t_aRkm -> Sing t_aRkn -> Sing t_aRko -> Sing (Apply (Apply (Apply IxListSym0 t_aRkm) t_aRkn) t_aRko :: f_aQiv [a_aQiw])
ixList :: Applicative f_aQiv => N -> LensLike' f_aQiv [a_aQiw] a_aQiw

-- | Shorter name for type-level function composition
type f .@ g = f .@#@$$$ g
infixr 9 .@

-- | The singleton kind-indexed data family.
data family Sing (a :: k) :: Type
data ASetterSym0 s6989586621679201104
data ASetterSym1 (s6989586621679201104 :: Type) t6989586621679201105
data ASetterSym2 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) a6989586621679201106
data ASetterSym3 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) (a6989586621679201106 :: Type) b6989586621679201107
type ASetterSym4 (s6989586621679201104 :: Type) (t6989586621679201105 :: Type) (a6989586621679201106 :: Type) (b6989586621679201107 :: Type) = ASetter s6989586621679201104 t6989586621679201105 a6989586621679201106 b6989586621679201107
data OverSym0 :: forall a6989586621679210870 b6989586621679210871 s6989586621679210868 t6989586621679210869. (~>) ((~>) ((~>) a6989586621679210870 (Identity b6989586621679210871)) ((~>) s6989586621679210868 (Identity t6989586621679210869))) ((~>) ((~>) a6989586621679210870 b6989586621679210871) ((~>) s6989586621679210868 t6989586621679210869))
data OverSym1 (a6989586621679214747 :: (~>) ((~>) a6989586621679210870 (Identity b6989586621679210871)) ((~>) s6989586621679210868 (Identity t6989586621679210869))) :: (~>) ((~>) a6989586621679210870 b6989586621679210871) ((~>) s6989586621679210868 t6989586621679210869)
data OverSym2 (a6989586621679214747 :: (~>) ((~>) a6989586621679210870 (Identity b6989586621679210871)) ((~>) s6989586621679210868 (Identity t6989586621679210869))) (a6989586621679214748 :: (~>) a6989586621679210870 b6989586621679210871) :: (~>) s6989586621679210868 t6989586621679210869
type OverSym3 (a6989586621679214747 :: (~>) ((~>) a6989586621679210870 (Identity b6989586621679210871)) ((~>) s6989586621679210868 (Identity t6989586621679210869))) (a6989586621679214748 :: (~>) a6989586621679210870 b6989586621679210871) (a6989586621679214749 :: s6989586621679210868) = Over a6989586621679214747 a6989586621679214748 a6989586621679214749
data SetSym0 :: forall a6989586621679210866 b6989586621679210867 s6989586621679210864 t6989586621679210865. (~>) ((~>) ((~>) a6989586621679210866 (Identity b6989586621679210867)) ((~>) s6989586621679210864 (Identity t6989586621679210865))) ((~>) b6989586621679210867 ((~>) s6989586621679210864 t6989586621679210865))
data SetSym1 (a6989586621679214764 :: (~>) ((~>) a6989586621679210866 (Identity b6989586621679210867)) ((~>) s6989586621679210864 (Identity t6989586621679210865))) :: (~>) b6989586621679210867 ((~>) s6989586621679210864 t6989586621679210865)
data SetSym2 (a6989586621679214764 :: (~>) ((~>) a6989586621679210866 (Identity b6989586621679210867)) ((~>) s6989586621679210864 (Identity t6989586621679210865))) (a6989586621679214765 :: b6989586621679210867) :: (~>) s6989586621679210864 t6989586621679210865
type SetSym3 (a6989586621679214764 :: (~>) ((~>) a6989586621679210866 (Identity b6989586621679210867)) ((~>) s6989586621679210864 (Identity t6989586621679210865))) (a6989586621679214765 :: b6989586621679210867) (a6989586621679214766 :: s6989586621679210864) = Set a6989586621679214764 a6989586621679214765 a6989586621679214766
data SetsSym0 :: forall a6989586621679210858 b6989586621679210859 s6989586621679210860 t6989586621679210861. (~>) ((~>) ((~>) a6989586621679210858 b6989586621679210859) ((~>) s6989586621679210860 t6989586621679210861)) ((~>) ((~>) a6989586621679210858 (Identity b6989586621679210859)) ((~>) s6989586621679210860 (Identity t6989586621679210861)))
data SetsSym1 (a6989586621679214706 :: (~>) ((~>) a6989586621679210858 b6989586621679210859) ((~>) s6989586621679210860 t6989586621679210861)) :: (~>) ((~>) a6989586621679210858 (Identity b6989586621679210859)) ((~>) s6989586621679210860 (Identity t6989586621679210861))
data SetsSym2 (a6989586621679214706 :: (~>) ((~>) a6989586621679210858 b6989586621679210859) ((~>) s6989586621679210860 t6989586621679210861)) (a6989586621679214707 :: (~>) a6989586621679210858 (Identity b6989586621679210859)) :: (~>) s6989586621679210860 (Identity t6989586621679210861)
type SetsSym3 (a6989586621679214706 :: (~>) ((~>) a6989586621679210858 b6989586621679210859) ((~>) s6989586621679210860 t6989586621679210861)) (a6989586621679214707 :: (~>) a6989586621679210858 (Identity b6989586621679210859)) (a6989586621679214708 :: s6989586621679210860) = Sets a6989586621679214706 a6989586621679214707 a6989586621679214708
data GettingSym0 r6989586621679201101
data GettingSym1 (r6989586621679201101 :: Type) s6989586621679201102
data GettingSym2 (r6989586621679201101 :: Type) (s6989586621679201102 :: Type) a6989586621679201103
type GettingSym3 (r6989586621679201101 :: Type) (s6989586621679201102 :: Type) (a6989586621679201103 :: Type) = Getting r6989586621679201101 s6989586621679201102 a6989586621679201103
data ViewSym0 :: forall a6989586621679210862 s6989586621679210863. (~>) ((~>) ((~>) a6989586621679210862 ((Const a6989586621679210862 :: Type -> Type) a6989586621679210862)) ((~>) s6989586621679210863 ((Const a6989586621679210862 :: Type -> Type) s6989586621679210863))) ((~>) s6989586621679210863 a6989586621679210862)
data ViewSym1 (a6989586621679214734 :: (~>) ((~>) a6989586621679210862 ((Const a6989586621679210862 :: Type -> Type) a6989586621679210862)) ((~>) s6989586621679210863 ((Const a6989586621679210862 :: Type -> Type) s6989586621679210863))) :: (~>) s6989586621679210863 a6989586621679210862
type ViewSym2 (a6989586621679214734 :: (~>) ((~>) a6989586621679210862 ((Const a6989586621679210862 :: Type -> Type) a6989586621679210862)) ((~>) s6989586621679210863 ((Const a6989586621679210862 :: Type -> Type) s6989586621679210863))) (a6989586621679214735 :: s6989586621679210863) = View a6989586621679214734 a6989586621679214735
data ToSym0 :: forall a6989586621679210856 r6989586621679210857 s6989586621679210855. (~>) ((~>) s6989586621679210855 a6989586621679210856) ((~>) ((~>) a6989586621679210856 ((Const r6989586621679210857 :: Type -> Type) a6989586621679210856)) ((~>) s6989586621679210855 ((Const r6989586621679210857 :: Type -> Type) s6989586621679210855)))
data ToSym1 (a6989586621679214689 :: (~>) s6989586621679210855 a6989586621679210856) :: forall r6989586621679210857. (~>) ((~>) a6989586621679210856 ((Const r6989586621679210857 :: Type -> Type) a6989586621679210856)) ((~>) s6989586621679210855 ((Const r6989586621679210857 :: Type -> Type) s6989586621679210855))
data ToSym2 (a6989586621679214689 :: (~>) s6989586621679210855 a6989586621679210856) (a6989586621679214690 :: (~>) a6989586621679210856 ((Const r6989586621679210857 :: Type -> Type) a6989586621679210856)) :: (~>) s6989586621679210855 ((Const r6989586621679210857 :: Type -> Type) s6989586621679210855)
type ToSym3 (a6989586621679214689 :: (~>) s6989586621679210855 a6989586621679210856) (a6989586621679214690 :: (~>) a6989586621679210856 ((Const r6989586621679210857 :: Type -> Type) a6989586621679210856)) (a6989586621679214691 :: s6989586621679210855) = To a6989586621679214689 a6989586621679214690 a6989586621679214691
data ToListOfSym0 :: forall a6989586621679210848 s6989586621679210849. (~>) ((~>) ((~>) a6989586621679210848 ((Const [a6989586621679210848] :: Type -> Type) a6989586621679210848)) ((~>) s6989586621679210849 ((Const [a6989586621679210848] :: Type -> Type) s6989586621679210849))) ((~>) s6989586621679210849 [a6989586621679210848])
data ToListOfSym1 (a6989586621679214657 :: (~>) ((~>) a6989586621679210848 ((Const [a6989586621679210848] :: Type -> Type) a6989586621679210848)) ((~>) s6989586621679210849 ((Const [a6989586621679210848] :: Type -> Type) s6989586621679210849))) :: (~>) s6989586621679210849 [a6989586621679210848]
type ToListOfSym2 (a6989586621679214657 :: (~>) ((~>) a6989586621679210848 ((Const [a6989586621679210848] :: Type -> Type) a6989586621679210848)) ((~>) s6989586621679210849 ((Const [a6989586621679210848] :: Type -> Type) s6989586621679210849))) (a6989586621679214658 :: s6989586621679210849) = ToListOf a6989586621679214657 a6989586621679214658
data LensLikeSym0 f6989586621679201111
data LensLikeSym1 (f6989586621679201111 :: k6989586621679201126 -> Type) s6989586621679201112
data LensLikeSym2 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) t6989586621679201113
data LensLikeSym3 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) a6989586621679201114
data LensLikeSym4 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) (a6989586621679201114 :: Type) b6989586621679201115
type LensLikeSym5 (f6989586621679201111 :: k6989586621679201126 -> Type) (s6989586621679201112 :: Type) (t6989586621679201113 :: k6989586621679201126) (a6989586621679201114 :: Type) (b6989586621679201115 :: k6989586621679201126) = LensLike f6989586621679201111 s6989586621679201112 t6989586621679201113 a6989586621679201114 b6989586621679201115
data LensLike'Sym0 f6989586621679201108
data LensLike'Sym1 (f6989586621679201108 :: Type -> Type) s6989586621679201109
data LensLike'Sym2 (f6989586621679201108 :: Type -> Type) (s6989586621679201109 :: Type) a6989586621679201110
type LensLike'Sym3 (f6989586621679201108 :: Type -> Type) (s6989586621679201109 :: Type) (a6989586621679201110 :: Type) = LensLike' f6989586621679201108 s6989586621679201109 a6989586621679201110
data MkLensSym0 :: forall a6989586621679210852 b6989586621679210853 f6989586621679210850 s6989586621679210851 t6989586621679210854. (~>) ((~>) s6989586621679210851 a6989586621679210852) ((~>) ((~>) s6989586621679210851 ((~>) b6989586621679210853 t6989586621679210854)) ((~>) ((~>) a6989586621679210852 (f6989586621679210850 b6989586621679210853)) ((~>) s6989586621679210851 (f6989586621679210850 t6989586621679210854))))
data MkLensSym1 (a6989586621679214677 :: (~>) s6989586621679210851 a6989586621679210852) :: forall b6989586621679210853 f6989586621679210850 t6989586621679210854. (~>) ((~>) s6989586621679210851 ((~>) b6989586621679210853 t6989586621679210854)) ((~>) ((~>) a6989586621679210852 (f6989586621679210850 b6989586621679210853)) ((~>) s6989586621679210851 (f6989586621679210850 t6989586621679210854)))
data MkLensSym2 (a6989586621679214677 :: (~>) s6989586621679210851 a6989586621679210852) (a6989586621679214678 :: (~>) s6989586621679210851 ((~>) b6989586621679210853 t6989586621679210854)) :: forall f6989586621679210850. (~>) ((~>) a6989586621679210852 (f6989586621679210850 b6989586621679210853)) ((~>) s6989586621679210851 (f6989586621679210850 t6989586621679210854))
data MkLensSym3 (a6989586621679214677 :: (~>) s6989586621679210851 a6989586621679210852) (a6989586621679214678 :: (~>) s6989586621679210851 ((~>) b6989586621679210853 t6989586621679210854)) (a6989586621679214679 :: (~>) a6989586621679210852 (f6989586621679210850 b6989586621679210853)) :: (~>) s6989586621679210851 (f6989586621679210850 t6989586621679210854)
type MkLensSym4 (a6989586621679214677 :: (~>) s6989586621679210851 a6989586621679210852) (a6989586621679214678 :: (~>) s6989586621679210851 ((~>) b6989586621679210853 t6989586621679210854)) (a6989586621679214679 :: (~>) a6989586621679210852 (f6989586621679210850 b6989586621679210853)) (a6989586621679214680 :: s6989586621679210851) = MkLens a6989586621679214677 a6989586621679214678 a6989586621679214679 a6989586621679214680
data CloneLensSym0 :: forall a6989586621679237792 b6989586621679237793 f6989586621679237791 s6989586621679237794 t6989586621679237795. (~>) ((~>) ((~>) a6989586621679237792 (Context a6989586621679237792 b6989586621679237793 b6989586621679237793)) ((~>) s6989586621679237794 (Context a6989586621679237792 b6989586621679237793 t6989586621679237795))) ((~>) ((~>) a6989586621679237792 (f6989586621679237791 b6989586621679237793)) ((~>) s6989586621679237794 (f6989586621679237791 t6989586621679237795)))
data CloneLensSym1 (a6989586621679238155 :: (~>) ((~>) a6989586621679237792 (Context a6989586621679237792 b6989586621679237793 b6989586621679237793)) ((~>) s6989586621679237794 (Context a6989586621679237792 b6989586621679237793 t6989586621679237795))) :: forall f6989586621679237791. (~>) ((~>) a6989586621679237792 (f6989586621679237791 b6989586621679237793)) ((~>) s6989586621679237794 (f6989586621679237791 t6989586621679237795))
data CloneLensSym2 (a6989586621679238155 :: (~>) ((~>) a6989586621679237792 (Context a6989586621679237792 b6989586621679237793 b6989586621679237793)) ((~>) s6989586621679237794 (Context a6989586621679237792 b6989586621679237793 t6989586621679237795))) (a6989586621679238156 :: (~>) a6989586621679237792 (f6989586621679237791 b6989586621679237793)) :: (~>) s6989586621679237794 (f6989586621679237791 t6989586621679237795)
type CloneLensSym3 (a6989586621679238155 :: (~>) ((~>) a6989586621679237792 (Context a6989586621679237792 b6989586621679237793 b6989586621679237793)) ((~>) s6989586621679237794 (Context a6989586621679237792 b6989586621679237793 t6989586621679237795))) (a6989586621679238156 :: (~>) a6989586621679237792 (f6989586621679237791 b6989586621679237793)) (a6989586621679238157 :: s6989586621679237794) = CloneLens a6989586621679238155 a6989586621679238156 a6989586621679238157
data FoldingSym0 :: forall a6989586621679210843 f6989586621679210840 r6989586621679210841 s6989586621679210842. (~>) ((~>) s6989586621679210842 (f6989586621679210840 a6989586621679210843)) ((~>) ((~>) a6989586621679210843 ((Const r6989586621679210841 :: Type -> Type) a6989586621679210843)) ((~>) s6989586621679210842 ((Const r6989586621679210841 :: Type -> Type) s6989586621679210842)))
data FoldingSym1 (a6989586621679214614 :: (~>) s6989586621679210842 (f6989586621679210840 a6989586621679210843)) :: forall r6989586621679210841. (~>) ((~>) a6989586621679210843 ((Const r6989586621679210841 :: Type -> Type) a6989586621679210843)) ((~>) s6989586621679210842 ((Const r6989586621679210841 :: Type -> Type) s6989586621679210842))
data FoldingSym2 (a6989586621679214614 :: (~>) s6989586621679210842 (f6989586621679210840 a6989586621679210843)) (a6989586621679214615 :: (~>) a6989586621679210843 ((Const r6989586621679210841 :: Type -> Type) a6989586621679210843)) :: (~>) s6989586621679210842 ((Const r6989586621679210841 :: Type -> Type) s6989586621679210842)
type FoldingSym3 (a6989586621679214614 :: (~>) s6989586621679210842 (f6989586621679210840 a6989586621679210843)) (a6989586621679214615 :: (~>) a6989586621679210843 ((Const r6989586621679210841 :: Type -> Type) a6989586621679210843)) (a6989586621679214616 :: s6989586621679210842) = Folding a6989586621679214614 a6989586621679214615 a6989586621679214616
data FoldedSym0 :: forall a6989586621679210839 f6989586621679210837 r6989586621679210838. (~>) ((~>) a6989586621679210839 ((Const r6989586621679210838 :: Type -> Type) a6989586621679210839)) ((~>) (f6989586621679210837 a6989586621679210839) ((Const r6989586621679210838 :: Type -> Type) (f6989586621679210837 a6989586621679210839)))
data FoldedSym1 (a6989586621679214601 :: (~>) a6989586621679210839 ((Const r6989586621679210838 :: Type -> Type) a6989586621679210839)) :: forall f6989586621679210837. (~>) (f6989586621679210837 a6989586621679210839) ((Const r6989586621679210838 :: Type -> Type) (f6989586621679210837 a6989586621679210839))
type FoldedSym2 (a6989586621679214601 :: (~>) a6989586621679210839 ((Const r6989586621679210838 :: Type -> Type) a6989586621679210839)) (a6989586621679214602 :: f6989586621679210837 a6989586621679210839) = Folded a6989586621679214601 a6989586621679214602
data L1Sym0 :: forall a6989586621679210834 b6989586621679210836 c6989586621679210835 f6989586621679210833. (~>) ((~>) a6989586621679210834 (f6989586621679210833 b6989586621679210836)) ((~>) (a6989586621679210834, c6989586621679210835) (f6989586621679210833 (b6989586621679210836, c6989586621679210835)))
data L1Sym1 (a6989586621679214586 :: (~>) a6989586621679210834 (f6989586621679210833 b6989586621679210836)) :: forall c6989586621679210835. (~>) (a6989586621679210834, c6989586621679210835) (f6989586621679210833 (b6989586621679210836, c6989586621679210835))
type L1Sym2 (a6989586621679214586 :: (~>) a6989586621679210834 (f6989586621679210833 b6989586621679210836)) (a6989586621679214587 :: (a6989586621679210834, c6989586621679210835)) = L1 a6989586621679214586 a6989586621679214587
data L2Sym0 :: forall a6989586621679210830 b6989586621679210831 c6989586621679210832 f6989586621679210829. (~>) ((~>) b6989586621679210831 (f6989586621679210829 c6989586621679210832)) ((~>) (a6989586621679210830, b6989586621679210831) (f6989586621679210829 (a6989586621679210830, c6989586621679210832)))
data L2Sym1 (a6989586621679214571 :: (~>) b6989586621679210831 (f6989586621679210829 c6989586621679210832)) :: forall a6989586621679210830. (~>) (a6989586621679210830, b6989586621679210831) (f6989586621679210829 (a6989586621679210830, c6989586621679210832))
type L2Sym2 (a6989586621679214571 :: (~>) b6989586621679210831 (f6989586621679210829 c6989586621679210832)) (a6989586621679214572 :: (a6989586621679210830, b6989586621679210831)) = L2 a6989586621679214571 a6989586621679214572
type ZSym0 =  'Z
data SSym0 :: (~>) N N
type SSym1 (t6989586621679202515 :: N) =  'S t6989586621679202515
data IxListSym0 :: forall a6989586621679210828 f6989586621679210827. (~>) N ((~>) ((~>) a6989586621679210828 (f6989586621679210827 a6989586621679210828)) ((~>) [a6989586621679210828] (f6989586621679210827 [a6989586621679210828])))
data IxListSym1 (a6989586621679214550 :: N) :: forall a6989586621679210828 f6989586621679210827. (~>) ((~>) a6989586621679210828 (f6989586621679210827 a6989586621679210828)) ((~>) [a6989586621679210828] (f6989586621679210827 [a6989586621679210828]))
data IxListSym2 (a6989586621679214550 :: N) (a6989586621679214551 :: (~>) a6989586621679210828 (f6989586621679210827 a6989586621679210828)) :: (~>) [a6989586621679210828] (f6989586621679210827 [a6989586621679210828])
type IxListSym3 (a6989586621679214550 :: N) (a6989586621679214551 :: (~>) a6989586621679210828 (f6989586621679210827 a6989586621679210828)) (a6989586621679214552 :: [a6989586621679210828]) = IxList a6989586621679214550 a6989586621679214551 a6989586621679214552
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneLensSym0
instance forall (f6989586621679237791 :: * -> *) s6989586621679237794 a6989586621679237792 b6989586621679237793 t6989586621679237795 (a6989586621679238155 :: (a6989586621679237792 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679237792 b6989586621679237793 b6989586621679237793) Data.Singletons.Internal.~> (s6989586621679237794 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679237792 b6989586621679237793 t6989586621679237795)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym1 a6989586621679238155)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym1 d)
instance forall (f6989586621679237791 :: * -> *) s6989586621679237794 a6989586621679237792 b6989586621679237793 t6989586621679237795 (a6989586621679238156 :: (a6989586621679237792 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679237792 b6989586621679237793 b6989586621679237793) Data.Singletons.Internal.~> (s6989586621679237794 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a6989586621679237792 b6989586621679237793 t6989586621679237795)) (a6989586621679238155 :: a6989586621679237792 Data.Singletons.Internal.~> f6989586621679237791 b6989586621679237793). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneLensSym2 a6989586621679238156 a6989586621679238155)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Context a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneLensSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.CloneTraversalSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.CloneTraversalSym0
instance forall (f6989586621679237786 :: * -> *) s6989586621679237789 a6989586621679237787 b6989586621679237788 t6989586621679237790 (a6989586621679238138 :: (a6989586621679237787 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679237787 b6989586621679237788 b6989586621679237788) Data.Singletons.Internal.~> (s6989586621679237789 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679237787 b6989586621679237788 t6989586621679237790)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym1 a6989586621679238138)
instance forall a b s t (f :: * -> *) (d :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym1 d)
instance forall (f6989586621679237786 :: * -> *) s6989586621679237789 a6989586621679237787 b6989586621679237788 t6989586621679237790 (a6989586621679238139 :: (a6989586621679237787 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679237787 b6989586621679237788 b6989586621679237788) Data.Singletons.Internal.~> (s6989586621679237789 Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a6989586621679237787 b6989586621679237788 t6989586621679237790)) (a6989586621679238138 :: a6989586621679237787 Data.Singletons.Internal.~> f6989586621679237786 b6989586621679237788). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.CloneTraversalSym2 a6989586621679238139 a6989586621679238138)
instance forall a b s t (f :: * -> *) (d1 :: (a Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Type.Lens.Internal.Bazaar a b t)) (d2 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.CloneTraversalSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679238164Scrutinee_6989586621679237807Sym0
instance forall k2 k3 t k4 k (l6989586621679238161 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679238164Scrutinee_6989586621679237807Sym1 l6989586621679238161)
instance forall k2 k3 t k4 k (f6989586621679238162 :: (Data.Singletons.Internal.TyFun k3 (Data.Type.Lens.Internal.Context k3 t t) -> *) Data.Singletons.Internal.~> (k4 Data.Singletons.Internal.~> k)) (l6989586621679238161 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679238164Scrutinee_6989586621679237807Sym2 f6989586621679238162 l6989586621679238161)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679238165Sym0
instance forall k1 k2 k3 t k4 (l6989586621679238161 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679238165Sym1 l6989586621679238161)
instance forall k1 k2 t k3 k4 (f6989586621679238162 :: k4) (l6989586621679238161 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679238165Sym2 f6989586621679238162 l6989586621679238161)
instance forall k1 t k2 k3 k4 (x6989586621679238163 :: k4) (f6989586621679238162 :: k3) (l6989586621679238161 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679238165Sym3 x6989586621679238163 f6989586621679238162 l6989586621679238161)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679238147Sym0
instance forall k1 k2 k3 t k4 (l6989586621679238144 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679238147Sym1 l6989586621679238144)
instance forall k1 k2 t k3 k4 (f6989586621679238145 :: k4) (l6989586621679238144 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679238147Sym2 f6989586621679238145 l6989586621679238144)
instance forall k1 t k2 k3 k4 (xs6989586621679238146 :: k4) (f6989586621679238145 :: k3) (l6989586621679238144 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679238147Sym3 xs6989586621679238146 f6989586621679238145 l6989586621679238144)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetSym0
instance forall a6989586621679210866 b6989586621679210867 s6989586621679210864 t6989586621679210865 (a6989586621679214764 :: (a6989586621679210866 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210867) Data.Singletons.Internal.~> (s6989586621679210864 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210865)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym1 a6989586621679214764)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym1 d)
instance forall a6989586621679210866 b6989586621679210867 s6989586621679210864 t6989586621679210865 (a6989586621679214765 :: (a6989586621679210866 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210867) Data.Singletons.Internal.~> (s6989586621679210864 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210865)) (a6989586621679214764 :: b6989586621679210867). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetSym2 a6989586621679214765 a6989586621679214764)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.OverSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.OverSym0
instance forall a6989586621679210870 b6989586621679210871 s6989586621679210868 t6989586621679210869 (a6989586621679214747 :: (a6989586621679210870 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210871) Data.Singletons.Internal.~> (s6989586621679210868 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210869)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym1 a6989586621679214747)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym1 d)
instance forall a6989586621679210870 b6989586621679210871 s6989586621679210868 t6989586621679210869 (a6989586621679214748 :: (a6989586621679210870 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210871) Data.Singletons.Internal.~> (s6989586621679210868 Data.Singletons.Internal.~> Data.Functor.Identity.Identity t6989586621679210869)) (a6989586621679214747 :: a6989586621679210870 Data.Singletons.Internal.~> b6989586621679210871). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.OverSym2 a6989586621679214748 a6989586621679214747)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Identity.Identity t)) (d2 :: a Data.Singletons.Internal.~> b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.OverSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ViewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ViewSym0
instance forall a6989586621679210862 s6989586621679210863 (a6989586621679214734 :: (a6989586621679210862 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679210862 a6989586621679210862) Data.Singletons.Internal.~> (s6989586621679210863 Data.Singletons.Internal.~> Data.Functor.Const.Const a6989586621679210862 s6989586621679210863)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ViewSym1 a6989586621679214734)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const a a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const a s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ViewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SetsSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SetsSym0
instance forall a6989586621679210858 b6989586621679210859 s6989586621679210860 t6989586621679210861 (a6989586621679214706 :: (a6989586621679210858 Data.Singletons.Internal.~> b6989586621679210859) Data.Singletons.Internal.~> (s6989586621679210860 Data.Singletons.Internal.~> t6989586621679210861)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym1 a6989586621679214706)
instance forall a b s t (d :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym1 d)
instance forall a6989586621679210858 b6989586621679210859 s6989586621679210860 t6989586621679210861 (a6989586621679214707 :: (a6989586621679210858 Data.Singletons.Internal.~> b6989586621679210859) Data.Singletons.Internal.~> (s6989586621679210860 Data.Singletons.Internal.~> t6989586621679210861)) (a6989586621679214706 :: a6989586621679210858 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679210859). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.SetsSym2 a6989586621679214707 a6989586621679214706)
instance forall a b s t (d1 :: (a Data.Singletons.Internal.~> b) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> t)) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Identity.Identity b). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.SetsSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToSym0
instance forall r6989586621679210857 s6989586621679210855 a6989586621679210856 (a6989586621679214689 :: s6989586621679210855 Data.Singletons.Internal.~> a6989586621679210856). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym1 a6989586621679214689)
instance forall s a r (d :: s Data.Singletons.Internal.~> a). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym1 d)
instance forall r6989586621679210857 s6989586621679210855 a6989586621679210856 (a6989586621679214690 :: s6989586621679210855 Data.Singletons.Internal.~> a6989586621679210856) (a6989586621679214689 :: a6989586621679210856 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210857 a6989586621679210856). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToSym2 a6989586621679214690 a6989586621679214689)
instance forall s a r (d1 :: s Data.Singletons.Internal.~> a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.ToSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.MkLensSym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.MkLensSym0
instance forall b6989586621679210853 (f6989586621679210850 :: * -> *) t6989586621679210854 s6989586621679210851 a6989586621679210852 (a6989586621679214677 :: s6989586621679210851 Data.Singletons.Internal.~> a6989586621679210852). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym1 a6989586621679214677)
instance forall s a b t (f :: * -> *) (d :: s Data.Singletons.Internal.~> a). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym1 d)
instance forall (f6989586621679210850 :: * -> *) b6989586621679210853 t6989586621679210854 s6989586621679210851 a6989586621679210852 (a6989586621679214678 :: s6989586621679210851 Data.Singletons.Internal.~> a6989586621679210852) (a6989586621679214677 :: s6989586621679210851 Data.Singletons.Internal.~> (b6989586621679210853 Data.Singletons.Internal.~> t6989586621679210854)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym2 a6989586621679214678 a6989586621679214677)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym2 d1 d2)
instance forall (f6989586621679210850 :: * -> *) b6989586621679210853 t6989586621679210854 s6989586621679210851 a6989586621679210852 (a6989586621679214679 :: s6989586621679210851 Data.Singletons.Internal.~> a6989586621679210852) (a6989586621679214678 :: s6989586621679210851 Data.Singletons.Internal.~> (b6989586621679210853 Data.Singletons.Internal.~> t6989586621679210854)) (a6989586621679214677 :: a6989586621679210852 Data.Singletons.Internal.~> f6989586621679210850 b6989586621679210853). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.MkLensSym3 a6989586621679214679 a6989586621679214678 a6989586621679214677)
instance forall s a b t (f :: * -> *) (d1 :: s Data.Singletons.Internal.~> a) (d2 :: s Data.Singletons.Internal.~> (b Data.Singletons.Internal.~> t)) (d3 :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2, Data.Singletons.Internal.SingI d3) => Data.Singletons.Internal.SingI (Data.Type.Lens.MkLensSym3 d1 d2 d3)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ToListOfSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.ToListOfSym0
instance forall a6989586621679210848 s6989586621679210849 (a6989586621679214657 :: (a6989586621679210848 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679210848] a6989586621679210848) Data.Singletons.Internal.~> (s6989586621679210849 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679210848] s6989586621679210849)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ToListOfSym1 a6989586621679214657)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const [a] a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const [a] s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.ToListOfSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.UnsafePreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.UnsafePreviewSym0
instance forall a6989586621679210844 s6989586621679210845 (a6989586621679214644 :: (a6989586621679210844 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210844) a6989586621679210844) Data.Singletons.Internal.~> (s6989586621679210845 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210844) s6989586621679210845)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.UnsafePreviewSym1 a6989586621679214644)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.UnsafePreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214650Scrutinee_6989586621679210970Sym0
instance forall a6989586621679210846 k1 (l6989586621679214648 :: (a6989586621679210846 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210846) a6989586621679210846) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210846) k1)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214650Scrutinee_6989586621679210970Sym1 l6989586621679214648)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.PreviewSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.PreviewSym0
instance forall a6989586621679210846 s6989586621679210847 (a6989586621679214631 :: (a6989586621679210846 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210846) a6989586621679210846) Data.Singletons.Internal.~> (s6989586621679210847 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679210846) s6989586621679210847)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.PreviewSym1 a6989586621679214631)
instance forall a s (d :: (a Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) a) Data.Singletons.Internal.~> (s Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a) s)). Data.Singletons.Internal.SingI d => Data.Singletons.Internal.SingI (Data.Type.Lens.PreviewSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldingSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldingSym0
instance forall r6989586621679210841 s6989586621679210842 (f6989586621679210840 :: * -> *) a6989586621679210843 (a6989586621679214614 :: s6989586621679210842 Data.Singletons.Internal.~> f6989586621679210840 a6989586621679210843). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym1 a6989586621679214614)
instance forall s (f :: * -> *) a r (d :: s Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym1 d)
instance forall r6989586621679210841 s6989586621679210842 (f6989586621679210840 :: * -> *) a6989586621679210843 (a6989586621679214615 :: s6989586621679210842 Data.Singletons.Internal.~> f6989586621679210840 a6989586621679210843) (a6989586621679214614 :: a6989586621679210843 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210841 a6989586621679210843). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldingSym2 a6989586621679214615 a6989586621679214614)
instance forall s (f :: * -> *) a r (d1 :: s Data.Singletons.Internal.~> f a) (d2 :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldingSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.FoldedSym0
instance (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r) => Data.Singletons.Internal.SingI Data.Type.Lens.FoldedSym0
instance forall (f6989586621679210837 :: * -> *) r6989586621679210838 a6989586621679210839 (a6989586621679214601 :: a6989586621679210839 Data.Singletons.Internal.~> Data.Functor.Const.Const r6989586621679210838 a6989586621679210839). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.FoldedSym1 a6989586621679214601)
instance forall a r (f :: * -> *) (d :: a Data.Singletons.Internal.~> Data.Functor.Const.Const r a). (Data.Singletons.Prelude.Foldable.SFoldable f, Data.Singletons.Prelude.Monoid.SMonoid r, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.FoldedSym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L1Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L1Sym0
instance forall c6989586621679210835 a6989586621679210834 (f6989586621679210833 :: * -> *) b6989586621679210836 (a6989586621679214586 :: a6989586621679210834 Data.Singletons.Internal.~> f6989586621679210833 b6989586621679210836). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L1Sym1 a6989586621679214586)
instance forall a (f :: * -> *) b c (d :: a Data.Singletons.Internal.~> f b). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L1Sym1 d)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.L2Sym0
instance Data.Singletons.Prelude.Monad.Internal.SFunctor f => Data.Singletons.Internal.SingI Data.Type.Lens.L2Sym0
instance forall a6989586621679210830 b6989586621679210831 (f6989586621679210829 :: * -> *) c6989586621679210832 (a6989586621679214571 :: b6989586621679210831 Data.Singletons.Internal.~> f6989586621679210829 c6989586621679210832). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.L2Sym1 a6989586621679214571)
instance forall b (f :: * -> *) c a (d :: b Data.Singletons.Internal.~> f c). (Data.Singletons.Prelude.Monad.Internal.SFunctor f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.L2Sym1 d)
instance forall (f6989586621679210827 :: * -> *) a6989586621679210828 (a6989586621679214551 :: Data.Type.Lens.N) (a6989586621679214550 :: a6989586621679210828 Data.Singletons.Internal.~> f6989586621679210827 a6989586621679210828). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym2 a6989586621679214551 a6989586621679214550)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.IxListSym1 a6989586621679214550)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.IxListSym0
instance Data.Singletons.Prelude.Monad.Internal.SApplicative f => Data.Singletons.Internal.SingI Data.Type.Lens.IxListSym0
instance (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym1 d)
instance forall a (f :: * -> *) (d1 :: Data.Type.Lens.N) (d2 :: a Data.Singletons.Internal.~> f a). (Data.Singletons.Prelude.Monad.Internal.SApplicative f, Data.Singletons.Internal.SingI d1, Data.Singletons.Internal.SingI d2) => Data.Singletons.Internal.SingI (Data.Type.Lens.IxListSym2 d1 d2)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214775Sym0
instance forall k1 k2 k3 k4 (l6989586621679214772 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214775Sym1 l6989586621679214772)
instance forall k1 k2 k3 k4 (y6989586621679214773 :: k4) (l6989586621679214772 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214775Sym2 y6989586621679214773 l6989586621679214772)
instance forall k1 k2 k3 k4 (a_69895866216792147706989586621679214774 :: k4) (y6989586621679214773 :: k3) (l6989586621679214772 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214775Sym3 a_69895866216792147706989586621679214774 y6989586621679214773 l6989586621679214772)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214756Scrutinee_6989586621679210938Sym0
instance forall a6989586621679919356 b6989586621679919354 k1 k (l6989586621679214753 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214756Scrutinee_6989586621679210938Sym1 l6989586621679214753)
instance forall a6989586621679919356 b6989586621679919354 k1 k (f6989586621679214754 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Identity.Identity b6989586621679919354) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)) (l6989586621679214753 :: a6989586621679919356 Data.Singletons.Internal.~> b6989586621679919354). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214756Scrutinee_6989586621679210938Sym2 f6989586621679214754 l6989586621679214753)
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214740Scrutinee_6989586621679210943Sym0
instance forall a6989586621679095349 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679214738 :: (Data.Singletons.Internal.TyFun a6989586621679095349 (Data.Functor.Const.Const a6989586621679095349 b6989586621679095350) -> *) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214740Scrutinee_6989586621679210943Sym1 l6989586621679214738)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214717Sym0
instance forall k1 k2 k3 k4 (f6989586621679214714 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214717Sym1 f6989586621679214714)
instance forall k1 k2 k3 k4 (g6989586621679214715 :: k4) (f6989586621679214714 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214717Sym2 g6989586621679214715 f6989586621679214714)
instance forall k1 k2 k3 k4 (a_69895866216792147126989586621679214716 :: k4) (g6989586621679214715 :: k2 Data.Singletons.Internal.~> Data.Functor.Identity.Identity k3) (f6989586621679214714 :: k1). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214717Sym3 a_69895866216792147126989586621679214716 g6989586621679214715 f6989586621679214714)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214720Scrutinee_6989586621679210948Sym0
instance forall k1 k2 k3 k4 (f6989586621679214714 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214720Scrutinee_6989586621679210948Sym1 f6989586621679214714)
instance forall k1 k2 k3 k4 (g6989586621679214715 :: k4) (f6989586621679214714 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214720Scrutinee_6989586621679210948Sym2 g6989586621679214715 f6989586621679214714)
instance forall k1 k2 k3 k4 (x6989586621679214719 :: k4) (g6989586621679214715 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679214714 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214720Scrutinee_6989586621679210948Sym3 x6989586621679214719 g6989586621679214715 f6989586621679214714)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214698Scrutinee_6989586621679210951Sym0
instance forall k k2 k3 (f6989586621679214695 :: k2 Data.Singletons.Internal.~> k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214698Scrutinee_6989586621679210951Sym1 f6989586621679214695)
instance forall k k2 k3 (g6989586621679214696 :: k2 Data.Singletons.Internal.~> k3) (f6989586621679214695 :: k3 Data.Singletons.Internal.~> k). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214698Scrutinee_6989586621679210951Sym2 g6989586621679214696 f6989586621679214695)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214663Scrutinee_6989586621679210956Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679214661 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const [a6989586621679919356] b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214663Scrutinee_6989586621679210956Sym1 l6989586621679214661)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214664Sym0
instance forall k1 k2 k3 (l6989586621679214661 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214664Sym1 l6989586621679214661)
instance forall k1 k2 k3 (x6989586621679214662 :: k3) (l6989586621679214661 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214664Sym2 x6989586621679214662 l6989586621679214661)
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214637Scrutinee_6989586621679210963Sym0
instance forall a6989586621679919356 k6989586621679095348 (b6989586621679095350 :: k6989586621679095348) k1 k (l6989586621679214635 :: (a6989586621679919356 Data.Singletons.Internal.~> Data.Functor.Const.Const (Data.Monoid.First a6989586621679919356) b6989586621679095350) Data.Singletons.Internal.~> (k1 Data.Singletons.Internal.~> k)). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214637Scrutinee_6989586621679210963Sym1 l6989586621679214635)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214623Scrutinee_6989586621679210976Sym0
instance forall b6989586621680695205 (f6989586621680695203 :: * -> *) k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621679214620 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214623Scrutinee_6989586621679210976Sym1 f6989586621679214620)
instance forall (f6989586621680695203 :: * -> *) b6989586621680695205 k1 (t6989586621680695202 :: * -> *) a6989586621680695204 (g6989586621679214621 :: k1 Data.Singletons.Internal.~> t6989586621680695202 a6989586621680695204) (f6989586621679214620 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214623Scrutinee_6989586621679210976Sym2 g6989586621679214621 f6989586621679214620)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Let6989586621679214607Scrutinee_6989586621679210981Sym0
instance forall (t6989586621680695202 :: * -> *) a6989586621680695204 (f6989586621680695203 :: * -> *) b6989586621680695205 (f6989586621679214605 :: a6989586621680695204 Data.Singletons.Internal.~> f6989586621680695203 b6989586621680695205). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Let6989586621679214607Scrutinee_6989586621679210981Sym1 f6989586621679214605)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214593Sym0
instance forall k2 k3 k4 k5 (f6989586621679214590 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214593Sym1 f6989586621679214590)
instance forall k2 k3 k4 k5 (x6989586621679214591 :: k5) (f6989586621679214590 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214593Sym2 x6989586621679214591 f6989586621679214590)
instance forall k2 k3 k4 k5 (y6989586621679214592 :: k5) (x6989586621679214591 :: k4) (f6989586621679214590 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214593Sym3 y6989586621679214592 x6989586621679214591 f6989586621679214590)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214578Sym0
instance forall k2 k3 k4 k5 (f6989586621679214575 :: k5). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214578Sym1 f6989586621679214575)
instance forall k2 k3 k4 k5 (x6989586621679214576 :: k5) (f6989586621679214575 :: k4). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214578Sym2 x6989586621679214576 f6989586621679214575)
instance forall k2 k3 k4 k5 (y6989586621679214577 :: k5) (x6989586621679214576 :: k4) (f6989586621679214575 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214578Sym3 y6989586621679214577 x6989586621679214576 f6989586621679214575)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Lambda_6989586621679214559Sym0
instance forall k1 k2 k3 (f6989586621679214556 :: k3). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214559Sym1 f6989586621679214556)
instance forall k1 k2 k3 (x6989586621679214557 :: k3) (f6989586621679214556 :: k2). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214559Sym2 x6989586621679214557 f6989586621679214556)
instance forall k1 k2 k3 (xs6989586621679214558 :: k3) (x6989586621679214557 :: k2) (f6989586621679214556 :: [k1]). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Lambda_6989586621679214559Sym3 xs6989586621679214558 x6989586621679214557 f6989586621679214556)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ShowsPrec_6989586621679208339Sym0
instance Data.Singletons.Prelude.Show.PShow Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ShowsPrec_6989586621679208339Sym1 a6989586621679208336)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ShowsPrec_6989586621679208339Sym2 a6989586621679208337 a6989586621679208336)
instance Data.Singletons.Prelude.Show.SShow Data.Type.Lens.N => Data.Singletons.Prelude.Show.SShow Data.Type.Lens.N
instance Data.Singletons.Decide.SDecide Data.Type.Lens.N => Data.Singletons.Decide.SDecide Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.Compare_6989586621679206559Sym0
instance Data.Singletons.Prelude.Ord.POrd Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.Compare_6989586621679206559Sym1 a6989586621679206557)
instance Data.Singletons.Prelude.Ord.SOrd Data.Type.Lens.N => Data.Singletons.Prelude.Ord.SOrd Data.Type.Lens.N
instance Data.Singletons.Prelude.Eq.PEq Data.Type.Lens.N
instance Data.Singletons.Prelude.Eq.SEq Data.Type.Lens.N => Data.Singletons.Prelude.Eq.SEq Data.Type.Lens.N
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.SSym0
instance Data.Singletons.Internal.SingI Data.Type.Lens.SSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.GettingSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym1 r6989586621679201101)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.GettingSym2 s6989586621679201102 r6989586621679201101)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.ASetterSym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym1 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym2 t6989586621679201105 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.ASetterSym3 a6989586621679201106 t6989586621679201105 s6989586621679201104)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLike'Sym0
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym1 f6989586621679201108)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLike'Sym2 s6989586621679201109 f6989586621679201108)
instance Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings Data.Type.Lens.LensLikeSym0
instance forall k6989586621679201126 (f6989586621679201111 :: k6989586621679201126 -> *). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym1 f6989586621679201111)
instance forall k6989586621679201126 (s6989586621679201112 :: k6989586621679201126 -> *) f6989586621679201111. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym2 s6989586621679201112 f6989586621679201111)
instance forall k6989586621679201126 (t6989586621679201113 :: k6989586621679201126 -> *) s6989586621679201112 (f6989586621679201111 :: k6989586621679201126). Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym3 t6989586621679201113 s6989586621679201112 f6989586621679201111)
instance forall k6989586621679201126 (a6989586621679201114 :: k6989586621679201126 -> *) t6989586621679201113 (s6989586621679201112 :: k6989586621679201126) f6989586621679201111. Data.Singletons.SuppressUnusedWarnings.SuppressUnusedWarnings (Data.Type.Lens.LensLikeSym4 a6989586621679201114 t6989586621679201113 s6989586621679201112 f6989586621679201111)
instance Data.Singletons.Internal.SingKind Data.Type.Lens.N
instance Data.Singletons.Internal.SingI 'Data.Type.Lens.Z
instance Data.Singletons.Internal.SingI n => Data.Singletons.Internal.SingI ('Data.Type.Lens.S n)
instance Data.Singletons.Internal.SingI (Data.Singletons.Internal.TyCon1 'Data.Type.Lens.S)
instance GHC.Generics.Generic Data.Type.Lens.N
instance GHC.Read.Read Data.Type.Lens.N
instance GHC.Classes.Ord Data.Type.Lens.N
instance GHC.Classes.Eq Data.Type.Lens.N
instance GHC.Show.Show Data.Type.Lens.N


-- | See source for examples of using type-level lenses from
--   <a>Data.Type.Lens</a>.
module Data.Type.Lens.Example

-- | <pre>
--   &gt;&gt;&gt; :kind! SetExample
--   '( 'True, 6 )
--   </pre>
type SetExample = Set L1_  'True '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ViewExample
--   6
--   </pre>
type ViewExample = View L2_ '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! ToExample
--   6
--   </pre>
type ToExample = View (To_ SndSym0) '("hello", 6)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '( "hello", 'False )
--   </pre>
type OverExample = Over L2_ NotSym0 '("hello",  'True)

-- | <pre>
--   &gt;&gt;&gt; :kind! TraversalExample
--   '[ 'False, 'True, 'True ]
--   </pre>
type TraversalExample = Over Traverse_ NotSym0 '[ 'True,  'False,  'False]

-- | <pre>
--   &gt;&gt;&gt; :kind! NestedExample
--   6
--   </pre>
type NestedExample = View (L2_ .@ L1_) '("hello", '(6,  'False))

-- | <pre>
--   &gt;&gt;&gt; :kind! FoldExample
--   '["hello", "world", "curry"]
--   </pre>
type FoldExample = ToListOf (Traverse_ .@ L1_) '['("hello",  'True), '("world",  'False), '("curry",  'False)]

-- | <pre>
--   &gt;&gt;&gt; :kind! UnsafeExample
--   Error "Failed indexing into empty traversal"
--   </pre>
type UnsafeExample = UnsafePreview Traverse_ '[]

-- | <pre>
--   &gt;&gt;&gt; :kind! IxExample
--   '["hello", "haskell", "curry"]
--   </pre>
type IxExample = Set (IxList_ ( 'S  'Z)) "haskell" '["hello", "world", "curry"]

-- | <pre>
--   &gt;&gt;&gt; :kind! CloneExample
--   "hello"
--   </pre>
type CloneExample = View (CloneLens_ L1_) '("hello", 6)
type SetExample' = '("hello", 6) & L1_ .~  'True
type ViewExample' = '("hello", 6) ^. L2_
type ToExample' = '("hello", 6) ^. To_ SndSym0
type OverExample' = '("hello",  'True) & L2_ %~ NotSym0
type TraversalExample' = '[ 'True,  'False,  'False] & Traverse_ %~ NotSym0
type NestedExample' = '("hello", '(6,  'False)) ^. L2_ .@ L1_
type FoldExample' = '['("hello",  'True), '("world",  'False), '("curry",  'False)] ^.. Traverse_ .@ L1_
type IxExample' = '["hello", "world", "curry"] & IxList_ ( 'S  'Z) .~ "haskell"
type UnsafeExample' = '[] ^?! Traverse_
type CloneExample' = '("hello", 6) ^. CloneLens_ L1_
